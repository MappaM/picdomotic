

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Nov 25 01:20:57 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F23K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           	psect	smallconst
    58  000500                     __psmallconst:
    59                           	opt stack 0
    60  000500  00                 	db	0
    61  000501                     _dpowers:
    62                           	opt stack 0
    63  000501  0001               	dw	1
    64  000503  0000               	dw	0
    65  000505  000A               	dw	10
    66  000507  0000               	dw	0
    67  000509  0064               	dw	100
    68  00050B  0000               	dw	0
    69  00050D  03E8               	dw	1000
    70  00050F  0000               	dw	0
    71  000511  2710               	dw	10000
    72  000513  0000               	dw	0
    73  000515  86A0               	dw	34464
    74  000517  0001               	dw	1
    75  000519  4240               	dw	16960
    76  00051B  000F               	dw	15
    77  00051D  9680               	dw	38528
    78  00051F  0098               	dw	152
    79  000521  E100               	dw	57600
    80  000523  05F5               	dw	1525
    81  000525  CA00               	dw	51712
    82  000527  3B9A               	dw	15258
    83  000529                     __end_of_dpowers:
    84                           	opt stack 0
    85  0000                     _ADCON0	set	4034
    86  0000                     _ADCON0bits	set	4034
    87  0000                     _ADCON1	set	4033
    88  0000                     _ADCON2	set	4032
    89  0000                     _ADRESH	set	4036
    90  0000                     _ADRESL	set	4035
    91  0000                     _ANSEL	set	3966
    92  0000                     _ANSELH	set	3967
    93  0000                     _BAUDCONbits	set	4024
    94  0000                     _EEADR	set	4009
    95  0000                     _EECON1bits	set	4006
    96  0000                     _EECON2	set	4007
    97  0000                     _EEDATA	set	4008
    98  0000                     _INTCONbits	set	4082
    99  0000                     _OSCCONbits	set	4051
   100  0000                     _PIE1bits	set	3997
   101  0000                     _PIR1bits	set	3998
   102  0000                     _PORTAbits	set	3968
   103  0000                     _PORTBbits	set	3969
   104  0000                     _PORTC	set	3970
   105  0000                     _RCREG	set	4014
   106  0000                     _RCSTA	set	4011
   107  0000                     _RCSTAbits	set	4011
   108  0000                     _SPBRG	set	4015
   109  0000                     _SPBRGH	set	4016
   110  0000                     _TRISA	set	3986
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISC	set	3988
   113  0000                     _TRISCbits	set	3988
   114  0000                     _TXREG	set	4013
   115  0000                     _TXSTA	set	4012
   116  0000                     _TXSTAbits	set	4012
   117  0000                     _FVREN	set	32167
   118  0000                     _HLVDEN	set	32404
   119  0000                     _HLVDIE	set	32002
   120  0000                     _HLVDIF	set	32010
   121  0000                     _HLVDL0	set	32400
   122  0000                     _HLVDL1	set	32401
   123  0000                     _HLVDL2	set	32402
   124  0000                     _HLVDL3	set	32403
   125  0000                     _SBOREN	set	32390
   126  0000                     _VDIRMAG	set	32407
   127  0000                     _WR	set	32049
   128  000529                     __stringdata:
   129                           	opt stack 0
   130  000529                     STR_1:
   131  000529  55                 	db	85	;'U'
   132  00052A  6E                 	db	110	;'n'
   133  00052B  6B                 	db	107	;'k'
   134  00052C  6E                 	db	110	;'n'
   135  00052D  6F                 	db	111	;'o'
   136  00052E  77                 	db	119	;'w'
   137  00052F  20                 	db	32
   138  000530  63                 	db	99	;'c'
   139  000531  6F                 	db	111	;'o'
   140  000532  6D                 	db	109	;'m'
   141  000533  6D                 	db	109	;'m'
   142  000534  61                 	db	97	;'a'
   143  000535  6E                 	db	110	;'n'
   144  000536  64                 	db	100	;'d'
   145  000537  00                 	db	0
   146  000538                     STR_2:
   147  000538  25                 	db	37
   148  000539  6C                 	db	108	;'l'
   149  00053A  75                 	db	117	;'u'
   150  00053B  2E                 	db	46
   151  00053C  25                 	db	37
   152  00053D  36                 	db	54	;'6'
   153  00053E  2E                 	db	46
   154  00053F  36                 	db	54	;'6'
   155  000540  6C                 	db	108	;'l'
   156  000541  75                 	db	117	;'u'
   157  000542  00                 	db	0
   158  000543                     __end_of__stringdata:
   159                           	opt stack 0
   160                           
   161                           ; #config settings
   162  000543  00                 	db	0	; dummy byte at the end
   163  0000                     
   164                           	psect	cinit
   165  001A3A                     __pcinit:
   166                           	opt stack 0
   167  001A3A                     start_initialization:
   168                           	opt stack 0
   169  001A3A                     __initialization:
   170                           	opt stack 0
   171                           
   172                           ; Clear objects allocated to BANK1 (4 bytes)
   173  001A3A  0101               	movlb	1
   174  001A3C  6B22               	clrf	(__pbssBANK1+3)& (0+255),b
   175  001A3E  6B21               	clrf	(__pbssBANK1+2)& (0+255),b
   176  001A40  6B20               	clrf	(__pbssBANK1+1)& (0+255),b
   177  001A42  6B1F               	clrf	__pbssBANK1& (0+255),b
   178                           
   179                           ; Clear objects allocated to BANK0 (23 bytes)
   180  001A44  EE00  F0C2         	lfsr	0,__pbssBANK0
   181  001A48  0E17               	movlw	23
   182  001A4A                     clear_0:
   183  001A4A  6AEE               	clrf	postinc0,c
   184  001A4C  06E8               	decf	wreg,f,c
   185  001A4E  E1FD               	bnz	clear_0
   186                           
   187                           ; Clear objects allocated to COMRAM (3 bytes)
   188  001A50  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   189  001A52  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   190  001A54  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   191  001A56                     end_of_initialization:
   192                           	opt stack 0
   193  001A56                     __end_of__initialization:
   194                           	opt stack 0
   195  001A56  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196  001A58  6EF8               	movwf	tblptru,c
   197  001A5A  0100               	movlb	0
   198  001A5C  EF3F  F004         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           
   203                           	psect	bssCOMRAM
   204  00005A                     __pbssCOMRAM:
   205                           	opt stack 0
   206  00005A                     _chan:
   207                           	opt stack 0
   208  00005A                     	ds	2
   209  00005C                     _USART_Status:
   210                           	opt stack 0
   211  00005C                     	ds	1
   212                           tblptru	equ	0xFF8
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           
   216                           	psect	bssBANK0
   217  0000C2                     __pbssBANK0:
   218                           	opt stack 0
   219  0000C2                     _ADCStringVal:
   220                           	opt stack 0
   221  0000C2                     	ds	4
   222  0000C6                     _globumask:
   223                           	opt stack 0
   224  0000C6                     	ds	2
   225  0000C8                     ftoa@buf:
   226                           	opt stack 0
   227  0000C8                     	ds	17
   228                           tblptru	equ	0xFF8
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           
   232                           	psect	bssBANK1
   233  00011F                     __pbssBANK1:
   234                           	opt stack 0
   235  00011F                     _globdata:
   236                           	opt stack 0
   237  00011F                     	ds	2
   238  000121                     _globdata2:
   239                           	opt stack 0
   240  000121                     	ds	2
   241                           tblptru	equ	0xFF8
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245                           	psect	cstackBANK1
   246  000100                     __pcstackBANK1:
   247                           	opt stack 0
   248  000100                     ??_Delay10KTCYx:
   249  000100                     OpenADC@config2:
   250                           	opt stack 0
   251  000100                     Read_b_eep@badd:
   252                           	opt stack 0
   253  000100                     Write_b_eep@badd:
   254                           	opt stack 0
   255  000100                     OpenUSART@spbrg:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x0
   259  000100                     	ds	1
   260  000101                     Delay10KTCYx@unit:
   261                           	opt stack 0
   262  000101                     OpenADC@portconfig:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x1
   266  000101                     	ds	1
   267  000102                     ??_OpenUSART:
   268  000102                     Write_b_eep@bdat:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x2
   272  000102                     	ds	1
   273  000103                     ??_OpenADC:
   274  000103                     Write_b_eep@GIE_BIT_VAL:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x3
   278  000103                     	ds	1
   279  000104                     setMask@data:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x4
   283  000104                     	ds	1
   284  000105                     OpenUSART@config:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0x5
   288  000105                     	ds	1
   289  000106                     ??_setMask:
   290  000106                     OpenADC@config:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x6
   294  000106                     	ds	3
   295  000109                     setMask@out:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x9
   299  000109                     	ds	2
   300  00010B                     setDefault@set:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0xB
   304  00010B                     	ds	2
   305  00010D                     ??_setDefault:
   306                           
   307                           ; 0 bytes @ 0xD
   308  00010D                     	ds	4
   309  000111                     ??_main:
   310                           
   311                           ; 0 bytes @ 0x11
   312  000111                     	ds	4
   313  000115                     main@lastv:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x15
   317  000115                     	ds	2
   318  000117                     main@spbrg:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x17
   322  000117                     	ds	2
   323  000119                     main@i_709:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x19
   327  000119                     	ds	2
   328  00011B                     main@i_710:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x1B
   332  00011B                     	ds	2
   333  00011D                     main@i:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x1D
   337  00011D                     	ds	2
   338                           tblptru	equ	0xFF8
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           	psect	cstackBANK0
   343  000060                     __pcstackBANK0:
   344                           	opt stack 0
   345  000060                     ??_interruptHandler:
   346                           
   347                           ; 0 bytes @ 0x0
   348  000060                     	ds	18
   349  000072                     interruptHandler@sg:
   350                           	opt stack 0
   351                           
   352                           ; 65 bytes @ 0x12
   353  000072                     	ds	65
   354  0000B3                     _interruptHandler$2080:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0x53
   358  0000B3                     	ds	3
   359  0000B6                     interruptHandler@device_mask:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x56
   363  0000B6                     	ds	2
   364  0000B8                     interruptHandler@command:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x58
   368  0000B8                     	ds	1
   369  0000B9                     interruptHandler@s:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x59
   373  0000B9                     	ds	2
   374  0000BB                     interruptHandler@i:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x5B
   378  0000BB                     	ds	2
   379  0000BD                     interruptHandler@defaut:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x5D
   383  0000BD                     	ds	2
   384  0000BF                     interruptHandler@dev:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x5F
   388  0000BF                     	ds	2
   389  0000C1                     interruptHandler@data:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x61
   393  0000C1                     	ds	1
   394                           tblptru	equ	0xFF8
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           
   398                           	psect	cstackCOMRAM
   399  000001                     __pcstackCOMRAM:
   400                           	opt stack 0
   401  000001                     ??_SetChanADC:
   402  000001                     ??_isdigit:
   403  000001                     ?_ReadADC:
   404                           	opt stack 0
   405  000001                     ?___wmul:
   406                           	opt stack 0
   407  000001                     ?___lwdiv:
   408                           	opt stack 0
   409  000001                     ?___lwmod:
   410                           	opt stack 0
   411  000001                     ?___ftpack:
   412                           	opt stack 0
   413  000001                     ?___ftneg:
   414                           	opt stack 0
   415  000001                     ?___lldiv:
   416                           	opt stack 0
   417  000001                     ReadUSART@data:
   418                           	opt stack 0
   419  000001                     WriteUSART@data:
   420                           	opt stack 0
   421  000001                     ___wmul@multiplier:
   422                           	opt stack 0
   423  000001                     ___lwdiv@dividend:
   424                           	opt stack 0
   425  000001                     ___lwmod@dividend:
   426                           	opt stack 0
   427  000001                     i2Read_b_eep@badd:
   428                           	opt stack 0
   429  000001                     i2Write_b_eep@badd:
   430                           	opt stack 0
   431  000001                     ___ftpack@arg:
   432                           	opt stack 0
   433  000001                     ___ftneg@f1:
   434                           	opt stack 0
   435  000001                     ___lldiv@dividend:
   436                           	opt stack 0
   437                           
   438                           ; 4 bytes @ 0x0
   439  000001                     	ds	1
   440  000002                     ?_ReadSHORT:
   441                           	opt stack 0
   442  000002                     SetChanADC@channel:
   443                           	opt stack 0
   444  000002                     _isdigit$1828:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x1
   448  000002                     	ds	1
   449  000003                     isdigit@c:
   450                           	opt stack 0
   451  000003                     i2Write_b_eep@bdat:
   452                           	opt stack 0
   453  000003                     ___wmul@multiplicand:
   454                           	opt stack 0
   455  000003                     ___lwdiv@divisor:
   456                           	opt stack 0
   457  000003                     ___lwmod@divisor:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x2
   461  000003                     	ds	1
   462  000004                     ??_ReadSHORT:
   463  000004                     ___ftpack@exp:
   464                           	opt stack 0
   465  000004                     i2Write_b_eep@GIE_BIT_VAL:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x3
   469  000004                     	ds	1
   470  000005                     ___ftpack@sign:
   471                           	opt stack 0
   472  000005                     ___lwmod@counter:
   473                           	opt stack 0
   474  000005                     ReadSHORT@d:
   475                           	opt stack 0
   476  000005                     ___wmul@product:
   477                           	opt stack 0
   478  000005                     ___lwdiv@quotient:
   479                           	opt stack 0
   480  000005                     i2setMask@data:
   481                           	opt stack 0
   482  000005                     ___lldiv@divisor:
   483                           	opt stack 0
   484                           
   485                           ; 4 bytes @ 0x4
   486  000005                     	ds	1
   487  000006                     ??___ftpack:
   488                           
   489                           ; 0 bytes @ 0x5
   490  000006                     	ds	1
   491  000007                     ??i2_setMask:
   492  000007                     ___lwdiv@counter:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x6
   496  000007                     	ds	1
   497  000008                     utoa@buf:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x7
   501  000008                     	ds	1
   502  000009                     ?___awtoft:
   503                           	opt stack 0
   504  000009                     ?___lltoft:
   505                           	opt stack 0
   506  000009                     ___awtoft@c:
   507                           	opt stack 0
   508  000009                     ___lldiv@quotient:
   509                           	opt stack 0
   510  000009                     ___lltoft@c:
   511                           	opt stack 0
   512                           
   513                           ; 4 bytes @ 0x8
   514  000009                     	ds	1
   515  00000A                     utoa@val:
   516                           	opt stack 0
   517  00000A                     i2setMask@out:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x9
   521  00000A                     	ds	2
   522  00000C                     ___awtoft@sign:
   523                           	opt stack 0
   524  00000C                     utoa@base:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0xB
   528  00000C                     	ds	1
   529  00000D                     ??___lltoft:
   530  00000D                     ?___ftdiv:
   531                           	opt stack 0
   532  00000D                     ___lldiv@counter:
   533                           	opt stack 0
   534  00000D                     ___ftdiv@f1:
   535                           	opt stack 0
   536                           
   537                           ; 3 bytes @ 0xC
   538  00000D                     	ds	1
   539  00000E                     ?___llmod:
   540                           	opt stack 0
   541  00000E                     utoa@v:
   542                           	opt stack 0
   543  00000E                     ___llmod@dividend:
   544                           	opt stack 0
   545                           
   546                           ; 4 bytes @ 0xD
   547  00000E                     	ds	2
   548  000010                     utoa@c:
   549                           	opt stack 0
   550  000010                     ___ftdiv@f2:
   551                           	opt stack 0
   552                           
   553                           ; 3 bytes @ 0xF
   554  000010                     	ds	1
   555  000011                     ___lltoft@exp:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x10
   559  000011                     	ds	1
   560  000012                     ___llmod@divisor:
   561                           	opt stack 0
   562                           
   563                           ; 4 bytes @ 0x11
   564  000012                     	ds	1
   565  000013                     ??___ftdiv:
   566                           
   567                           ; 0 bytes @ 0x12
   568  000013                     	ds	3
   569  000016                     ___ftdiv@cntr:
   570                           	opt stack 0
   571  000016                     ___llmod@counter:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x15
   575  000016                     	ds	1
   576  000017                     ?_sprintf:
   577                           	opt stack 0
   578  000017                     sprintf@sp:
   579                           	opt stack 0
   580  000017                     ___ftdiv@f3:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x16
   584  000017                     	ds	2
   585  000019                     sprintf@f:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x18
   589  000019                     	ds	1
   590  00001A                     ___ftdiv@exp:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x19
   594  00001A                     	ds	1
   595  00001B                     ___ftdiv@sign:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x1A
   599  00001B                     	ds	1
   600  00001C                     ?___ftmul:
   601                           	opt stack 0
   602  00001C                     ___ftmul@f1:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x1B
   606  00001C                     	ds	3
   607  00001F                     ___ftmul@f2:
   608                           	opt stack 0
   609                           
   610                           ; 3 bytes @ 0x1E
   611  00001F                     	ds	3
   612  000022                     ??___ftmul:
   613                           
   614                           ; 0 bytes @ 0x21
   615  000022                     	ds	1
   616  000023                     ??_sprintf:
   617                           
   618                           ; 0 bytes @ 0x22
   619  000023                     	ds	2
   620  000025                     ___ftmul@exp:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x24
   624  000025                     	ds	1
   625  000026                     ___ftmul@f3_as_product:
   626                           	opt stack 0
   627                           
   628                           ; 3 bytes @ 0x25
   629  000026                     	ds	3
   630  000029                     sprintf@flag:
   631                           	opt stack 0
   632  000029                     ___ftmul@cntr:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x28
   636  000029                     	ds	1
   637  00002A                     ___ftmul@sign:
   638                           	opt stack 0
   639  00002A                     sprintf@ap:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x29
   643  00002A                     	ds	1
   644  00002B                     ?_readtemp:
   645                           	opt stack 0
   646  00002B                     ?___fttol:
   647                           	opt stack 0
   648  00002B                     readtemp@channel:
   649                           	opt stack 0
   650  00002B                     ___fttol@f1:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x2A
   654  00002B                     	ds	1
   655  00002C                     sprintf@_val:
   656                           	opt stack 0
   657                           
   658                           ; 5 bytes @ 0x2B
   659  00002C                     	ds	2
   660  00002E                     readtemp@v:
   661                           	opt stack 0
   662                           
   663                           ; 3 bytes @ 0x2D
   664  00002E                     	ds	1
   665  00002F                     ??___fttol:
   666                           
   667                           ; 0 bytes @ 0x2E
   668  00002F                     	ds	2
   669  000031                     readtemp@vfor12:
   670                           	opt stack 0
   671  000031                     sprintf@width:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x30
   675  000031                     	ds	2
   676  000033                     readtemp@vadc:
   677                           	opt stack 0
   678  000033                     sprintf@prec:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x32
   682  000033                     	ds	1
   683  000034                     ___fttol@sign1:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x33
   687  000034                     	ds	1
   688  000035                     ?___ftadd:
   689                           	opt stack 0
   690  000035                     sprintf@c:
   691                           	opt stack 0
   692  000035                     ___ftadd@f1:
   693                           	opt stack 0
   694  000035                     ___fttol@lval:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x34
   698  000035                     	ds	3
   699  000038                     ___ftadd@f2:
   700                           	opt stack 0
   701                           
   702                           ; 3 bytes @ 0x37
   703  000038                     	ds	1
   704  000039                     ___fttol@exp1:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0x38
   708  000039                     	ds	2
   709  00003B                     ??___ftadd:
   710                           
   711                           ; 0 bytes @ 0x3A
   712  00003B                     	ds	3
   713  00003E                     ___ftadd@sign:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x3D
   717  00003E                     	ds	1
   718  00003F                     ___ftadd@exp2:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x3E
   722  00003F                     	ds	1
   723  000040                     ___ftadd@exp1:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x3F
   727  000040                     	ds	1
   728  000041                     ?___ftsub:
   729                           	opt stack 0
   730  000041                     ___ftsub@f1:
   731                           	opt stack 0
   732                           
   733                           ; 3 bytes @ 0x40
   734  000041                     	ds	3
   735  000044                     ___ftsub@f2:
   736                           	opt stack 0
   737                           
   738                           ; 3 bytes @ 0x43
   739  000044                     	ds	3
   740  000047                     ?_ftoa:
   741                           	opt stack 0
   742  000047                     ftoa@f:
   743                           	opt stack 0
   744                           
   745                           ; 3 bytes @ 0x46
   746  000047                     	ds	3
   747  00004A                     ftoa@status:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x49
   751  00004A                     	ds	2
   752  00004C                     ftoa@rem:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x4B
   756  00004C                     	ds	4
   757  000050                     ftoa@l:
   758                           	opt stack 0
   759                           
   760                           ; 4 bytes @ 0x4F
   761  000050                     	ds	4
   762  000054                     ftoa@cp:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x53
   766  000054                     	ds	2
   767  000056                     putsUSART@data:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x55
   771  000056                     	ds	2
   772  000058                     ??_putsUSART:
   773                           
   774                           ; 0 bytes @ 0x57
   775  000058                     	ds	2
   776                           tblptru	equ	0xFF8
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           
   780 ;;
   781 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   782 ;;
   783 ;; *************** function _main *****************
   784 ;; Defined at:
   785 ;;		line 88 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  i               2   27[BANK1 ] int 
   790 ;;  i               2   25[BANK1 ] int 
   791 ;;  i               2   29[BANK1 ] int 
   792 ;;  spbrg           2   23[BANK1 ] unsigned int 
   793 ;;  lastv           2   21[BANK1 ] unsigned short 
   794 ;; Return value:  Size  Location     Type
   795 ;;		None               void
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, prodl, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1
   803 ;;      Params:         0       0       0
   804 ;;      Locals:         0       0      10
   805 ;;      Temps:          0       0       4
   806 ;;      Totals:         0       0      14
   807 ;;Total ram usage:       14 bytes
   808 ;; Hardware stack levels required when called:    8
   809 ;; This function calls:
   810 ;;		_Delay10KTCYx
   811 ;;		_OpenADC
   812 ;;		_OpenUSART
   813 ;;		_Read_b_eep
   814 ;;		_setDefault
   815 ;;		_setMask
   816 ;; This function is called by:
   817 ;;		Startup code after reset
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text0
   822  00087E                     __ptext0:
   823                           	opt stack 0
   824  00087E                     _main:
   825                           	opt stack 23
   826                           
   827                           ;main.c: 89: OSCCONbits.IRCF2 = 0;
   828                           
   829                           ;incstack = 0
   830  00087E  9CD3               	bcf	4051,6,c	;volatile
   831                           
   832                           ;main.c: 90: OSCCONbits.IRCF1 = 1;
   833  000880  8AD3               	bsf	4051,5,c	;volatile
   834                           
   835                           ;main.c: 91: OSCCONbits.IRCF0 = 1;
   836  000882  88D3               	bsf	4051,4,c	;volatile
   837                           
   838                           ;main.c: 92: TRISC = 0b10000000;
   839  000884  0E80               	movlw	128
   840  000886  6E94               	movwf	3988,c	;volatile
   841                           
   842                           ;main.c: 93: TRISB = 0b00001000;
   843  000888  0E08               	movlw	8
   844  00088A  6E93               	movwf	3987,c	;volatile
   845                           
   846                           ;main.c: 94: TRISA = 0b00001011;
   847  00088C  0E0B               	movlw	11
   848  00088E  6E92               	movwf	3986,c	;volatile
   849                           
   850                           ;main.c: 95: SBOREN = 1;
   851  000890  8CD0               	bsf	4048,6,c	;volatile
   852                           
   853                           ;main.c: 96: FVREN = 1;
   854  000892  8EB4               	bsf	4020,7,c	;volatile
   855                           
   856                           ;main.c: 97: HLVDL3 = 1;
   857  000894  86D2               	bsf	4050,3,c	;volatile
   858                           
   859                           ;main.c: 98: HLVDL2 = 0;
   860  000896  94D2               	bcf	4050,2,c	;volatile
   861                           
   862                           ;main.c: 99: HLVDL1 = 1;
   863  000898  82D2               	bsf	4050,1,c	;volatile
   864                           
   865                           ;main.c: 100: HLVDL0 = 0;
   866  00089A  90D2               	bcf	4050,0,c	;volatile
   867                           
   868                           ;main.c: 101: VDIRMAG = 0;
   869  00089C  9ED2               	bcf	4050,7,c	;volatile
   870                           
   871                           ;main.c: 102: HLVDEN = 1;
   872  00089E  88D2               	bsf	4050,4,c	;volatile
   873                           
   874                           ;main.c: 103: HLVDIF = 0;
   875  0008A0  94A1               	bcf	4001,2,c	;volatile
   876                           
   877                           ;main.c: 104: HLVDIE = 1;
   878  0008A2  84A0               	bsf	4000,2,c	;volatile
   879                           
   880                           ;main.c: 106: while (PORTBbits.RB3 == 1) {
   881  0008A4  D015               	goto	l2831
   882  0008A6                     l2825:
   883                           
   884                           ;main.c: 107: _delay((unsigned long)((50)*(1000000/4000.0)));
   885  0008A6  0E11               	movlw	17
   886  0008A8  0101               	movlb	1	; () banked
   887  0008AA  6F11               	movwf	??_main& (0+255),b
   888  0008AC  0E3A               	movlw	58
   889  0008AE                     u3217:
   890  0008AE  2EE8               	decfsz	wreg,f,c
   891  0008B0  D7FE               	goto	u3217
   892  0008B2  2F11               	decfsz	??_main& (0+255),f,b
   893  0008B4  D7FC               	goto	u3217
   894  0008B6  D000               	nop2	
   895                           
   896                           ;main.c: 108: PORTAbits.RA2 = 1;
   897  0008B8  8480               	bsf	3968,2,c	;volatile
   898                           
   899                           ;main.c: 109: _delay((unsigned long)((50)*(1000000/4000.0)));
   900  0008BA  0E11               	movlw	17
   901  0008BC  0101               	movlb	1	; () banked
   902  0008BE  6F11               	movwf	??_main& (0+255),b
   903  0008C0  0E3A               	movlw	58
   904  0008C2                     u3227:
   905  0008C2  2EE8               	decfsz	wreg,f,c
   906  0008C4  D7FE               	goto	u3227
   907  0008C6  2F11               	decfsz	??_main& (0+255),f,b
   908  0008C8  D7FC               	goto	u3227
   909  0008CA  D000               	nop2	
   910                           
   911                           ;main.c: 110: PORTAbits.RA2 = 0;
   912  0008CC  9480               	bcf	3968,2,c	;volatile
   913  0008CE  0004               	clrwdt		;# 
   914  0008D0                     l2831:
   915  0008D0  B681               	btfsc	3969,3,c	;volatile
   916  0008D2  D7E9               	goto	l2825
   917                           
   918                           ;main.c: 113: }
   919                           ;main.c: 114: setDefault(0);
   920  0008D4  0E00               	movlw	0
   921  0008D6  0101               	movlb	1	; () banked
   922  0008D8  6F0C               	movwf	(setDefault@set+1)& (0+255),b
   923  0008DA  0E00               	movlw	0
   924  0008DC  0101               	movlb	1	; () banked
   925  0008DE  6F0B               	movwf	setDefault@set& (0+255),b
   926  0008E0  EC11  F009         	call	_setDefault	;wreg free
   927                           
   928                           ;main.c: 116: unsigned short lastv = (Read_b_eep(0x06) << 8) | Read_b_eep(0x07) ;
   929  0008E4  0E00               	movlw	0
   930  0008E6  0101               	movlb	1	; () banked
   931  0008E8  6F01               	movwf	(Read_b_eep@badd+1)& (0+255),b
   932  0008EA  0E06               	movlw	6
   933  0008EC  0101               	movlb	1	; () banked
   934  0008EE  6F00               	movwf	Read_b_eep@badd& (0+255),b
   935  0008F0  EC8E  F00D         	call	_Read_b_eep	;wreg free
   936  0008F4  0101               	movlb	1	; () banked
   937  0008F6  6F11               	movwf	??_main& (0+255),b
   938  0008F8  0101               	movlb	1	; () banked
   939  0008FA  5111               	movf	??_main& (0+255),w,b
   940  0008FC  0101               	movlb	1	; () banked
   941  0008FE  6F13               	movwf	(??_main+2)& (0+255),b
   942  000900  6B12               	clrf	(??_main+1)& (0+255),b
   943  000902  0E00               	movlw	0
   944  000904  0101               	movlb	1	; () banked
   945  000906  6F01               	movwf	(Read_b_eep@badd+1)& (0+255),b
   946  000908  0E07               	movlw	7
   947  00090A  0101               	movlb	1	; () banked
   948  00090C  6F00               	movwf	Read_b_eep@badd& (0+255),b
   949  00090E  EC8E  F00D         	call	_Read_b_eep	;wreg free
   950  000912  0101               	movlb	1	; () banked
   951  000914  6F14               	movwf	(??_main+3)& (0+255),b
   952  000916  0101               	movlb	1	; () banked
   953  000918  5114               	movf	(??_main+3)& (0+255),w,b
   954  00091A  0101               	movlb	1	; () banked
   955  00091C  1112               	iorwf	(??_main+1)& (0+255),w,b
   956  00091E  0101               	movlb	1	; () banked
   957  000920  6F15               	movwf	main@lastv& (0+255),b
   958  000922  0101               	movlb	1	; () banked
   959  000924  5113               	movf	(??_main+2)& (0+255),w,b
   960  000926  0101               	movlb	1	; () banked
   961  000928  6F16               	movwf	(main@lastv+1)& (0+255),b
   962                           
   963                           ;main.c: 117: setMask(lastv);
   964  00092A  C115  F104         	movff	main@lastv,setMask@data
   965  00092E  C116  F105         	movff	main@lastv+1,setMask@data+1
   966  000932  EC4B  F006         	call	_setMask	;wreg free
   967                           
   968                           ;main.c: 119: unsigned int spbrg = (unsigned int)( ((float)1 * 1.0e6) /(4.0*(float)9600)
      +                           + 0.5 - 1.0);
   969  000936  0E00               	movlw	0
   970  000938  0101               	movlb	1	; () banked
   971  00093A  6F18               	movwf	(main@spbrg+1)& (0+255),b
   972  00093C  0E19               	movlw	25
   973  00093E  0101               	movlb	1	; () banked
   974  000940  6F17               	movwf	main@spbrg& (0+255),b
   975                           
   976                           ; BSR set to: 1
   977                           ;main.c: 120: OpenUSART( 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   978                           ;main.c: 121: 0b11111111 & 0b11111111, spbrg );
   979  000942  C117  F100         	movff	main@spbrg,OpenUSART@spbrg
   980  000946  C118  F101         	movff	main@spbrg+1,OpenUSART@spbrg+1
   981  00094A  0E7C               	movlw	124
   982  00094C  EC34  F00B         	call	_OpenUSART
   983                           
   984                           ;main.c: 122: BAUDCONbits.BRG16 = 1;
   985  000950  86B8               	bsf	4024,3,c	;volatile
   986  000952  0004               	clrwdt		;# 
   987                           
   988                           ;main.c: 125: Delay10KTCYx(1);
   989  000954  0E01               	movlw	1
   990  000956  EC75  F00D         	call	_Delay10KTCYx
   991  00095A  0004               	clrwdt		;# 
   992                           
   993                           ;main.c: 129: OpenADC(0b10001111 & 0b11111111 & 0b11111111, 0b10000111 & 0b01111111 & 0b
      +                          11111110 & 0b11111101, 0b0000000000000000);
   994  00095C  0E04               	movlw	4
   995  00095E  0101               	movlb	1	; () banked
   996  000960  6F00               	movwf	OpenADC@config2& (0+255),b
   997  000962  0E00               	movlw	0
   998  000964  0101               	movlb	1	; () banked
   999  000966  6F02               	movwf	(OpenADC@portconfig+1)& (0+255),b
  1000  000968  0E00               	movlw	0
  1001  00096A  0101               	movlb	1	; () banked
  1002  00096C  6F01               	movwf	OpenADC@portconfig& (0+255),b
  1003  00096E  0E8F               	movlw	143
  1004  000970  ECF2  F00A         	call	_OpenADC
  1005                           
  1006                           ;main.c: 130: PIR1bits.ADIF=0;
  1007  000974  9C9E               	bcf	3998,6,c	;volatile
  1008                           
  1009                           ;main.c: 131: INTCONbits.PEIE=1;
  1010  000976  8CF2               	bsf	intcon,6,c	;volatile
  1011                           
  1012                           ;main.c: 132: PIE1bits.ADIE=0;
  1013  000978  9C9D               	bcf	3997,6,c	;volatile
  1014                           
  1015                           ;main.c: 134: (INTCONbits.GIE = 1);
  1016  00097A  8EF2               	bsf	intcon,7,c	;volatile
  1017  00097C                     l2853:
  1018                           
  1019                           ;main.c: 138: int i = 0;
  1020  00097C  0E00               	movlw	0
  1021  00097E  0101               	movlb	1	; () banked
  1022  000980  6F1E               	movwf	(main@i+1)& (0+255),b
  1023  000982  0E00               	movlw	0
  1024  000984  0101               	movlb	1	; () banked
  1025  000986  6F1D               	movwf	main@i& (0+255),b
  1026                           
  1027                           ;main.c: 140: while (PORTBbits.RB3 == 1) {
  1028  000988  D02D               	goto	l97
  1029  00098A                     l2855:
  1030                           
  1031                           ; BSR set to: 1
  1032                           ;main.c: 141: i ++;
  1033  00098A  0101               	movlb	1	; () banked
  1034  00098C  4B1D               	infsnz	main@i& (0+255),f,b
  1035  00098E  2B1E               	incf	(main@i+1)& (0+255),f,b
  1036                           
  1037                           ; BSR set to: 1
  1038                           ;main.c: 142: _delay((unsigned long)((1)*(1000000/4000.0)));
  1039  000990  0E53               	movlw	83
  1040  000992                     u3237:
  1041  000992  2EE8               	decfsz	wreg,f,c
  1042  000994  D7FE               	goto	u3237
  1043  000996  F000               	nop	
  1044                           
  1045                           ;main.c: 143: PORTAbits.RA2 = (i % 4) == 0;
  1046  000998  0E03               	movlw	3
  1047  00099A  0101               	movlb	1	; () banked
  1048  00099C  151D               	andwf	main@i& (0+255),w,b
  1049  00099E  0101               	movlb	1	; () banked
  1050  0009A0  6F11               	movwf	??_main& (0+255),b
  1051  0009A2  0E00               	movlw	0
  1052  0009A4  0101               	movlb	1	; () banked
  1053  0009A6  151E               	andwf	(main@i+1)& (0+255),w,b
  1054  0009A8  0101               	movlb	1	; () banked
  1055  0009AA  6F12               	movwf	(??_main+1)& (0+255),b
  1056  0009AC  0101               	movlb	1	; () banked
  1057  0009AE  5112               	movf	(??_main+1)& (0+255),w,b
  1058  0009B0  1111               	iorwf	??_main& (0+255),w,b
  1059  0009B2  A4D8               	btfss	status,2,c
  1060  0009B4  D002               	goto	u2900
  1061  0009B6  0E01               	movlw	1
  1062  0009B8  D001               	goto	u2906
  1063  0009BA                     u2900:
  1064  0009BA  0E00               	movlw	0
  1065  0009BC                     u2906:
  1066  0009BC  0101               	movlb	1	; () banked
  1067  0009BE  6F13               	movwf	(??_main+2)& (0+255),b
  1068  0009C0  0101               	movlb	1	; () banked
  1069  0009C2  4713               	rlncf	(??_main+2)& (0+255),f,b
  1070  0009C4  4713               	rlncf	(??_main+2)& (0+255),f,b
  1071  0009C6  5080               	movf	3968,w,c	;volatile
  1072  0009C8  0101               	movlb	1	; () banked
  1073  0009CA  1913               	xorwf	(??_main+2)& (0+255),w,b
  1074  0009CC  0BFB               	andlw	-5
  1075  0009CE  1913               	xorwf	(??_main+2)& (0+255),w,b
  1076  0009D0  6E80               	movwf	3968,c	;volatile
  1077                           
  1078                           ;main.c: 144: if (i > 1000)
  1079  0009D2  0101               	movlb	1	; () banked
  1080  0009D4  511E               	movf	(main@i+1)& (0+255),w,b
  1081  0009D6  0A80               	xorlw	128
  1082  0009D8  0F7D               	addlw	-131
  1083  0009DA  0EE9               	movlw	233
  1084  0009DC  B4D8               	btfsc	status,2,c
  1085  0009DE  5D1D               	subwf	main@i& (0+255),w,b
  1086  0009E0  B0D8               	btfsc	status,0,c
  1087  0009E2  D002               	goto	l2861
  1088  0009E4                     l97:
  1089                           
  1090                           ; BSR set to: 1
  1091  0009E4  B681               	btfsc	3969,3,c	;volatile
  1092  0009E6  D7D1               	goto	l2855
  1093  0009E8                     l2861:
  1094                           
  1095                           ; BSR set to: 1
  1096                           ;main.c: 146: }
  1097                           ;main.c: 147: if (i > 800) {
  1098  0009E8  0101               	movlb	1	; () banked
  1099  0009EA  511E               	movf	(main@i+1)& (0+255),w,b
  1100  0009EC  0A80               	xorlw	128
  1101  0009EE  0F7D               	addlw	-131
  1102  0009F0  0E21               	movlw	33
  1103  0009F2  B4D8               	btfsc	status,2,c
  1104  0009F4  5D1D               	subwf	main@i& (0+255),w,b
  1105  0009F6  A0D8               	btfss	status,0,c
  1106  0009F8  D027               	goto	l2879
  1107                           
  1108                           ; BSR set to: 1
  1109                           ;main.c: 148: globdata = globdata2;
  1110  0009FA  C121  F11F         	movff	_globdata2,_globdata
  1111  0009FE  C122  F120         	movff	_globdata2+1,_globdata+1
  1112                           
  1113                           ; BSR set to: 1
  1114                           ;main.c: 149: setMask(globdata);
  1115  000A02  C11F  F104         	movff	_globdata,setMask@data
  1116  000A06  C120  F105         	movff	_globdata+1,setMask@data+1
  1117  000A0A  EC4B  F006         	call	_setMask	;wreg free
  1118                           
  1119                           ;main.c: 150: PORTAbits.RA2 = 1;
  1120  000A0E  8480               	bsf	3968,2,c	;volatile
  1121                           
  1122                           ;main.c: 151: for (int i =0; i < 5; i++)
  1123  000A10  0E00               	movlw	0
  1124  000A12  0101               	movlb	1	; () banked
  1125  000A14  6F1A               	movwf	(main@i_709+1)& (0+255),b
  1126  000A16  0E00               	movlw	0
  1127  000A18  0101               	movlb	1	; () banked
  1128  000A1A  6F19               	movwf	main@i_709& (0+255),b
  1129  000A1C                     
  1130                           ; BSR set to: 1
  1131  000A1C  0101               	movlb	1	; () banked
  1132  000A1E  511A               	movf	(main@i_709+1)& (0+255),w,b
  1133  000A20  0A80               	xorlw	128
  1134  000A22  0F80               	addlw	-128
  1135  000A24  0E05               	movlw	5
  1136  000A26  B4D8               	btfsc	status,2,c
  1137  000A28  5D19               	subwf	main@i_709& (0+255),w,b
  1138  000A2A  B0D8               	btfsc	status,0,c
  1139  000A2C  D04E               	goto	L3
  1140                           
  1141                           ; BSR set to: 1
  1142                           ;main.c: 152: _delay((unsigned long)((100)*(1000000/4000.0)));
  1143                           
  1144                           ; BSR set to: 1
  1145                           
  1146                           ; BSR set to: 1
  1147  000A2E  0E21               	movlw	33
  1148  000A30  0101               	movlb	1	; () banked
  1149  000A32  6F11               	movwf	??_main& (0+255),b
  1150  000A34  0E76               	movlw	118
  1151  000A36                     u3247:
  1152  000A36  2EE8               	decfsz	wreg,f,c
  1153  000A38  D7FE               	goto	u3247
  1154  000A3A  2F11               	decfsz	??_main& (0+255),f,b
  1155  000A3C  D7FC               	goto	u3247
  1156  000A3E  D000               	nop2	
  1157  000A40  0101               	movlb	1	; () banked
  1158  000A42  4B19               	infsnz	main@i_709& (0+255),f,b
  1159  000A44  2B1A               	incf	(main@i_709+1)& (0+255),f,b
  1160  000A46  D7EA               	goto	L1
  1161  000A48                     l2879:
  1162                           
  1163                           ; BSR set to: 1
  1164  000A48  0101               	movlb	1	; () banked
  1165  000A4A  511E               	movf	(main@i+1)& (0+255),w,b
  1166  000A4C  0A80               	xorlw	128
  1167  000A4E  0F80               	addlw	-128
  1168  000A50  0E06               	movlw	6
  1169  000A52  B4D8               	btfsc	status,2,c
  1170  000A54  5D1D               	subwf	main@i& (0+255),w,b
  1171  000A56  A0D8               	btfss	status,0,c
  1172  000A58  D039               	goto	l2901
  1173                           
  1174                           ; BSR set to: 1
  1175                           ;main.c: 155: setDefault(1);
  1176  000A5A  0E00               	movlw	0
  1177  000A5C  0101               	movlb	1	; () banked
  1178  000A5E  6F0C               	movwf	(setDefault@set+1)& (0+255),b
  1179  000A60  0E01               	movlw	1
  1180  000A62  0101               	movlb	1	; () banked
  1181  000A64  6F0B               	movwf	setDefault@set& (0+255),b
  1182  000A66  EC11  F009         	call	_setDefault	;wreg free
  1183                           
  1184                           ;main.c: 156: PORTAbits.RA2 = 1;
  1185  000A6A  8480               	bsf	3968,2,c	;volatile
  1186                           
  1187                           ;main.c: 157: for (int i =0; i < 5; i++)
  1188  000A6C  0E00               	movlw	0
  1189  000A6E  0101               	movlb	1	; () banked
  1190  000A70  6F1C               	movwf	(main@i_710+1)& (0+255),b
  1191  000A72  0E00               	movlw	0
  1192  000A74  0101               	movlb	1	; () banked
  1193  000A76  6F1B               	movwf	main@i_710& (0+255),b
  1194  000A78                     
  1195                           ; BSR set to: 1
  1196  000A78  0101               	movlb	1	; () banked
  1197  000A7A  511C               	movf	(main@i_710+1)& (0+255),w,b
  1198  000A7C  0A80               	xorlw	128
  1199  000A7E  0F80               	addlw	-128
  1200  000A80  0E05               	movlw	5
  1201  000A82  B4D8               	btfsc	status,2,c
  1202  000A84  5D1B               	subwf	main@i_710& (0+255),w,b
  1203  000A86  B0D8               	btfsc	status,0,c
  1204  000A88  D020               	goto	L3
  1205                           
  1206                           ; BSR set to: 1
  1207                           ;main.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  1208                           
  1209                           ; BSR set to: 1
  1210                           
  1211                           ; BSR set to: 1
  1212  000A8A  0E21               	movlw	33
  1213  000A8C  0101               	movlb	1	; () banked
  1214  000A8E  6F11               	movwf	??_main& (0+255),b
  1215  000A90  0E76               	movlw	118
  1216  000A92                     u3257:
  1217  000A92  2EE8               	decfsz	wreg,f,c
  1218  000A94  D7FE               	goto	u3257
  1219  000A96  2F11               	decfsz	??_main& (0+255),f,b
  1220  000A98  D7FC               	goto	u3257
  1221  000A9A  D000               	nop2	
  1222  000A9C  0101               	movlb	1	; () banked
  1223  000A9E  4B1B               	infsnz	main@i_710& (0+255),f,b
  1224  000AA0  2B1C               	incf	(main@i_710+1)& (0+255),f,b
  1225  000AA2  D7EA               	goto	L2
  1226  000AA4                     l2895:
  1227                           
  1228                           ; BSR set to: 1
  1229                           ;main.c: 164: _delay((unsigned long)((100)*(1000000/4000.0)));
  1230  000AA4  0E21               	movlw	33
  1231  000AA6  0101               	movlb	1	; () banked
  1232  000AA8  6F11               	movwf	??_main& (0+255),b
  1233  000AAA  0E76               	movlw	118
  1234  000AAC                     u3267:
  1235  000AAC  2EE8               	decfsz	wreg,f,c
  1236  000AAE  D7FE               	goto	u3267
  1237  000AB0  2F11               	decfsz	??_main& (0+255),f,b
  1238  000AB2  D7FC               	goto	u3267
  1239  000AB4  D000               	nop2	
  1240                           
  1241                           ;main.c: 165: PORTAbits.RA2 = 1;
  1242  000AB6  8480               	bsf	3968,2,c	;volatile
  1243                           
  1244                           ;main.c: 166: _delay((unsigned long)((100)*(1000000/4000.0)));
  1245  000AB8  0E21               	movlw	33
  1246  000ABA  0101               	movlb	1	; () banked
  1247  000ABC  6F11               	movwf	??_main& (0+255),b
  1248  000ABE  0E76               	movlw	118
  1249  000AC0                     u3277:
  1250  000AC0  2EE8               	decfsz	wreg,f,c
  1251  000AC2  D7FE               	goto	u3277
  1252  000AC4  2F11               	decfsz	??_main& (0+255),f,b
  1253  000AC6  D7FC               	goto	u3277
  1254  000AC8  D000               	nop2	
  1255  000ACA                     L3:
  1256                           
  1257                           ;main.c: 167: PORTAbits.RA2 = 0;
  1258  000ACA  9480               	bcf	3968,2,c	;volatile
  1259  000ACC                     l2901:
  1260  000ACC  A681               	btfss	3969,3,c	;volatile
  1261  000ACE  D00B               	goto	l112
  1262  000AD0  0101               	movlb	1	; () banked
  1263  000AD2  511E               	movf	(main@i+1)& (0+255),w,b
  1264  000AD4  0A80               	xorlw	128
  1265  000AD6  6EF3               	movwf	prodl,c
  1266  000AD8  0E80               	movlw	128
  1267  000ADA  5CF3               	subwf	prodl,w,c
  1268  000ADC  0E06               	movlw	6
  1269  000ADE  B4D8               	btfsc	status,2,c
  1270  000AE0  5D1D               	subwf	main@i& (0+255),w,b
  1271  000AE2  B0D8               	btfsc	status,0,c
  1272  000AE4  D7DF               	goto	l2895
  1273  000AE6                     l112:
  1274  000AE6  0004               	clrwdt		;# 
  1275  000AE8  D749               	goto	l2853
  1276  000AEA                     __end_of_main:
  1277                           	opt stack 0
  1278                           tblptru	equ	0xFF8
  1279                           prodl	equ	0xFF3
  1280                           intcon	equ	0xFF2
  1281                           postinc0	equ	0xFEE
  1282                           wreg	equ	0xFE8
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _setDefault *****************
  1286 ;; Defined at:
  1287 ;;		line 70 in file "main.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  set             2   11[BANK1 ] int 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;		None               void
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1
  1301 ;;      Params:         0       0       2
  1302 ;;      Locals:         0       0       0
  1303 ;;      Temps:          0       0       4
  1304 ;;      Totals:         0       0       6
  1305 ;;Total ram usage:        6 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    7
  1308 ;; This function calls:
  1309 ;;		_Read_b_eep
  1310 ;;		_setMask
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text1
  1317  001222                     __ptext1:
  1318                           	opt stack 0
  1319  001222                     _setDefault:
  1320                           	opt stack 23
  1321                           
  1322                           ;main.c: 71: globdata = (Read_b_eep(0x00) << 8) | Read_b_eep(0x01);
  1323                           
  1324                           ;incstack = 0
  1325  001222  0E00               	movlw	0
  1326  001224  0101               	movlb	1	; () banked
  1327  001226  6F01               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1328  001228  0E00               	movlw	0
  1329  00122A  0101               	movlb	1	; () banked
  1330  00122C  6F00               	movwf	Read_b_eep@badd& (0+255),b
  1331  00122E  EC8E  F00D         	call	_Read_b_eep	;wreg free
  1332  001232  0101               	movlb	1	; () banked
  1333  001234  6F0D               	movwf	??_setDefault& (0+255),b
  1334  001236  0101               	movlb	1	; () banked
  1335  001238  510D               	movf	??_setDefault& (0+255),w,b
  1336  00123A  0101               	movlb	1	; () banked
  1337  00123C  6F0F               	movwf	(??_setDefault+2)& (0+255),b
  1338  00123E  6B0E               	clrf	(??_setDefault+1)& (0+255),b
  1339  001240  0E00               	movlw	0
  1340  001242  0101               	movlb	1	; () banked
  1341  001244  6F01               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1342  001246  0E01               	movlw	1
  1343  001248  0101               	movlb	1	; () banked
  1344  00124A  6F00               	movwf	Read_b_eep@badd& (0+255),b
  1345  00124C  EC8E  F00D         	call	_Read_b_eep	;wreg free
  1346  001250  0101               	movlb	1	; () banked
  1347  001252  6F10               	movwf	(??_setDefault+3)& (0+255),b
  1348  001254  0101               	movlb	1	; () banked
  1349  001256  5110               	movf	(??_setDefault+3)& (0+255),w,b
  1350  001258  0101               	movlb	1	; () banked
  1351  00125A  110E               	iorwf	(??_setDefault+1)& (0+255),w,b
  1352  00125C  0101               	movlb	1	; () banked
  1353  00125E  6F1F               	movwf	_globdata& (0+255),b
  1354  001260  0101               	movlb	1	; () banked
  1355  001262  510F               	movf	(??_setDefault+2)& (0+255),w,b
  1356  001264  0101               	movlb	1	; () banked
  1357  001266  6F20               	movwf	(_globdata+1)& (0+255),b
  1358                           
  1359                           ;main.c: 72: globumask = (Read_b_eep(0x02) << 8) | Read_b_eep(0x03) ;
  1360  001268  0E00               	movlw	0
  1361  00126A  0101               	movlb	1	; () banked
  1362  00126C  6F01               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1363  00126E  0E02               	movlw	2
  1364  001270  0101               	movlb	1	; () banked
  1365  001272  6F00               	movwf	Read_b_eep@badd& (0+255),b
  1366  001274  EC8E  F00D         	call	_Read_b_eep	;wreg free
  1367  001278  0101               	movlb	1	; () banked
  1368  00127A  6F0D               	movwf	??_setDefault& (0+255),b
  1369  00127C  0101               	movlb	1	; () banked
  1370  00127E  510D               	movf	??_setDefault& (0+255),w,b
  1371  001280  0101               	movlb	1	; () banked
  1372  001282  6F0F               	movwf	(??_setDefault+2)& (0+255),b
  1373  001284  6B0E               	clrf	(??_setDefault+1)& (0+255),b
  1374  001286  0E00               	movlw	0
  1375  001288  0101               	movlb	1	; () banked
  1376  00128A  6F01               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1377  00128C  0E03               	movlw	3
  1378  00128E  0101               	movlb	1	; () banked
  1379  001290  6F00               	movwf	Read_b_eep@badd& (0+255),b
  1380  001292  EC8E  F00D         	call	_Read_b_eep	;wreg free
  1381  001296  0101               	movlb	1	; () banked
  1382  001298  6F10               	movwf	(??_setDefault+3)& (0+255),b
  1383  00129A  0101               	movlb	1	; () banked
  1384  00129C  5110               	movf	(??_setDefault+3)& (0+255),w,b
  1385  00129E  0101               	movlb	1	; () banked
  1386  0012A0  110E               	iorwf	(??_setDefault+1)& (0+255),w,b
  1387  0012A2  0100               	movlb	0	; () banked
  1388  0012A4  6FC6               	movwf	_globumask& (0+255),b
  1389  0012A6  0101               	movlb	1	; () banked
  1390  0012A8  510F               	movf	(??_setDefault+2)& (0+255),w,b
  1391  0012AA  0100               	movlb	0	; () banked
  1392  0012AC  6FC7               	movwf	(_globumask+1)& (0+255),b
  1393                           
  1394                           ;main.c: 73: globdata2 = (Read_b_eep(0x04) << 8) | Read_b_eep(0x05) ;
  1395  0012AE  0E00               	movlw	0
  1396  0012B0  0101               	movlb	1	; () banked
  1397  0012B2  6F01               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1398  0012B4  0E04               	movlw	4
  1399  0012B6  0101               	movlb	1	; () banked
  1400  0012B8  6F00               	movwf	Read_b_eep@badd& (0+255),b
  1401  0012BA  EC8E  F00D         	call	_Read_b_eep	;wreg free
  1402  0012BE  0101               	movlb	1	; () banked
  1403  0012C0  6F0D               	movwf	??_setDefault& (0+255),b
  1404  0012C2  0101               	movlb	1	; () banked
  1405  0012C4  510D               	movf	??_setDefault& (0+255),w,b
  1406  0012C6  0101               	movlb	1	; () banked
  1407  0012C8  6F0F               	movwf	(??_setDefault+2)& (0+255),b
  1408  0012CA  6B0E               	clrf	(??_setDefault+1)& (0+255),b
  1409  0012CC  0E00               	movlw	0
  1410  0012CE  0101               	movlb	1	; () banked
  1411  0012D0  6F01               	movwf	(Read_b_eep@badd+1)& (0+255),b
  1412  0012D2  0E05               	movlw	5
  1413  0012D4  0101               	movlb	1	; () banked
  1414  0012D6  6F00               	movwf	Read_b_eep@badd& (0+255),b
  1415  0012D8  EC8E  F00D         	call	_Read_b_eep	;wreg free
  1416  0012DC  0101               	movlb	1	; () banked
  1417  0012DE  6F10               	movwf	(??_setDefault+3)& (0+255),b
  1418  0012E0  0101               	movlb	1	; () banked
  1419  0012E2  5110               	movf	(??_setDefault+3)& (0+255),w,b
  1420  0012E4  0101               	movlb	1	; () banked
  1421  0012E6  110E               	iorwf	(??_setDefault+1)& (0+255),w,b
  1422  0012E8  0101               	movlb	1	; () banked
  1423  0012EA  6F21               	movwf	_globdata2& (0+255),b
  1424  0012EC  0101               	movlb	1	; () banked
  1425  0012EE  510F               	movf	(??_setDefault+2)& (0+255),w,b
  1426  0012F0  0101               	movlb	1	; () banked
  1427  0012F2  6F22               	movwf	(_globdata2+1)& (0+255),b
  1428                           
  1429                           ; BSR set to: 1
  1430                           ;main.c: 75: if (set)
  1431  0012F4  0101               	movlb	1	; () banked
  1432  0012F6  510C               	movf	(setDefault@set+1)& (0+255),w,b
  1433  0012F8  110B               	iorwf	setDefault@set& (0+255),w,b
  1434  0012FA  B4D8               	btfsc	status,2,c
  1435  0012FC  0012               	return	
  1436                           
  1437                           ; BSR set to: 1
  1438                           ;main.c: 76: setMask(globdata);
  1439  0012FE  C11F  F104         	movff	_globdata,setMask@data
  1440  001302  C120  F105         	movff	_globdata+1,setMask@data+1
  1441  001306  EC4B  F006         	call	_setMask	;wreg free
  1442  00130A  0012               	return	
  1443  00130C                     __end_of_setDefault:
  1444                           	opt stack 0
  1445                           tblptru	equ	0xFF8
  1446                           prodl	equ	0xFF3
  1447                           intcon	equ	0xFF2
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           status	equ	0xFD8
  1451                           
  1452 ;; *************** function _setMask *****************
  1453 ;; Defined at:
  1454 ;;		line 307 in file "main.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  data            2    4[BANK1 ] unsigned short 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  out             2    9[BANK1 ] unsigned short 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;		None               void
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1
  1468 ;;      Params:         0       0       2
  1469 ;;      Locals:         0       0       2
  1470 ;;      Temps:          0       0       3
  1471 ;;      Totals:         0       0       7
  1472 ;;Total ram usage:        7 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    6
  1475 ;; This function calls:
  1476 ;;		_Busy_eep
  1477 ;;		_Write_b_eep
  1478 ;; This function is called by:
  1479 ;;		_setDefault
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text2
  1485  000C96                     __ptext2:
  1486                           	opt stack 0
  1487  000C96                     _setMask:
  1488                           	opt stack 24
  1489                           
  1490                           ;main.c: 309: (Busy_eep(), Write_b_eep(0x06,data >> 8));
  1491                           
  1492                           ;incstack = 0
  1493  000C96  ECB4  F00D         	call	_Busy_eep	;wreg free
  1494  000C9A  0E00               	movlw	0
  1495  000C9C  0101               	movlb	1	; () banked
  1496  000C9E  6F01               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1497  000CA0  0E06               	movlw	6
  1498  000CA2  0101               	movlb	1	; () banked
  1499  000CA4  6F00               	movwf	Write_b_eep@badd& (0+255),b
  1500  000CA6  0101               	movlb	1	; () banked
  1501  000CA8  C105  F106         	movff	setMask@data+1,??_setMask
  1502  000CAC  C106  F107         	movff	??_setMask,??_setMask+1
  1503  000CB0  0101               	movlb	1	; () banked
  1504  000CB2  6B08               	clrf	(??_setMask+2)& (0+255),b
  1505  000CB4  0101               	movlb	1	; () banked
  1506  000CB6  5107               	movf	(??_setMask+1)& (0+255),w,b
  1507  000CB8  0101               	movlb	1	; () banked
  1508  000CBA  6F02               	movwf	Write_b_eep@bdat& (0+255),b
  1509  000CBC  ECB3  F00C         	call	_Write_b_eep	;wreg free
  1510  000CC0                     l206:
  1511  000CC0  B2A6               	btfsc	4006,1,c	;volatile
  1512  000CC2  D7FE               	goto	l206
  1513                           
  1514                           ;main.c: 311: (Busy_eep(), Write_b_eep(0x07,data));
  1515  000CC4  ECB4  F00D         	call	_Busy_eep	;wreg free
  1516  000CC8  0E00               	movlw	0
  1517  000CCA  0101               	movlb	1	; () banked
  1518  000CCC  6F01               	movwf	(Write_b_eep@badd+1)& (0+255),b
  1519  000CCE  0E07               	movlw	7
  1520  000CD0  0101               	movlb	1	; () banked
  1521  000CD2  6F00               	movwf	Write_b_eep@badd& (0+255),b
  1522  000CD4  C104  F102         	movff	setMask@data,Write_b_eep@bdat
  1523  000CD8  ECB3  F00C         	call	_Write_b_eep	;wreg free
  1524                           
  1525                           ;main.c: 313: globdata = data;
  1526  000CDC  C104  F11F         	movff	setMask@data,_globdata
  1527  000CE0  C105  F120         	movff	setMask@data+1,_globdata+1
  1528                           
  1529                           ;main.c: 314: unsigned short out = data ^ globumask;
  1530  000CE4  0100               	movlb	0	; () banked
  1531  000CE6  51C6               	movf	_globumask& (0+255),w,b
  1532  000CE8  0101               	movlb	1	; () banked
  1533  000CEA  1904               	xorwf	setMask@data& (0+255),w,b
  1534  000CEC  0101               	movlb	1	; () banked
  1535  000CEE  6F09               	movwf	setMask@out& (0+255),b
  1536  000CF0  0100               	movlb	0	; () banked
  1537  000CF2  51C7               	movf	(_globumask+1)& (0+255),w,b
  1538  000CF4  0101               	movlb	1	; () banked
  1539  000CF6  1905               	xorwf	(setMask@data+1)& (0+255),w,b
  1540  000CF8  0101               	movlb	1	; () banked
  1541  000CFA  6F0A               	movwf	(setMask@out+1)& (0+255),b
  1542                           
  1543                           ; BSR set to: 1
  1544                           ;main.c: 315: PORTC = (0x0f & out);
  1545  000CFC  0101               	movlb	1	; () banked
  1546  000CFE  5109               	movf	setMask@out& (0+255),w,b
  1547  000D00  0B0F               	andlw	15
  1548  000D02  6E82               	movwf	3970,c	;volatile
  1549                           
  1550                           ; BSR set to: 1
  1551                           ;main.c: 316: PORTBbits.RB0 = (out >> 4) & 0x1;
  1552  000D04  0101               	movlb	1	; () banked
  1553  000D06  C109  F106         	movff	setMask@out,??_setMask
  1554  000D0A  0101               	movlb	1	; () banked
  1555  000D0C  C10A  F107         	movff	setMask@out+1,??_setMask+1
  1556  000D10  0E04               	movlw	4
  1557  000D12  0101               	movlb	1	; () banked
  1558  000D14  6F08               	movwf	(??_setMask+2)& (0+255),b
  1559  000D16                     u2015:
  1560  000D16  0101               	movlb	1	; () banked
  1561  000D18  90D8               	bcf	status,0,c
  1562  000D1A  3307               	rrcf	(??_setMask+1)& (0+255),f,b
  1563  000D1C  3306               	rrcf	??_setMask& (0+255),f,b
  1564  000D1E  0101               	movlb	1	; () banked
  1565  000D20  2F08               	decfsz	(??_setMask+2)& (0+255),f,b
  1566  000D22  D7F9               	goto	u2015
  1567  000D24  0E01               	movlw	1
  1568  000D26  0101               	movlb	1	; () banked
  1569  000D28  1706               	andwf	??_setMask& (0+255),f,b
  1570  000D2A  5081               	movf	3969,w,c	;volatile
  1571  000D2C  0101               	movlb	1	; () banked
  1572  000D2E  1906               	xorwf	??_setMask& (0+255),w,b
  1573  000D30  0BFE               	andlw	-2
  1574  000D32  1906               	xorwf	??_setMask& (0+255),w,b
  1575  000D34  6E81               	movwf	3969,c	;volatile
  1576                           
  1577                           ; BSR set to: 1
  1578                           ;main.c: 317: PORTAbits.RA7 = (out >> 5) & 0x1;
  1579  000D36  0101               	movlb	1	; () banked
  1580  000D38  C109  F106         	movff	setMask@out,??_setMask
  1581  000D3C  0101               	movlb	1	; () banked
  1582  000D3E  C10A  F107         	movff	setMask@out+1,??_setMask+1
  1583  000D42  0E05               	movlw	5
  1584  000D44  0101               	movlb	1	; () banked
  1585  000D46  6F08               	movwf	(??_setMask+2)& (0+255),b
  1586  000D48                     u2025:
  1587  000D48  0101               	movlb	1	; () banked
  1588  000D4A  90D8               	bcf	status,0,c
  1589  000D4C  3307               	rrcf	(??_setMask+1)& (0+255),f,b
  1590  000D4E  3306               	rrcf	??_setMask& (0+255),f,b
  1591  000D50  0101               	movlb	1	; () banked
  1592  000D52  2F08               	decfsz	(??_setMask+2)& (0+255),f,b
  1593  000D54  D7F9               	goto	u2025
  1594  000D56  0E01               	movlw	1
  1595  000D58  0101               	movlb	1	; () banked
  1596  000D5A  1706               	andwf	??_setMask& (0+255),f,b
  1597  000D5C  0101               	movlb	1	; () banked
  1598  000D5E  3306               	rrcf	??_setMask& (0+255),f,b
  1599  000D60  3306               	rrcf	??_setMask& (0+255),f,b
  1600  000D62  5080               	movf	3968,w,c	;volatile
  1601  000D64  0101               	movlb	1	; () banked
  1602  000D66  1906               	xorwf	??_setMask& (0+255),w,b
  1603  000D68  0B7F               	andlw	-129
  1604  000D6A  1906               	xorwf	??_setMask& (0+255),w,b
  1605  000D6C  6E80               	movwf	3968,c	;volatile
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;main.c: 318: PORTAbits.RA6 = (out >> 6) & 0x1;
  1609  000D6E  0101               	movlb	1	; () banked
  1610  000D70  C109  F106         	movff	setMask@out,??_setMask
  1611  000D74  0101               	movlb	1	; () banked
  1612  000D76  C10A  F107         	movff	setMask@out+1,??_setMask+1
  1613  000D7A  0E06               	movlw	6
  1614  000D7C  0101               	movlb	1	; () banked
  1615  000D7E  6F08               	movwf	(??_setMask+2)& (0+255),b
  1616  000D80                     u2035:
  1617  000D80  0101               	movlb	1	; () banked
  1618  000D82  90D8               	bcf	status,0,c
  1619  000D84  3307               	rrcf	(??_setMask+1)& (0+255),f,b
  1620  000D86  3306               	rrcf	??_setMask& (0+255),f,b
  1621  000D88  0101               	movlb	1	; () banked
  1622  000D8A  2F08               	decfsz	(??_setMask+2)& (0+255),f,b
  1623  000D8C  D7F9               	goto	u2035
  1624  000D8E  0E01               	movlw	1
  1625  000D90  0101               	movlb	1	; () banked
  1626  000D92  1706               	andwf	??_setMask& (0+255),f,b
  1627  000D94  0101               	movlb	1	; () banked
  1628  000D96  3B06               	swapf	??_setMask& (0+255),f,b
  1629  000D98  4706               	rlncf	??_setMask& (0+255),f,b
  1630  000D9A  4706               	rlncf	??_setMask& (0+255),f,b
  1631  000D9C  5080               	movf	3968,w,c	;volatile
  1632  000D9E  0101               	movlb	1	; () banked
  1633  000DA0  1906               	xorwf	??_setMask& (0+255),w,b
  1634  000DA2  0BBF               	andlw	-65
  1635  000DA4  1906               	xorwf	??_setMask& (0+255),w,b
  1636  000DA6  6E80               	movwf	3968,c	;volatile
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;main.c: 319: PORTAbits.RA5 = (out >> 7) & 0x1;
  1640  000DA8  0101               	movlb	1	; () banked
  1641  000DAA  C109  F106         	movff	setMask@out,??_setMask
  1642  000DAE  0101               	movlb	1	; () banked
  1643  000DB0  C10A  F107         	movff	setMask@out+1,??_setMask+1
  1644  000DB4  0E07               	movlw	7
  1645  000DB6  0101               	movlb	1	; () banked
  1646  000DB8  6F08               	movwf	(??_setMask+2)& (0+255),b
  1647  000DBA                     u2045:
  1648  000DBA  0101               	movlb	1	; () banked
  1649  000DBC  90D8               	bcf	status,0,c
  1650  000DBE  3307               	rrcf	(??_setMask+1)& (0+255),f,b
  1651  000DC0  3306               	rrcf	??_setMask& (0+255),f,b
  1652  000DC2  0101               	movlb	1	; () banked
  1653  000DC4  2F08               	decfsz	(??_setMask+2)& (0+255),f,b
  1654  000DC6  D7F9               	goto	u2045
  1655  000DC8  0E01               	movlw	1
  1656  000DCA  0101               	movlb	1	; () banked
  1657  000DCC  1706               	andwf	??_setMask& (0+255),f,b
  1658  000DCE  0101               	movlb	1	; () banked
  1659  000DD0  3B06               	swapf	??_setMask& (0+255),f,b
  1660  000DD2  4706               	rlncf	??_setMask& (0+255),f,b
  1661  000DD4  5080               	movf	3968,w,c	;volatile
  1662  000DD6  0101               	movlb	1	; () banked
  1663  000DD8  1906               	xorwf	??_setMask& (0+255),w,b
  1664  000DDA  0BDF               	andlw	-33
  1665  000DDC  1906               	xorwf	??_setMask& (0+255),w,b
  1666  000DDE  6E80               	movwf	3968,c	;volatile
  1667                           
  1668                           ; BSR set to: 1
  1669                           ;main.c: 320: PORTAbits.RA4 = (out >> 8) & 0x1;
  1670  000DE0  0101               	movlb	1	; () banked
  1671  000DE2  C10A  F106         	movff	setMask@out+1,??_setMask
  1672  000DE6  C106  F107         	movff	??_setMask,??_setMask+1
  1673  000DEA  0101               	movlb	1	; () banked
  1674  000DEC  6B08               	clrf	(??_setMask+2)& (0+255),b
  1675  000DEE  0E01               	movlw	1
  1676  000DF0  0101               	movlb	1	; () banked
  1677  000DF2  1707               	andwf	(??_setMask+1)& (0+255),f,b
  1678  000DF4  0101               	movlb	1	; () banked
  1679  000DF6  3B07               	swapf	(??_setMask+1)& (0+255),f,b
  1680  000DF8  5080               	movf	3968,w,c	;volatile
  1681  000DFA  0101               	movlb	1	; () banked
  1682  000DFC  1907               	xorwf	(??_setMask+1)& (0+255),w,b
  1683  000DFE  0BEF               	andlw	-17
  1684  000E00  1907               	xorwf	(??_setMask+1)& (0+255),w,b
  1685  000E02  6E80               	movwf	3968,c	;volatile
  1686                           
  1687                           ; BSR set to: 1
  1688  000E04  0012               	return	
  1689  000E06                     __end_of_setMask:
  1690                           	opt stack 0
  1691                           tblptru	equ	0xFF8
  1692                           prodl	equ	0xFF3
  1693                           intcon	equ	0xFF2
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _Write_b_eep *****************
  1699 ;; Defined at:
  1700 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\write_B.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  badd            2    0[BANK1 ] unsigned int 
  1703 ;;  bdat            1    2[BANK1 ] unsigned char 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  GIE_BIT_VAL     1    3[BANK1 ] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;		None               void
  1708 ;; Registers used:
  1709 ;;		wreg, status,2
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1
  1715 ;;      Params:         0       0       3
  1716 ;;      Locals:         0       0       1
  1717 ;;      Temps:          0       0       0
  1718 ;;      Totals:         0       0       4
  1719 ;;Total ram usage:        4 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    5
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_setMask
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text3
  1730  001966                     __ptext3:
  1731                           	opt stack 0
  1732  001966                     _Write_b_eep:
  1733                           	opt stack 24
  1734                           
  1735                           ; BSR set to: 1
  1736                           ;incstack = 0
  1737  001966  0E00               	movlw	0
  1738  001968  0101               	movlb	1	; () banked
  1739  00196A  6F03               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  1740                           
  1741                           ; BSR set to: 1
  1742  00196C  C100  FFA9         	movff	Write_b_eep@badd,4009	;volatile
  1743                           
  1744                           ; BSR set to: 1
  1745  001970  C102  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
  1746                           
  1747                           ; BSR set to: 1
  1748  001974  9EA6               	bcf	4006,7,c	;volatile
  1749                           
  1750                           ; BSR set to: 1
  1751  001976  9CA6               	bcf	4006,6,c	;volatile
  1752                           
  1753                           ; BSR set to: 1
  1754  001978  84A6               	bsf	4006,2,c	;volatile
  1755                           
  1756                           ; BSR set to: 1
  1757  00197A  0E00               	movlw	0
  1758  00197C  BEF2               	btfsc	intcon,7,c	;volatile
  1759  00197E  0E01               	movlw	1
  1760  001980  0101               	movlb	1	; () banked
  1761  001982  6F03               	movwf	Write_b_eep@GIE_BIT_VAL& (0+255),b
  1762                           
  1763                           ; BSR set to: 1
  1764  001984  9EF2               	bcf	intcon,7,c	;volatile
  1765                           
  1766                           ; BSR set to: 1
  1767  001986  0E55               	movlw	85
  1768  001988  6EA7               	movwf	4007,c	;volatile
  1769                           
  1770                           ; BSR set to: 1
  1771  00198A  0EAA               	movlw	170
  1772  00198C  6EA7               	movwf	4007,c	;volatile
  1773                           
  1774                           ; BSR set to: 1
  1775  00198E  82A6               	bsf	4006,1,c	;volatile
  1776  001990                     l333:
  1777  001990  B2A6               	btfsc	4006,1,c	;volatile
  1778  001992  D7FE               	goto	l333
  1779  001994  0101               	movlb	1	; () banked
  1780  001996  B103               	btfsc	Write_b_eep@GIE_BIT_VAL& (0+255),0,b
  1781  001998  D002               	bra	u1705
  1782  00199A  9EF2               	bcf	intcon,7,c	;volatile
  1783  00199C  D001               	bra	u1706
  1784  00199E                     u1705:
  1785  00199E  8EF2               	bsf	intcon,7,c	;volatile
  1786  0019A0                     u1706:
  1787  0019A0  94A6               	bcf	4006,2,c	;volatile
  1788  0019A2  0012               	return	
  1789  0019A4                     __end_of_Write_b_eep:
  1790                           	opt stack 0
  1791                           tblptru	equ	0xFF8
  1792                           prodl	equ	0xFF3
  1793                           intcon	equ	0xFF2
  1794                           postinc0	equ	0xFEE
  1795                           wreg	equ	0xFE8
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _Busy_eep *****************
  1799 ;; Defined at:
  1800 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\busy_eep.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;		None               void
  1807 ;; Registers used:
  1808 ;;		None
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1
  1814 ;;      Params:         0       0       0
  1815 ;;      Locals:         0       0       0
  1816 ;;      Temps:          0       0       0
  1817 ;;      Totals:         0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    5
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_setMask
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text4
  1829  001B68                     __ptext4:
  1830                           	opt stack 0
  1831  001B68                     _Busy_eep:
  1832                           	opt stack 24
  1833  001B68                     l306:
  1834  001B68  A2A6               	btfss	4006,1,c	;volatile
  1835  001B6A  0012               	return	
  1836  001B6C  D7FD               	goto	l306
  1837  001B6E                     __end_of_Busy_eep:
  1838                           	opt stack 0
  1839                           tblptru	equ	0xFF8
  1840                           prodl	equ	0xFF3
  1841                           intcon	equ	0xFF2
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           status	equ	0xFD8
  1845                           
  1846 ;; *************** function _Read_b_eep *****************
  1847 ;; Defined at:
  1848 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\read_B.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  badd            2    0[BANK1 ] unsigned int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      unsigned char 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1
  1862 ;;      Params:         0       0       2
  1863 ;;      Locals:         0       0       0
  1864 ;;      Temps:          0       0       0
  1865 ;;      Totals:         0       0       2
  1866 ;;Total ram usage:        2 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    5
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_setDefault
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text5
  1878  001B1C                     __ptext5:
  1879                           	opt stack 0
  1880  001B1C                     _Read_b_eep:
  1881                           	opt stack 24
  1882                           
  1883                           ;incstack = 0
  1884  001B1C  C100  FFA9         	movff	Read_b_eep@badd,4009	;volatile
  1885  001B20  9CA6               	bcf	4006,6,c	;volatile
  1886  001B22  9EA6               	bcf	4006,7,c	;volatile
  1887  001B24  80A6               	bsf	4006,0,c	;volatile
  1888  001B26  F000               	nop	
  1889  001B28  F000               	nop	
  1890  001B2A  50A8               	movf	4008,w,c	;volatile
  1891  001B2C  0012               	return	
  1892  001B2E                     __end_of_Read_b_eep:
  1893                           	opt stack 0
  1894                           tblptru	equ	0xFF8
  1895                           prodl	equ	0xFF3
  1896                           intcon	equ	0xFF2
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           status	equ	0xFD8
  1900                           
  1901 ;; *************** function _OpenUSART *****************
  1902 ;; Defined at:
  1903 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  config          1    wreg     unsigned char 
  1906 ;;  spbrg           2    0[BANK1 ] unsigned int 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  config          1    5[BANK1 ] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;		None               void
  1911 ;; Registers used:
  1912 ;;		wreg, status,2
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1
  1918 ;;      Params:         0       0       2
  1919 ;;      Locals:         0       0       1
  1920 ;;      Temps:          0       0       3
  1921 ;;      Totals:         0       0       6
  1922 ;;Total ram usage:        6 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    5
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text6
  1933  001668                     __ptext6:
  1934                           	opt stack 0
  1935  001668                     _OpenUSART:
  1936                           	opt stack 25
  1937                           
  1938                           ;incstack = 0
  1939                           ;OpenUSART@config stored from wreg
  1940  001668  0101               	movlb	1	; () banked
  1941  00166A  6F05               	movwf	OpenUSART@config& (0+255),b
  1942                           
  1943                           ; BSR set to: 1
  1944  00166C  0E00               	movlw	0
  1945  00166E  6EAC               	movwf	4012,c	;volatile
  1946  001670  0E00               	movlw	0
  1947  001672  6EAB               	movwf	4011,c	;volatile
  1948                           
  1949                           ; BSR set to: 1
  1950  001674  0101               	movlb	1	; () banked
  1951  001676  B105               	btfsc	OpenUSART@config& (0+255),0,b
  1952                           
  1953                           ; BSR set to: 1
  1954  001678  88AC               	bsf	4012,4,c	;volatile
  1955                           
  1956                           ; BSR set to: 1
  1957                           
  1958                           ; BSR set to: 1
  1959  00167A  0101               	movlb	1	; () banked
  1960  00167C  A305               	btfss	OpenUSART@config& (0+255),1,b
  1961  00167E  D002               	goto	l2625
  1962                           
  1963                           ; BSR set to: 1
  1964  001680  8CAC               	bsf	4012,6,c	;volatile
  1965  001682  8CAB               	bsf	4011,6,c	;volatile
  1966  001684                     l2625:
  1967                           
  1968                           ; BSR set to: 1
  1969  001684  0101               	movlb	1	; () banked
  1970  001686  B505               	btfsc	OpenUSART@config& (0+255),2,b
  1971                           
  1972                           ; BSR set to: 1
  1973  001688  8EAC               	bsf	4012,7,c	;volatile
  1974                           
  1975                           ; BSR set to: 1
  1976                           
  1977                           ; BSR set to: 1
  1978  00168A  0101               	movlb	1	; () banked
  1979  00168C  A705               	btfss	OpenUSART@config& (0+255),3,b
  1980  00168E  D002               	goto	l360
  1981                           
  1982                           ; BSR set to: 1
  1983  001690  88AB               	bsf	4011,4,c	;volatile
  1984  001692  D001               	goto	l2633
  1985  001694                     l360:
  1986                           
  1987                           ; BSR set to: 1
  1988  001694  8AAB               	bsf	4011,5,c	;volatile
  1989  001696                     l2633:
  1990                           
  1991                           ; BSR set to: 1
  1992  001696  0101               	movlb	1	; () banked
  1993  001698  B905               	btfsc	OpenUSART@config& (0+255),4,b
  1994                           
  1995                           ; BSR set to: 1
  1996  00169A  84AC               	bsf	4012,2,c	;volatile
  1997                           
  1998                           ; BSR set to: 1
  1999  00169C  989E               	bcf	3998,4,c	;volatile
  2000                           
  2001                           ; BSR set to: 1
  2002  00169E  0101               	movlb	1	; () banked
  2003  0016A0  BB05               	btfsc	OpenUSART@config& (0+255),5,b
  2004                           
  2005                           ; BSR set to: 1
  2006  0016A2  86AB               	bsf	4011,3,c	;volatile
  2007                           
  2008                           ; BSR set to: 1
  2009                           
  2010                           ; BSR set to: 1
  2011  0016A4  0101               	movlb	1	; () banked
  2012  0016A6  AD05               	btfss	OpenUSART@config& (0+255),6,b
  2013  0016A8  D002               	goto	l364
  2014                           
  2015                           ; BSR set to: 1
  2016  0016AA  8A9D               	bsf	3997,5,c	;volatile
  2017  0016AC  D001               	goto	l365
  2018  0016AE                     l364:
  2019                           
  2020                           ; BSR set to: 1
  2021  0016AE  9A9D               	bcf	3997,5,c	;volatile
  2022  0016B0                     l365:
  2023                           
  2024                           ; BSR set to: 1
  2025  0016B0  9A9E               	bcf	3998,5,c	;volatile
  2026                           
  2027                           ; BSR set to: 1
  2028  0016B2  0101               	movlb	1	; () banked
  2029  0016B4  AF05               	btfss	OpenUSART@config& (0+255),7,b
  2030  0016B6  D002               	goto	l366
  2031                           
  2032                           ; BSR set to: 1
  2033  0016B8  889D               	bsf	3997,4,c	;volatile
  2034  0016BA  D001               	goto	l367
  2035  0016BC                     l366:
  2036                           
  2037                           ; BSR set to: 1
  2038  0016BC  989D               	bcf	3997,4,c	;volatile
  2039  0016BE                     l367:
  2040                           
  2041                           ; BSR set to: 1
  2042  0016BE  C100  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2043                           
  2044                           ; BSR set to: 1
  2045  0016C2  0101               	movlb	1	; () banked
  2046  0016C4  C101  F102         	movff	OpenUSART@spbrg+1,??_OpenUSART
  2047  0016C8  C102  F103         	movff	??_OpenUSART,??_OpenUSART+1
  2048  0016CC  0101               	movlb	1	; () banked
  2049  0016CE  6B04               	clrf	(??_OpenUSART+2)& (0+255),b
  2050  0016D0  0101               	movlb	1	; () banked
  2051  0016D2  5103               	movf	(??_OpenUSART+1)& (0+255),w,b
  2052  0016D4  6EB0               	movwf	4016,c	;volatile
  2053                           
  2054                           ; BSR set to: 1
  2055  0016D6  8AAC               	bsf	4012,5,c	;volatile
  2056                           
  2057                           ; BSR set to: 1
  2058  0016D8  8EAB               	bsf	4011,7,c	;volatile
  2059                           
  2060                           ; BSR set to: 1
  2061  0016DA  9C94               	bcf	3988,6,c	;volatile
  2062                           
  2063                           ; BSR set to: 1
  2064  0016DC  8E94               	bsf	3988,7,c	;volatile
  2065                           
  2066                           ; BSR set to: 1
  2067  0016DE  A8AC               	btfss	4012,4,c	;volatile
  2068  0016E0  0012               	return	
  2069                           
  2070                           ; BSR set to: 1
  2071  0016E2  BEAC               	btfsc	4012,7,c	;volatile
  2072  0016E4  0012               	return	
  2073                           
  2074                           ; BSR set to: 1
  2075  0016E6  8C94               	bsf	3988,6,c	;volatile
  2076  0016E8  0012               	return	
  2077  0016EA                     __end_of_OpenUSART:
  2078                           	opt stack 0
  2079                           tblptru	equ	0xFF8
  2080                           prodl	equ	0xFF3
  2081                           intcon	equ	0xFF2
  2082                           postinc0	equ	0xFEE
  2083                           wreg	equ	0xFE8
  2084                           status	equ	0xFD8
  2085                           
  2086 ;; *************** function _OpenADC *****************
  2087 ;; Defined at:
  2088 ;;		line 92 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcopen.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  config          1    wreg     unsigned char 
  2091 ;;  config2         1    0[BANK1 ] unsigned char 
  2092 ;;  portconfig      2    1[BANK1 ] unsigned int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  config          1    6[BANK1 ] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;		None               void
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1
  2104 ;;      Params:         0       0       3
  2105 ;;      Locals:         0       0       1
  2106 ;;      Temps:          0       0       3
  2107 ;;      Totals:         0       0       7
  2108 ;;Total ram usage:        7 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:    5
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text7
  2119  0015E4                     __ptext7:
  2120                           	opt stack 0
  2121  0015E4                     _OpenADC:
  2122                           	opt stack 25
  2123                           
  2124                           ; BSR set to: 1
  2125                           ;incstack = 0
  2126                           ;OpenADC@config stored from wreg
  2127  0015E4  0101               	movlb	1	; () banked
  2128  0015E6  6F06               	movwf	OpenADC@config& (0+255),b
  2129                           
  2130                           ; BSR set to: 1
  2131  0015E8  0E00               	movlw	0
  2132  0015EA  6EC2               	movwf	4034,c	;volatile
  2133  0015EC  0E00               	movlw	0
  2134  0015EE  6EC1               	movwf	4033,c	;volatile
  2135  0015F0  0E00               	movlw	0
  2136  0015F2  6EC0               	movwf	4032,c	;volatile
  2137                           
  2138                           ; BSR set to: 1
  2139  0015F4  0101               	movlb	1	; () banked
  2140  0015F6  90D8               	bcf	status,0,c
  2141  0015F8  3100               	rrcf	OpenADC@config2& (0+255),w,b
  2142  0015FA  0B3C               	andlw	60
  2143  0015FC  6EC2               	movwf	4034,c	;volatile
  2144                           
  2145                           ; BSR set to: 1
  2146  0015FE  0101               	movlb	1	; () banked
  2147  001600  3900               	swapf	OpenADC@config2& (0+255),w,b
  2148  001602  0BF0               	andlw	240
  2149  001604  0B30               	andlw	48
  2150  001606  12C1               	iorwf	4033,f,c	;volatile
  2151                           
  2152                           ; BSR set to: 1
  2153  001608  C106  F103         	movff	OpenADC@config,??_OpenADC
  2154  00160C  0101               	movlb	1	; () banked
  2155  00160E  90D8               	bcf	status,0,c
  2156  001610  3703               	rlcf	??_OpenADC& (0+255),f,b
  2157  001612  0101               	movlb	1	; () banked
  2158  001614  90D8               	bcf	status,0,c
  2159  001616  3703               	rlcf	??_OpenADC& (0+255),f,b
  2160  001618  0E38               	movlw	56
  2161  00161A  0101               	movlb	1	; () banked
  2162  00161C  1703               	andwf	??_OpenADC& (0+255),f,b
  2163  00161E  C106  F104         	movff	OpenADC@config,??_OpenADC+1
  2164  001622  0101               	movlb	1	; () banked
  2165  001624  3B04               	swapf	(??_OpenADC+1)& (0+255),f,b
  2166  001626  0E0F               	movlw	15
  2167  001628  1704               	andwf	(??_OpenADC+1)& (0+255),f,b
  2168  00162A  0E07               	movlw	7
  2169  00162C  0101               	movlb	1	; () banked
  2170  00162E  1704               	andwf	(??_OpenADC+1)& (0+255),f,b
  2171  001630  0101               	movlb	1	; () banked
  2172  001632  5106               	movf	OpenADC@config& (0+255),w,b
  2173  001634  0B80               	andlw	128
  2174  001636  0101               	movlb	1	; () banked
  2175  001638  1104               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2176  00163A  0101               	movlb	1	; () banked
  2177  00163C  1103               	iorwf	??_OpenADC& (0+255),w,b
  2178  00163E  6EC0               	movwf	4032,c	;volatile
  2179                           
  2180                           ; BSR set to: 1
  2181  001640  C101  FF7E         	movff	OpenADC@portconfig,3966	;volatile
  2182                           
  2183                           ; BSR set to: 1
  2184  001644  0101               	movlb	1	; () banked
  2185  001646  C102  F103         	movff	OpenADC@portconfig+1,??_OpenADC
  2186  00164A  C103  F104         	movff	??_OpenADC,??_OpenADC+1
  2187  00164E  0101               	movlb	1	; () banked
  2188  001650  6B05               	clrf	(??_OpenADC+2)& (0+255),b
  2189  001652  0101               	movlb	1	; () banked
  2190  001654  5104               	movf	(??_OpenADC+1)& (0+255),w,b
  2191  001656  6E7F               	movwf	3967,c	;volatile
  2192                           
  2193                           ; BSR set to: 1
  2194  001658  0101               	movlb	1	; () banked
  2195  00165A  AF00               	btfss	OpenADC@config2& (0+255),7,b
  2196  00165C  D003               	goto	l288
  2197                           
  2198                           ; BSR set to: 1
  2199  00165E  9C9E               	bcf	3998,6,c	;volatile
  2200  001660  8C9D               	bsf	3997,6,c	;volatile
  2201  001662  8CF2               	bsf	intcon,6,c	;volatile
  2202  001664                     l288:
  2203                           
  2204                           ; BSR set to: 1
  2205  001664  80C2               	bsf	4034,0,c	;volatile
  2206                           
  2207                           ; BSR set to: 1
  2208  001666  0012               	return	
  2209  001668                     __end_of_OpenADC:
  2210                           	opt stack 0
  2211                           tblptru	equ	0xFF8
  2212                           prodl	equ	0xFF3
  2213                           intcon	equ	0xFF2
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _Delay10KTCYx *****************
  2219 ;; Defined at:
  2220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10ktcyx.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  unit            1    wreg     unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  unit            1    1[BANK1 ] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;		None               void
  2227 ;; Registers used:
  2228 ;;		wreg
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1
  2234 ;;      Params:         0       0       0
  2235 ;;      Locals:         0       0       1
  2236 ;;      Temps:          0       0       1
  2237 ;;      Totals:         0       0       2
  2238 ;;Total ram usage:        2 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    5
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text8
  2249  001AEA                     __ptext8:
  2250                           	opt stack 0
  2251  001AEA                     _Delay10KTCYx:
  2252                           	opt stack 25
  2253                           
  2254                           ; BSR set to: 1
  2255                           ;incstack = 0
  2256                           ;Delay10KTCYx@unit stored from wreg
  2257  001AEA  0101               	movlb	1	; () banked
  2258  001AEC  6F01               	movwf	Delay10KTCYx@unit& (0+255),b
  2259  001AEE                     l631:
  2260                           
  2261                           ; BSR set to: 1
  2262                           
  2263                           ; BSR set to: 1
  2264  001AEE  0E0D               	movlw	13
  2265  001AF0  0101               	movlb	1	; () banked
  2266  001AF2  6F00               	movwf	??_Delay10KTCYx& (0+255),b
  2267  001AF4  0EFC               	movlw	252
  2268  001AF6                     u3287:
  2269  001AF6  2EE8               	decfsz	wreg,f,c
  2270  001AF8  D7FE               	goto	u3287
  2271  001AFA  2F00               	decfsz	??_Delay10KTCYx& (0+255),f,b
  2272  001AFC  D7FC               	goto	u3287
  2273  001AFE  0101               	movlb	1	; () banked
  2274  001B00  2F01               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  2275  001B02  D7F5               	goto	l631
  2276  001B04  0012               	return	
  2277  001B06                     __end_of_Delay10KTCYx:
  2278                           	opt stack 0
  2279                           tblptru	equ	0xFF8
  2280                           prodl	equ	0xFF3
  2281                           intcon	equ	0xFF2
  2282                           postinc0	equ	0xFEE
  2283                           wreg	equ	0xFE8
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _interruptHandler *****************
  2287 ;; Defined at:
  2288 ;;		line 198 in file "main.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  sg             65   18[BANK0 ] unsigned char [65]
  2293 ;;  dev             2   95[BANK0 ] unsigned short 
  2294 ;;  defaut          2   93[BANK0 ] unsigned short 
  2295 ;;  s               2   89[BANK0 ] int 
  2296 ;;  device_mask     2   86[BANK0 ] unsigned short 
  2297 ;;  data            1   97[BANK0 ] unsigned char 
  2298 ;;  i               2   91[BANK0 ] int 
  2299 ;;  command         1   88[BANK0 ] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;		None               void
  2302 ;; Registers used:
  2303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1
  2309 ;;      Params:         0       0       0
  2310 ;;      Locals:         0      80       0
  2311 ;;      Temps:          0      18       0
  2312 ;;      Totals:         0      98       0
  2313 ;;Total ram usage:       98 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    4
  2316 ;; This function calls:
  2317 ;;		_ReadSHORT
  2318 ;;		_ReadUSART
  2319 ;;		___ftadd
  2320 ;;		_ftoa
  2321 ;;		_putsUSART
  2322 ;;		_readtemp
  2323 ;;		_utoa
  2324 ;;		i2_Busy_eep
  2325 ;;		i2_Read_b_eep
  2326 ;;		i2_Write_b_eep
  2327 ;;		i2_setMask
  2328 ;; This function is called by:
  2329 ;;		Interrupt level 2
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	intcode
  2334  000008                     __pintcode:
  2335                           	opt stack 0
  2336  000008                     _interruptHandler:
  2337                           	opt stack 23
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;incstack = 0
  2341  000008  CFFA F064          	movff	pclath,??_interruptHandler+4
  2342  00000C  CFFB F065          	movff	pclatu,??_interruptHandler+5
  2343  000010  CFE9 F066          	movff	fsr0l,??_interruptHandler+6
  2344  000014  CFEA F067          	movff	fsr0h,??_interruptHandler+7
  2345  000018  CFE1 F068          	movff	fsr1l,??_interruptHandler+8
  2346  00001C  CFE2 F069          	movff	fsr1h,??_interruptHandler+9
  2347  000020  CFD9 F06A          	movff	fsr2l,??_interruptHandler+10
  2348  000024  CFDA F06B          	movff	fsr2h,??_interruptHandler+11
  2349  000028  CFF3 F06C          	movff	prodl,??_interruptHandler+12
  2350  00002C  CFF4 F06D          	movff	prodh,??_interruptHandler+13
  2351  000030  CFF6 F06E          	movff	tblptrl,??_interruptHandler+14
  2352  000034  CFF7 F06F          	movff	tblptrh,??_interruptHandler+15
  2353  000038  CFF8 F070          	movff	tblptru,??_interruptHandler+16
  2354  00003C  CFF5 F071          	movff	tablat,??_interruptHandler+17
  2355                           
  2356                           ;main.c: 200: if (HLVDIF == 1) {
  2357  000040  A4A1               	btfss	4001,2,c	;volatile
  2358  000042  D02A               	goto	i2l135
  2359                           
  2360                           ;main.c: 202: for (int i =0 ; i <5; i++) {
  2361  000044  0E00               	movlw	0
  2362  000046  0100               	movlb	0	; () banked
  2363  000048  6FBC               	movwf	(interruptHandler@i+1)& (0+255),b
  2364  00004A  0E00               	movlw	0
  2365  00004C  0100               	movlb	0	; () banked
  2366  00004E  6FBB               	movwf	interruptHandler@i& (0+255),b
  2367  000050                     
  2368                           ; BSR set to: 0
  2369  000050  0100               	movlb	0	; () banked
  2370  000052  51BC               	movf	(interruptHandler@i+1)& (0+255),w,b
  2371  000054  0A80               	xorlw	128
  2372  000056  0F80               	addlw	-128
  2373  000058  0E05               	movlw	5
  2374  00005A  B4D8               	btfsc	status,2,c
  2375  00005C  5DBB               	subwf	interruptHandler@i& (0+255),w,b
  2376  00005E  B0D8               	btfsc	status,0,c
  2377  000060  D019               	goto	i2l137
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;main.c: 203: _delay((unsigned long)((50)*(1000000/4000.0)));
  2381                           
  2382                           ; BSR set to: 0
  2383                           
  2384                           ; BSR set to: 0
  2385  000062  0E11               	movlw	17
  2386  000064  0100               	movlb	0	; () banked
  2387  000066  6F60               	movwf	??_interruptHandler& (0+255),b
  2388  000068  0E3A               	movlw	58
  2389  00006A                     i2u329_47:
  2390  00006A  2EE8               	decfsz	wreg,f,c
  2391  00006C  D7FE               	goto	i2u329_47
  2392  00006E  2F60               	decfsz	??_interruptHandler& (0+255),f,b
  2393  000070  D7FC               	goto	i2u329_47
  2394  000072  D000               	nop2	
  2395                           
  2396                           ;main.c: 204: PORTAbits.RA2 = 1;
  2397  000074  8480               	bsf	3968,2,c	;volatile
  2398                           
  2399                           ;main.c: 205: _delay((unsigned long)((50)*(1000000/4000.0)));
  2400  000076  0E11               	movlw	17
  2401  000078  0100               	movlb	0	; () banked
  2402  00007A  6F60               	movwf	??_interruptHandler& (0+255),b
  2403  00007C  0E3A               	movlw	58
  2404  00007E                     i2u330_47:
  2405  00007E  2EE8               	decfsz	wreg,f,c
  2406  000080  D7FE               	goto	i2u330_47
  2407  000082  2F60               	decfsz	??_interruptHandler& (0+255),f,b
  2408  000084  D7FC               	goto	i2u330_47
  2409  000086  D000               	nop2	
  2410                           
  2411                           ;main.c: 206: PORTAbits.RA2 = 0;
  2412  000088  9480               	bcf	3968,2,c	;volatile
  2413  00008A  0004               	clrwdt		;# 
  2414  00008C  0100               	movlb	0	; () banked
  2415  00008E  4BBB               	infsnz	interruptHandler@i& (0+255),f,b
  2416  000090  2BBC               	incf	(interruptHandler@i+1)& (0+255),f,b
  2417  000092  D7DE               	goto	L4
  2418  000094                     i2l137:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;main.c: 208: }
  2422                           ;main.c: 209: HLVDIF = 0;
  2423  000094  94A1               	bcf	4001,2,c	;volatile
  2424                           
  2425                           ;main.c: 210: }
  2426  000096  D1FB               	goto	i2l203
  2427  000098                     i2l135:
  2428                           
  2429                           ;main.c: 211: else if (PIR1bits.RCIF) {
  2430  000098  AA9E               	btfss	3998,5,c	;volatile
  2431  00009A  D1F9               	goto	i2l203
  2432                           
  2433                           ;main.c: 212: char command = ReadUSART();
  2434  00009C  EC66  F00D         	call	_ReadUSART	;wreg free
  2435  0000A0  0100               	movlb	0	; () banked
  2436  0000A2  6FB8               	movwf	interruptHandler@command& (0+255),b
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;main.c: 213: PORTAbits.RA2 = 1;
  2440  0000A4  8480               	bsf	3968,2,c	;volatile
  2441                           
  2442                           ;main.c: 214: switch (command) {
  2443  0000A6  D1CA               	goto	i2l2999
  2444  0000A8                     i2l142:
  2445  0000A8  AA9E               	btfss	3998,5,c	;volatile
  2446  0000AA  D7FE               	goto	i2l142
  2447                           
  2448                           ;main.c: 217: unsigned short device_mask = ReadSHORT();
  2449  0000AC  EC09  F00D         	call	_ReadSHORT	;wreg free
  2450  0000B0  C002  F0B6         	movff	?_ReadSHORT,interruptHandler@device_mask
  2451  0000B4  C003  F0B7         	movff	?_ReadSHORT+1,interruptHandler@device_mask+1
  2452                           
  2453                           ;main.c: 218: setMask(device_mask);
  2454  0000B8  C0B6  F005         	movff	interruptHandler@device_mask,i2setMask@data
  2455  0000BC  C0B7  F006         	movff	interruptHandler@device_mask+1,i2setMask@data+1
  2456  0000C0  EC97  F007         	call	i2_setMask	;wreg free
  2457                           
  2458                           ;main.c: 219: break;
  2459  0000C4  D1E2               	goto	i2l145
  2460  0000C6                     i2l147:
  2461  0000C6  A2AC               	btfss	4012,1,c	;volatile
  2462  0000C8  D7FE               	goto	i2l147
  2463                           
  2464                           ;main.c: 222: char sg[65];
  2465                           ;main.c: 223: utoa(&sg,globdata,2);
  2466  0000CA  0100               	movlb	0	; () banked
  2467  0000CC  0E00               	movlw	high interruptHandler@sg
  2468  0000CE  6E09               	movwf	utoa@buf+1,c
  2469  0000D0  0100               	movlb	0	; () banked
  2470  0000D2  0E72               	movlw	low interruptHandler@sg
  2471  0000D4  6E08               	movwf	utoa@buf,c
  2472  0000D6  C11F  F00A         	movff	_globdata,utoa@val
  2473  0000DA  C120  F00B         	movff	_globdata+1,utoa@val+1
  2474  0000DE  0E00               	movlw	0
  2475  0000E0  6E0D               	movwf	utoa@base+1,c
  2476  0000E2  0E02               	movlw	2
  2477  0000E4  6E0C               	movwf	utoa@base,c
  2478  0000E6  ECA0  F00A         	call	_utoa	;wreg free
  2479                           
  2480                           ;main.c: 224: putsUSART(sg);
  2481  0000EA  0100               	movlb	0	; () banked
  2482  0000EC  0E00               	movlw	high interruptHandler@sg
  2483  0000EE  6E57               	movwf	putsUSART@data+1,c
  2484  0000F0  0100               	movlb	0	; () banked
  2485  0000F2  0E72               	movlw	low interruptHandler@sg
  2486  0000F4  6E56               	movwf	putsUSART@data,c
  2487  0000F6  ECE9  F00B         	call	_putsUSART	;wreg free
  2488                           
  2489                           ;main.c: 225: break;
  2490  0000FA  D1C7               	goto	i2l145
  2491  0000FC                     i2l151:
  2492  0000FC  A2AC               	btfss	4012,1,c	;volatile
  2493  0000FE  D7FE               	goto	i2l151
  2494                           
  2495                           ;main.c: 228: char sg[65];
  2496                           ;main.c: 229: utoa(&sg,globumask,2);
  2497  000100  0100               	movlb	0	; () banked
  2498  000102  0E00               	movlw	high interruptHandler@sg
  2499  000104  6E09               	movwf	utoa@buf+1,c
  2500  000106  0100               	movlb	0	; () banked
  2501  000108  0E72               	movlw	low interruptHandler@sg
  2502  00010A  6E08               	movwf	utoa@buf,c
  2503  00010C  C0C6  F00A         	movff	_globumask,utoa@val
  2504  000110  C0C7  F00B         	movff	_globumask+1,utoa@val+1
  2505  000114  0E00               	movlw	0
  2506  000116  6E0D               	movwf	utoa@base+1,c
  2507  000118  0E02               	movlw	2
  2508  00011A  6E0C               	movwf	utoa@base,c
  2509  00011C  ECA0  F00A         	call	_utoa	;wreg free
  2510                           
  2511                           ;main.c: 230: putsUSART(sg);
  2512  000120  0100               	movlb	0	; () banked
  2513  000122  0E00               	movlw	high interruptHandler@sg
  2514  000124  6E57               	movwf	putsUSART@data+1,c
  2515  000126  0100               	movlb	0	; () banked
  2516  000128  0E72               	movlw	low interruptHandler@sg
  2517  00012A  6E56               	movwf	putsUSART@data,c
  2518  00012C  ECE9  F00B         	call	_putsUSART	;wreg free
  2519                           
  2520                           ;main.c: 231: break;
  2521  000130  D1AC               	goto	i2l145
  2522  000132                     i2l155:
  2523  000132  A2AC               	btfss	4012,1,c	;volatile
  2524  000134  D7FE               	goto	i2l155
  2525                           
  2526                           ;main.c: 234: unsigned short defaut = (Read_b_eep(0x00) << 8) | Read_b_eep(0x01);
  2527  000136  0E00               	movlw	0
  2528  000138  6E02               	movwf	i2Read_b_eep@badd+1,c
  2529  00013A  0E00               	movlw	0
  2530  00013C  6E01               	movwf	i2Read_b_eep@badd,c
  2531  00013E  EC97  F00D         	call	i2_Read_b_eep	;wreg free
  2532  000142  0100               	movlb	0	; () banked
  2533  000144  6F60               	movwf	??_interruptHandler& (0+255),b
  2534  000146  0100               	movlb	0	; () banked
  2535  000148  5160               	movf	??_interruptHandler& (0+255),w,b
  2536  00014A  0100               	movlb	0	; () banked
  2537  00014C  6F62               	movwf	(??_interruptHandler+2)& (0+255),b
  2538  00014E  6B61               	clrf	(??_interruptHandler+1)& (0+255),b
  2539  000150  0E00               	movlw	0
  2540  000152  6E02               	movwf	i2Read_b_eep@badd+1,c
  2541  000154  0E01               	movlw	1
  2542  000156  6E01               	movwf	i2Read_b_eep@badd,c
  2543  000158  EC97  F00D         	call	i2_Read_b_eep	;wreg free
  2544  00015C  0100               	movlb	0	; () banked
  2545  00015E  6F63               	movwf	(??_interruptHandler+3)& (0+255),b
  2546  000160  0100               	movlb	0	; () banked
  2547  000162  5163               	movf	(??_interruptHandler+3)& (0+255),w,b
  2548  000164  0100               	movlb	0	; () banked
  2549  000166  1161               	iorwf	(??_interruptHandler+1)& (0+255),w,b
  2550  000168  0100               	movlb	0	; () banked
  2551  00016A  6FBD               	movwf	interruptHandler@defaut& (0+255),b
  2552  00016C  0100               	movlb	0	; () banked
  2553  00016E  5162               	movf	(??_interruptHandler+2)& (0+255),w,b
  2554  000170  0100               	movlb	0	; () banked
  2555  000172  6FBE               	movwf	(interruptHandler@defaut+1)& (0+255),b
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;main.c: 235: char sg[65];
  2559                           ;main.c: 236: utoa(&sg,defaut,2);
  2560  000174  0100               	movlb	0	; () banked
  2561  000176  0E00               	movlw	high interruptHandler@sg
  2562  000178  6E09               	movwf	utoa@buf+1,c
  2563  00017A  0100               	movlb	0	; () banked
  2564  00017C  0E72               	movlw	low interruptHandler@sg
  2565  00017E  6E08               	movwf	utoa@buf,c
  2566  000180  C0BD  F00A         	movff	interruptHandler@defaut,utoa@val
  2567  000184  C0BE  F00B         	movff	interruptHandler@defaut+1,utoa@val+1
  2568  000188  0E00               	movlw	0
  2569  00018A  6E0D               	movwf	utoa@base+1,c
  2570  00018C  0E02               	movlw	2
  2571  00018E  6E0C               	movwf	utoa@base,c
  2572  000190  ECA0  F00A         	call	_utoa	;wreg free
  2573                           
  2574                           ;main.c: 237: putsUSART(sg);
  2575  000194  0100               	movlb	0	; () banked
  2576  000196  0E00               	movlw	high interruptHandler@sg
  2577  000198  6E57               	movwf	putsUSART@data+1,c
  2578  00019A  0100               	movlb	0	; () banked
  2579  00019C  0E72               	movlw	low interruptHandler@sg
  2580  00019E  6E56               	movwf	putsUSART@data,c
  2581  0001A0  ECE9  F00B         	call	_putsUSART	;wreg free
  2582                           
  2583                           ;main.c: 238: break;
  2584  0001A4  D172               	goto	i2l145
  2585  0001A6                     i2l159:
  2586  0001A6  A2AC               	btfss	4012,1,c	;volatile
  2587  0001A8  D7FE               	goto	i2l159
  2588                           
  2589                           ;main.c: 241: unsigned short defaut = (Read_b_eep(0x04) << 8) | Read_b_eep(0x05);
  2590  0001AA  0E00               	movlw	0
  2591  0001AC  6E02               	movwf	i2Read_b_eep@badd+1,c
  2592  0001AE  0E04               	movlw	4
  2593  0001B0  6E01               	movwf	i2Read_b_eep@badd,c
  2594  0001B2  EC97  F00D         	call	i2_Read_b_eep	;wreg free
  2595  0001B6  0100               	movlb	0	; () banked
  2596  0001B8  6F60               	movwf	??_interruptHandler& (0+255),b
  2597  0001BA  0100               	movlb	0	; () banked
  2598  0001BC  5160               	movf	??_interruptHandler& (0+255),w,b
  2599  0001BE  0100               	movlb	0	; () banked
  2600  0001C0  6F62               	movwf	(??_interruptHandler+2)& (0+255),b
  2601  0001C2  6B61               	clrf	(??_interruptHandler+1)& (0+255),b
  2602  0001C4  0E00               	movlw	0
  2603  0001C6  6E02               	movwf	i2Read_b_eep@badd+1,c
  2604  0001C8  0E05               	movlw	5
  2605  0001CA  6E01               	movwf	i2Read_b_eep@badd,c
  2606  0001CC  EC97  F00D         	call	i2_Read_b_eep	;wreg free
  2607  0001D0  0100               	movlb	0	; () banked
  2608  0001D2  6F63               	movwf	(??_interruptHandler+3)& (0+255),b
  2609  0001D4  0100               	movlb	0	; () banked
  2610  0001D6  5163               	movf	(??_interruptHandler+3)& (0+255),w,b
  2611  0001D8  0100               	movlb	0	; () banked
  2612  0001DA  1161               	iorwf	(??_interruptHandler+1)& (0+255),w,b
  2613  0001DC  0100               	movlb	0	; () banked
  2614  0001DE  6FBD               	movwf	interruptHandler@defaut& (0+255),b
  2615  0001E0  0100               	movlb	0	; () banked
  2616  0001E2  5162               	movf	(??_interruptHandler+2)& (0+255),w,b
  2617  0001E4  0100               	movlb	0	; () banked
  2618  0001E6  6FBE               	movwf	(interruptHandler@defaut+1)& (0+255),b
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;main.c: 242: char sg[65];
  2622                           ;main.c: 243: utoa(&sg,defaut,2);
  2623  0001E8  0100               	movlb	0	; () banked
  2624  0001EA  0E00               	movlw	high interruptHandler@sg
  2625  0001EC  6E09               	movwf	utoa@buf+1,c
  2626  0001EE  0100               	movlb	0	; () banked
  2627  0001F0  0E72               	movlw	low interruptHandler@sg
  2628  0001F2  6E08               	movwf	utoa@buf,c
  2629  0001F4  C0BD  F00A         	movff	interruptHandler@defaut,utoa@val
  2630  0001F8  C0BE  F00B         	movff	interruptHandler@defaut+1,utoa@val+1
  2631  0001FC  0E00               	movlw	0
  2632  0001FE  6E0D               	movwf	utoa@base+1,c
  2633  000200  0E02               	movlw	2
  2634  000202  6E0C               	movwf	utoa@base,c
  2635  000204  ECA0  F00A         	call	_utoa	;wreg free
  2636                           
  2637                           ;main.c: 244: putsUSART(sg);
  2638  000208  0100               	movlb	0	; () banked
  2639  00020A  0E00               	movlw	high interruptHandler@sg
  2640  00020C  6E57               	movwf	putsUSART@data+1,c
  2641  00020E  0100               	movlb	0	; () banked
  2642  000210  0E72               	movlw	low interruptHandler@sg
  2643  000212  6E56               	movwf	putsUSART@data,c
  2644  000214  ECE9  F00B         	call	_putsUSART	;wreg free
  2645                           
  2646                           ;main.c: 245: break;
  2647  000218  D138               	goto	i2l145
  2648  00021A                     i2l163:
  2649  00021A  A2AC               	btfss	4012,1,c	;volatile
  2650  00021C  D7FE               	goto	i2l163
  2651                           
  2652                           ;main.c: 248: int s;
  2653                           ;main.c: 249: putsUSART(ftoa(readtemp(0b10000111),&s));
  2654  00021E  0E00               	movlw	0
  2655  000220  6E2C               	movwf	readtemp@channel+1,c
  2656  000222  0E87               	movlw	135
  2657  000224  6E2B               	movwf	readtemp@channel,c
  2658  000226  ECF7  F009         	call	_readtemp	;wreg free
  2659  00022A  C02B  F047         	movff	?_readtemp,ftoa@f
  2660  00022E  C02C  F048         	movff	?_readtemp+1,ftoa@f+1
  2661  000232  C02D  F049         	movff	?_readtemp+2,ftoa@f+2
  2662  000236  0100               	movlb	0	; () banked
  2663  000238  0E00               	movlw	high interruptHandler@s
  2664  00023A  6E4B               	movwf	ftoa@status+1,c
  2665  00023C  0100               	movlb	0	; () banked
  2666  00023E  0EB9               	movlw	low interruptHandler@s
  2667  000240  6E4A               	movwf	ftoa@status,c
  2668  000242  EC03  F007         	call	_ftoa	;wreg free
  2669  000246  C047  F056         	movff	?_ftoa,putsUSART@data
  2670  00024A  C048  F057         	movff	?_ftoa+1,putsUSART@data+1
  2671  00024E  ECE9  F00B         	call	_putsUSART	;wreg free
  2672                           
  2673                           ;main.c: 250: break;
  2674  000252  D11B               	goto	i2l145
  2675  000254                     i2l167:
  2676  000254  A2AC               	btfss	4012,1,c	;volatile
  2677  000256  D7FE               	goto	i2l167
  2678                           
  2679                           ;main.c: 253: int s;
  2680                           ;main.c: 254: putsUSART(ftoa(readtemp(0b10001111) + 3.0f,&s));
  2681  000258  0E00               	movlw	0
  2682  00025A  6E2C               	movwf	readtemp@channel+1,c
  2683  00025C  0E8F               	movlw	143
  2684  00025E  6E2B               	movwf	readtemp@channel,c
  2685  000260  ECF7  F009         	call	_readtemp	;wreg free
  2686  000264  C02B  F035         	movff	?_readtemp,___ftadd@f1
  2687  000268  C02C  F036         	movff	?_readtemp+1,___ftadd@f1+1
  2688  00026C  C02D  F037         	movff	?_readtemp+2,___ftadd@f1+2
  2689  000270  0E00               	movlw	0
  2690  000272  6E38               	movwf	___ftadd@f2,c
  2691  000274  0E40               	movlw	64
  2692  000276  6E39               	movwf	___ftadd@f2+1,c
  2693  000278  0E40               	movlw	64
  2694  00027A  6E3A               	movwf	___ftadd@f2+2,c
  2695  00027C  EC75  F005         	call	___ftadd	;wreg free
  2696  000280  C035  F0B3         	movff	?___ftadd,_interruptHandler$2080
  2697  000284  C036  F0B4         	movff	?___ftadd+1,_interruptHandler$2080+1
  2698  000288  C037  F0B5         	movff	?___ftadd+2,_interruptHandler$2080+2
  2699                           
  2700                           ;main.c: 253: int s;
  2701                           ;main.c: 254: putsUSART(ftoa(readtemp(0b10001111) + 3.0f,&s));
  2702  00028C  C0B3  F047         	movff	_interruptHandler$2080,ftoa@f
  2703  000290  C0B4  F048         	movff	_interruptHandler$2080+1,ftoa@f+1
  2704  000294  C0B5  F049         	movff	_interruptHandler$2080+2,ftoa@f+2
  2705  000298  0100               	movlb	0	; () banked
  2706  00029A  0E00               	movlw	high interruptHandler@s
  2707  00029C  6E4B               	movwf	ftoa@status+1,c
  2708  00029E  0100               	movlb	0	; () banked
  2709  0002A0  0EB9               	movlw	low interruptHandler@s
  2710  0002A2  6E4A               	movwf	ftoa@status,c
  2711  0002A4  EC03  F007         	call	_ftoa	;wreg free
  2712  0002A8  C047  F056         	movff	?_ftoa,putsUSART@data
  2713  0002AC  C048  F057         	movff	?_ftoa+1,putsUSART@data+1
  2714  0002B0  ECE9  F00B         	call	_putsUSART	;wreg free
  2715                           
  2716                           ;main.c: 255: break;
  2717  0002B4  D0EA               	goto	i2l145
  2718  0002B6                     i2l171:
  2719  0002B6  AA9E               	btfss	3998,5,c	;volatile
  2720  0002B8  D7FE               	goto	i2l171
  2721                           
  2722                           ;main.c: 258: char data = ReadUSART();
  2723  0002BA  EC66  F00D         	call	_ReadUSART	;wreg free
  2724  0002BE  0100               	movlb	0	; () banked
  2725  0002C0  6FC1               	movwf	interruptHandler@data& (0+255),b
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;main.c: 259: (Busy_eep(), Write_b_eep(0x00,data));
  2729  0002C2  ECB7  F00D         	call	i2_Busy_eep	;wreg free
  2730  0002C6  0E00               	movlw	0
  2731  0002C8  6E02               	movwf	i2Write_b_eep@badd+1,c
  2732  0002CA  0E00               	movlw	0
  2733  0002CC  6E01               	movwf	i2Write_b_eep@badd,c
  2734  0002CE  C0C1  F003         	movff	interruptHandler@data,i2Write_b_eep@bdat
  2735  0002D2  ECD2  F00C         	call	i2_Write_b_eep	;wreg free
  2736  0002D6                     i2l174:
  2737  0002D6  AA9E               	btfss	3998,5,c	;volatile
  2738  0002D8  D7FE               	goto	i2l174
  2739                           
  2740                           ;main.c: 261: data = ReadUSART();
  2741  0002DA  EC66  F00D         	call	_ReadUSART	;wreg free
  2742  0002DE  0100               	movlb	0	; () banked
  2743  0002E0  6FC1               	movwf	interruptHandler@data& (0+255),b
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;main.c: 262: (Busy_eep(), Write_b_eep(0x01,data));
  2747  0002E2  ECB7  F00D         	call	i2_Busy_eep	;wreg free
  2748  0002E6  0E00               	movlw	0
  2749  0002E8  6E02               	movwf	i2Write_b_eep@badd+1,c
  2750  0002EA  0E01               	movlw	1
  2751  0002EC  6E01               	movwf	i2Write_b_eep@badd,c
  2752  0002EE  C0C1  F003         	movff	interruptHandler@data,i2Write_b_eep@bdat
  2753  0002F2  ECD2  F00C         	call	i2_Write_b_eep	;wreg free
  2754                           
  2755                           ;main.c: 263: break;
  2756  0002F6  D0C9               	goto	i2l145
  2757  0002F8                     i2l178:
  2758  0002F8  AA9E               	btfss	3998,5,c	;volatile
  2759  0002FA  D7FE               	goto	i2l178
  2760                           
  2761                           ;main.c: 266: char data = ReadUSART();
  2762  0002FC  EC66  F00D         	call	_ReadUSART	;wreg free
  2763  000300  0100               	movlb	0	; () banked
  2764  000302  6FC1               	movwf	interruptHandler@data& (0+255),b
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;main.c: 267: (Busy_eep(), Write_b_eep(0x04,data));
  2768  000304  ECB7  F00D         	call	i2_Busy_eep	;wreg free
  2769  000308  0E00               	movlw	0
  2770  00030A  6E02               	movwf	i2Write_b_eep@badd+1,c
  2771  00030C  0E04               	movlw	4
  2772  00030E  6E01               	movwf	i2Write_b_eep@badd,c
  2773  000310  C0C1  F003         	movff	interruptHandler@data,i2Write_b_eep@bdat
  2774  000314  ECD2  F00C         	call	i2_Write_b_eep	;wreg free
  2775  000318                     i2l181:
  2776  000318  AA9E               	btfss	3998,5,c	;volatile
  2777  00031A  D7FE               	goto	i2l181
  2778                           
  2779                           ;main.c: 269: data = ReadUSART();
  2780  00031C  EC66  F00D         	call	_ReadUSART	;wreg free
  2781  000320  0100               	movlb	0	; () banked
  2782  000322  6FC1               	movwf	interruptHandler@data& (0+255),b
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;main.c: 270: (Busy_eep(), Write_b_eep(0x05,data));
  2786  000324  ECB7  F00D         	call	i2_Busy_eep	;wreg free
  2787  000328  0E00               	movlw	0
  2788  00032A  6E02               	movwf	i2Write_b_eep@badd+1,c
  2789  00032C  0E05               	movlw	5
  2790  00032E  6E01               	movwf	i2Write_b_eep@badd,c
  2791  000330  C0C1  F003         	movff	interruptHandler@data,i2Write_b_eep@bdat
  2792  000334  ECD2  F00C         	call	i2_Write_b_eep	;wreg free
  2793                           
  2794                           ;main.c: 271: break;
  2795  000338  D0A8               	goto	i2l145
  2796  00033A                     i2l185:
  2797  00033A  AA9E               	btfss	3998,5,c	;volatile
  2798  00033C  D7FE               	goto	i2l185
  2799                           
  2800                           ;main.c: 274: char data = ReadUSART();
  2801  00033E  EC66  F00D         	call	_ReadUSART	;wreg free
  2802  000342  0100               	movlb	0	; () banked
  2803  000344  6FC1               	movwf	interruptHandler@data& (0+255),b
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;main.c: 275: (Busy_eep(), Write_b_eep(0x02,data));
  2807  000346  ECB7  F00D         	call	i2_Busy_eep	;wreg free
  2808  00034A  0E00               	movlw	0
  2809  00034C  6E02               	movwf	i2Write_b_eep@badd+1,c
  2810  00034E  0E02               	movlw	2
  2811  000350  6E01               	movwf	i2Write_b_eep@badd,c
  2812  000352  C0C1  F003         	movff	interruptHandler@data,i2Write_b_eep@bdat
  2813  000356  ECD2  F00C         	call	i2_Write_b_eep	;wreg free
  2814  00035A                     i2l188:
  2815  00035A  AA9E               	btfss	3998,5,c	;volatile
  2816  00035C  D7FE               	goto	i2l188
  2817                           
  2818                           ;main.c: 277: data = ReadUSART();
  2819  00035E  EC66  F00D         	call	_ReadUSART	;wreg free
  2820  000362  0100               	movlb	0	; () banked
  2821  000364  6FC1               	movwf	interruptHandler@data& (0+255),b
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;main.c: 278: (Busy_eep(), Write_b_eep(0x03,data));
  2825  000366  ECB7  F00D         	call	i2_Busy_eep	;wreg free
  2826  00036A  0E00               	movlw	0
  2827  00036C  6E02               	movwf	i2Write_b_eep@badd+1,c
  2828  00036E  0E03               	movlw	3
  2829  000370  6E01               	movwf	i2Write_b_eep@badd,c
  2830  000372  C0C1  F003         	movff	interruptHandler@data,i2Write_b_eep@bdat
  2831  000376  ECD2  F00C         	call	i2_Write_b_eep	;wreg free
  2832                           
  2833                           ;main.c: 279: globumask = (Read_b_eep(0x02) << 8) | Read_b_eep(0x03) ;
  2834  00037A  0E00               	movlw	0
  2835  00037C  6E02               	movwf	i2Read_b_eep@badd+1,c
  2836  00037E  0E02               	movlw	2
  2837  000380  6E01               	movwf	i2Read_b_eep@badd,c
  2838  000382  EC97  F00D         	call	i2_Read_b_eep	;wreg free
  2839  000386  0100               	movlb	0	; () banked
  2840  000388  6F60               	movwf	??_interruptHandler& (0+255),b
  2841  00038A  0100               	movlb	0	; () banked
  2842  00038C  5160               	movf	??_interruptHandler& (0+255),w,b
  2843  00038E  0100               	movlb	0	; () banked
  2844  000390  6F62               	movwf	(??_interruptHandler+2)& (0+255),b
  2845  000392  6B61               	clrf	(??_interruptHandler+1)& (0+255),b
  2846  000394  0E00               	movlw	0
  2847  000396  6E02               	movwf	i2Read_b_eep@badd+1,c
  2848  000398  0E03               	movlw	3
  2849  00039A  6E01               	movwf	i2Read_b_eep@badd,c
  2850  00039C  EC97  F00D         	call	i2_Read_b_eep	;wreg free
  2851  0003A0  0100               	movlb	0	; () banked
  2852  0003A2  6F63               	movwf	(??_interruptHandler+3)& (0+255),b
  2853  0003A4  0100               	movlb	0	; () banked
  2854  0003A6  5163               	movf	(??_interruptHandler+3)& (0+255),w,b
  2855  0003A8  0100               	movlb	0	; () banked
  2856  0003AA  1161               	iorwf	(??_interruptHandler+1)& (0+255),w,b
  2857  0003AC  0100               	movlb	0	; () banked
  2858  0003AE  6FC6               	movwf	_globumask& (0+255),b
  2859  0003B0  0100               	movlb	0	; () banked
  2860  0003B2  5162               	movf	(??_interruptHandler+2)& (0+255),w,b
  2861  0003B4  0100               	movlb	0	; () banked
  2862  0003B6  6FC7               	movwf	(_globumask+1)& (0+255),b
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;main.c: 280: setMask(globdata);
  2866  0003B8  C11F  F005         	movff	_globdata,i2setMask@data
  2867  0003BC  C120  F006         	movff	_globdata+1,i2setMask@data+1
  2868  0003C0  EC97  F007         	call	i2_setMask	;wreg free
  2869                           
  2870                           ;main.c: 281: break;
  2871  0003C4  D062               	goto	i2l145
  2872  0003C6                     i2l192:
  2873  0003C6  AA9E               	btfss	3998,5,c	;volatile
  2874  0003C8  D7FE               	goto	i2l192
  2875                           
  2876                           ;main.c: 284: unsigned short dev = ReadSHORT();
  2877  0003CA  EC09  F00D         	call	_ReadSHORT	;wreg free
  2878  0003CE  C002  F0BF         	movff	?_ReadSHORT,interruptHandler@dev
  2879  0003D2  C003  F0C0         	movff	?_ReadSHORT+1,interruptHandler@dev+1
  2880                           
  2881                           ;main.c: 285: setMask(globdata | dev);
  2882  0003D6  0100               	movlb	0	; () banked
  2883  0003D8  51BF               	movf	interruptHandler@dev& (0+255),w,b
  2884  0003DA  0101               	movlb	1	; () banked
  2885  0003DC  111F               	iorwf	_globdata& (0+255),w,b
  2886  0003DE  6E05               	movwf	i2setMask@data,c
  2887  0003E0  0100               	movlb	0	; () banked
  2888  0003E2  51C0               	movf	(interruptHandler@dev+1)& (0+255),w,b
  2889  0003E4  0101               	movlb	1	; () banked
  2890  0003E6  1120               	iorwf	(_globdata+1)& (0+255),w,b
  2891  0003E8  6E06               	movwf	i2setMask@data+1,c
  2892  0003EA  EC97  F007         	call	i2_setMask	;wreg free
  2893                           
  2894                           ;main.c: 286: break;
  2895  0003EE  D04D               	goto	i2l145
  2896  0003F0                     i2l196:
  2897  0003F0  AA9E               	btfss	3998,5,c	;volatile
  2898  0003F2  D7FE               	goto	i2l196
  2899                           
  2900                           ;main.c: 294: unsigned short dev = ReadSHORT();
  2901  0003F4  EC09  F00D         	call	_ReadSHORT	;wreg free
  2902  0003F8  C002  F0BF         	movff	?_ReadSHORT,interruptHandler@dev
  2903  0003FC  C003  F0C0         	movff	?_ReadSHORT+1,interruptHandler@dev+1
  2904                           
  2905                           ;main.c: 295: setMask(globdata & ~dev);
  2906  000400  0100               	movlb	0	; () banked
  2907  000402  1DBF               	comf	interruptHandler@dev& (0+255),w,b
  2908  000404  0100               	movlb	0	; () banked
  2909  000406  6F60               	movwf	??_interruptHandler& (0+255),b
  2910  000408  0100               	movlb	0	; () banked
  2911  00040A  1DC0               	comf	(interruptHandler@dev+1)& (0+255),w,b
  2912  00040C  0100               	movlb	0	; () banked
  2913  00040E  6F61               	movwf	(??_interruptHandler+1)& (0+255),b
  2914  000410  0101               	movlb	1	; () banked
  2915  000412  511F               	movf	_globdata& (0+255),w,b
  2916  000414  0100               	movlb	0	; () banked
  2917  000416  1560               	andwf	??_interruptHandler& (0+255),w,b
  2918  000418  6E05               	movwf	i2setMask@data,c
  2919  00041A  0101               	movlb	1	; () banked
  2920  00041C  5120               	movf	(_globdata+1)& (0+255),w,b
  2921  00041E  0100               	movlb	0	; () banked
  2922  000420  1561               	andwf	(??_interruptHandler+1)& (0+255),w,b
  2923  000422  6E06               	movwf	i2setMask@data+1,c
  2924  000424  EC97  F007         	call	i2_setMask	;wreg free
  2925                           
  2926                           ;main.c: 296: break;
  2927  000428  D030               	goto	i2l145
  2928  00042A                     i2l200:
  2929  00042A  A2AC               	btfss	4012,1,c	;volatile
  2930  00042C  D7FE               	goto	i2l200
  2931                           
  2932                           ;main.c: 299: putsUSART("Unknow command");
  2933  00042E  0E05               	movlw	high STR_1
  2934  000430  6E57               	movwf	putsUSART@data+1,c
  2935  000432  0E29               	movlw	low STR_1
  2936  000434  6E56               	movwf	putsUSART@data,c
  2937  000436  ECE9  F00B         	call	_putsUSART	;wreg free
  2938                           
  2939                           ;main.c: 300: }
  2940  00043A  D027               	goto	i2l145
  2941  00043C                     i2l2999:
  2942  00043C  0100               	movlb	0	; () banked
  2943  00043E  51B8               	movf	interruptHandler@command& (0+255),w,b
  2944                           
  2945                           ; Switch size 1, requested type "space"
  2946                           ; Number of cases is 12, Range of values is 65 to 116
  2947                           ; switch strategies available:
  2948                           ; Name         Instructions Cycles
  2949                           ; simple_byte           37    19 (average)
  2950                           ;	Chosen strategy is simple_byte
  2951  000440  0A41               	xorlw	65	; case 65
  2952  000442  B4D8               	btfsc	status,2,c
  2953  000444  D7C0               	goto	i2l192
  2954  000446  0A05               	xorlw	5	; case 68
  2955  000448  B4D8               	btfsc	status,2,c
  2956  00044A  D735               	goto	i2l171
  2957  00044C  0A01               	xorlw	1	; case 69
  2958  00044E  B4D8               	btfsc	status,2,c
  2959  000450  D7CF               	goto	i2l196
  2960  000452  0A02               	xorlw	2	; case 71
  2961  000454  B4D8               	btfsc	status,2,c
  2962  000456  D637               	goto	i2l147
  2963  000458  0A0F               	xorlw	15	; case 72
  2964  00045A  B4D8               	btfsc	status,2,c
  2965  00045C  D64F               	goto	i2l151
  2966  00045E  0A01               	xorlw	1	; case 73
  2967  000460  B4D8               	btfsc	status,2,c
  2968  000462  D667               	goto	i2l155
  2969  000464  0A03               	xorlw	3	; case 74
  2970  000466  B4D8               	btfsc	status,2,c
  2971  000468  D69E               	goto	i2l159
  2972  00046A  0A01               	xorlw	1	; case 75
  2973  00046C  B4D8               	btfsc	status,2,c
  2974  00046E  D744               	goto	i2l178
  2975  000470  0A18               	xorlw	24	; case 83
  2976  000472  B4D8               	btfsc	status,2,c
  2977  000474  D619               	goto	i2l142
  2978  000476  0A07               	xorlw	7	; case 84
  2979  000478  B4D8               	btfsc	status,2,c
  2980  00047A  D6CF               	goto	i2l163
  2981  00047C  0A01               	xorlw	1	; case 85
  2982  00047E  B4D8               	btfsc	status,2,c
  2983  000480  D75C               	goto	i2l185
  2984  000482  0A21               	xorlw	33	; case 116
  2985  000484  B4D8               	btfsc	status,2,c
  2986  000486  D6E6               	goto	i2l167
  2987  000488  D7D0               	goto	i2l200
  2988  00048A                     i2l145:
  2989                           
  2990                           ;main.c: 301: PORTAbits.RA2 = 0;
  2991  00048A  9480               	bcf	3968,2,c	;volatile
  2992                           
  2993                           ;main.c: 302: PIR1bits.RCIF = 0;
  2994  00048C  9A9E               	bcf	3998,5,c	;volatile
  2995  00048E                     i2l203:
  2996  00048E  C071  FFF5         	movff	??_interruptHandler+17,tablat
  2997  000492  C070  FFF8         	movff	??_interruptHandler+16,tblptru
  2998  000496  C06F  FFF7         	movff	??_interruptHandler+15,tblptrh
  2999  00049A  C06E  FFF6         	movff	??_interruptHandler+14,tblptrl
  3000  00049E  C06D  FFF4         	movff	??_interruptHandler+13,prodh
  3001  0004A2  C06C  FFF3         	movff	??_interruptHandler+12,prodl
  3002  0004A6  C06B  FFDA         	movff	??_interruptHandler+11,fsr2h
  3003  0004AA  C06A  FFD9         	movff	??_interruptHandler+10,fsr2l
  3004  0004AE  C069  FFE2         	movff	??_interruptHandler+9,fsr1h
  3005  0004B2  C068  FFE1         	movff	??_interruptHandler+8,fsr1l
  3006  0004B6  C067  FFEA         	movff	??_interruptHandler+7,fsr0h
  3007  0004BA  C066  FFE9         	movff	??_interruptHandler+6,fsr0l
  3008  0004BE  C065  FFFB         	movff	??_interruptHandler+5,pclatu
  3009  0004C2  C064  FFFA         	movff	??_interruptHandler+4,pclath
  3010  0004C6  0011               	retfie		f
  3011  0004C8                     __end_of_interruptHandler:
  3012                           	opt stack 0
  3013                           pclatu	equ	0xFFB
  3014                           pclath	equ	0xFFA
  3015                           tblptru	equ	0xFF8
  3016                           tblptrh	equ	0xFF7
  3017                           tblptrl	equ	0xFF6
  3018                           tablat	equ	0xFF5
  3019                           prodh	equ	0xFF4
  3020                           prodl	equ	0xFF3
  3021                           intcon	equ	0xFF2
  3022                           postinc0	equ	0xFEE
  3023                           fsr0h	equ	0xFEA
  3024                           fsr0l	equ	0xFE9
  3025                           wreg	equ	0xFE8
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           fsr2h	equ	0xFDA
  3029                           fsr2l	equ	0xFD9
  3030                           status	equ	0xFD8
  3031                           
  3032 ;; *************** function i2_setMask *****************
  3033 ;; Defined at:
  3034 ;;		line 307 in file "main.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  data            2    4[COMRAM] unsigned short 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  setMask         2    9[COMRAM] unsigned short 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;		None               void
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1
  3048 ;;      Params:         2       0       0
  3049 ;;      Locals:         2       0       0
  3050 ;;      Temps:          3       0       0
  3051 ;;      Totals:         7       0       0
  3052 ;;Total ram usage:        7 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    1
  3055 ;; This function calls:
  3056 ;;		i2_Busy_eep
  3057 ;;		i2_Write_b_eep
  3058 ;; This function is called by:
  3059 ;;		_interruptHandler
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text10
  3064  000F2E                     __ptext10:
  3065                           	opt stack 0
  3066  000F2E                     i2_setMask:
  3067                           	opt stack 25
  3068                           
  3069                           ;main.c: 309: (Busy_eep(), Write_b_eep(0x06,data >> 8));
  3070                           
  3071                           ;incstack = 0
  3072  000F2E  ECB7  F00D         	call	i2_Busy_eep	;wreg free
  3073  000F32  0E00               	movlw	0
  3074  000F34  6E02               	movwf	i2Write_b_eep@badd+1,c
  3075  000F36  0E06               	movlw	6
  3076  000F38  6E01               	movwf	i2Write_b_eep@badd,c
  3077  000F3A  C006  F007         	movff	i2setMask@data+1,??i2_setMask
  3078  000F3E  C007  F008         	movff	??i2_setMask,??i2_setMask+1
  3079  000F42  6A09               	clrf	(??i2_setMask+2)& (0+255),c
  3080  000F44  5008               	movf	??i2_setMask+1,w,c
  3081  000F46  6E03               	movwf	i2Write_b_eep@bdat,c
  3082  000F48  ECD2  F00C         	call	i2_Write_b_eep	;wreg free
  3083  000F4C                     i2l206:
  3084  000F4C  B2A6               	btfsc	4006,1,c	;volatile
  3085  000F4E  D7FE               	goto	i2l206
  3086                           
  3087                           ;main.c: 311: (Busy_eep(), Write_b_eep(0x07,data));
  3088  000F50  ECB7  F00D         	call	i2_Busy_eep	;wreg free
  3089  000F54  0E00               	movlw	0
  3090  000F56  6E02               	movwf	i2Write_b_eep@badd+1,c
  3091  000F58  0E07               	movlw	7
  3092  000F5A  6E01               	movwf	i2Write_b_eep@badd,c
  3093  000F5C  C005  F003         	movff	i2setMask@data,i2Write_b_eep@bdat
  3094  000F60  ECD2  F00C         	call	i2_Write_b_eep	;wreg free
  3095                           
  3096                           ;main.c: 313: globdata = data;
  3097  000F64  C005  F11F         	movff	i2setMask@data,_globdata
  3098  000F68  C006  F120         	movff	i2setMask@data+1,_globdata+1
  3099                           
  3100                           ;main.c: 314: unsigned short out = data ^ globumask;
  3101  000F6C  0100               	movlb	0	; () banked
  3102  000F6E  51C6               	movf	_globumask& (0+255),w,b
  3103  000F70  1805               	xorwf	i2setMask@data,w,c
  3104  000F72  6E0A               	movwf	i2setMask@out,c
  3105  000F74  0100               	movlb	0	; () banked
  3106  000F76  51C7               	movf	(_globumask+1)& (0+255),w,b
  3107  000F78  1806               	xorwf	i2setMask@data+1,w,c
  3108  000F7A  6E0B               	movwf	i2setMask@out+1,c
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;main.c: 315: PORTC = (0x0f & out);
  3112  000F7C  500A               	movf	i2setMask@out,w,c
  3113  000F7E  0B0F               	andlw	15
  3114  000F80  6E82               	movwf	3970,c	;volatile
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;main.c: 316: PORTBbits.RB0 = (out >> 4) & 0x1;
  3118  000F82  C00A  F007         	movff	i2setMask@out,??i2_setMask
  3119  000F86  C00B  F008         	movff	i2setMask@out+1,??i2_setMask+1
  3120  000F8A  0E04               	movlw	4
  3121  000F8C  6E09               	movwf	(??i2_setMask+2)& (0+255),c
  3122  000F8E                     i2u285_45:
  3123  000F8E  90D8               	bcf	status,0,c
  3124  000F90  3208               	rrcf	??i2_setMask+1,f,c
  3125  000F92  3207               	rrcf	??i2_setMask,f,c
  3126  000F94  2E09               	decfsz	(??i2_setMask+2)& (0+255),f,c
  3127  000F96  D7FB               	goto	i2u285_45
  3128  000F98  0E01               	movlw	1
  3129  000F9A  1607               	andwf	??i2_setMask,f,c
  3130  000F9C  5081               	movf	3969,w,c	;volatile
  3131  000F9E  1807               	xorwf	??i2_setMask,w,c
  3132  000FA0  0BFE               	andlw	-2
  3133  000FA2  1807               	xorwf	??i2_setMask,w,c
  3134  000FA4  6E81               	movwf	3969,c	;volatile
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;main.c: 317: PORTAbits.RA7 = (out >> 5) & 0x1;
  3138  000FA6  C00A  F007         	movff	i2setMask@out,??i2_setMask
  3139  000FAA  C00B  F008         	movff	i2setMask@out+1,??i2_setMask+1
  3140  000FAE  0E05               	movlw	5
  3141  000FB0  6E09               	movwf	(??i2_setMask+2)& (0+255),c
  3142  000FB2                     i2u286_45:
  3143  000FB2  90D8               	bcf	status,0,c
  3144  000FB4  3208               	rrcf	??i2_setMask+1,f,c
  3145  000FB6  3207               	rrcf	??i2_setMask,f,c
  3146  000FB8  2E09               	decfsz	(??i2_setMask+2)& (0+255),f,c
  3147  000FBA  D7FB               	goto	i2u286_45
  3148  000FBC  0E01               	movlw	1
  3149  000FBE  1607               	andwf	??i2_setMask,f,c
  3150  000FC0  3207               	rrcf	??i2_setMask,f,c
  3151  000FC2  3207               	rrcf	??i2_setMask,f,c
  3152  000FC4  5080               	movf	3968,w,c	;volatile
  3153  000FC6  1807               	xorwf	??i2_setMask,w,c
  3154  000FC8  0B7F               	andlw	-129
  3155  000FCA  1807               	xorwf	??i2_setMask,w,c
  3156  000FCC  6E80               	movwf	3968,c	;volatile
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;main.c: 318: PORTAbits.RA6 = (out >> 6) & 0x1;
  3160  000FCE  C00A  F007         	movff	i2setMask@out,??i2_setMask
  3161  000FD2  C00B  F008         	movff	i2setMask@out+1,??i2_setMask+1
  3162  000FD6  0E06               	movlw	6
  3163  000FD8  6E09               	movwf	(??i2_setMask+2)& (0+255),c
  3164  000FDA                     i2u287_45:
  3165  000FDA  90D8               	bcf	status,0,c
  3166  000FDC  3208               	rrcf	??i2_setMask+1,f,c
  3167  000FDE  3207               	rrcf	??i2_setMask,f,c
  3168  000FE0  2E09               	decfsz	(??i2_setMask+2)& (0+255),f,c
  3169  000FE2  D7FB               	goto	i2u287_45
  3170  000FE4  0E01               	movlw	1
  3171  000FE6  1607               	andwf	??i2_setMask,f,c
  3172  000FE8  3A07               	swapf	??i2_setMask,f,c
  3173  000FEA  4607               	rlncf	??i2_setMask,f,c
  3174  000FEC  4607               	rlncf	??i2_setMask,f,c
  3175  000FEE  5080               	movf	3968,w,c	;volatile
  3176  000FF0  1807               	xorwf	??i2_setMask,w,c
  3177  000FF2  0BBF               	andlw	-65
  3178  000FF4  1807               	xorwf	??i2_setMask,w,c
  3179  000FF6  6E80               	movwf	3968,c	;volatile
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;main.c: 319: PORTAbits.RA5 = (out >> 7) & 0x1;
  3183  000FF8  C00A  F007         	movff	i2setMask@out,??i2_setMask
  3184  000FFC  C00B  F008         	movff	i2setMask@out+1,??i2_setMask+1
  3185  001000  0E07               	movlw	7
  3186  001002  6E09               	movwf	(??i2_setMask+2)& (0+255),c
  3187  001004                     i2u288_45:
  3188  001004  90D8               	bcf	status,0,c
  3189  001006  3208               	rrcf	??i2_setMask+1,f,c
  3190  001008  3207               	rrcf	??i2_setMask,f,c
  3191  00100A  2E09               	decfsz	(??i2_setMask+2)& (0+255),f,c
  3192  00100C  D7FB               	goto	i2u288_45
  3193  00100E  0E01               	movlw	1
  3194  001010  1607               	andwf	??i2_setMask,f,c
  3195  001012  3A07               	swapf	??i2_setMask,f,c
  3196  001014  4607               	rlncf	??i2_setMask,f,c
  3197  001016  5080               	movf	3968,w,c	;volatile
  3198  001018  1807               	xorwf	??i2_setMask,w,c
  3199  00101A  0BDF               	andlw	-33
  3200  00101C  1807               	xorwf	??i2_setMask,w,c
  3201  00101E  6E80               	movwf	3968,c	;volatile
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;main.c: 320: PORTAbits.RA4 = (out >> 8) & 0x1;
  3205  001020  C00B  F007         	movff	i2setMask@out+1,??i2_setMask
  3206  001024  C007  F008         	movff	??i2_setMask,??i2_setMask+1
  3207  001028  6A09               	clrf	(??i2_setMask+2)& (0+255),c
  3208  00102A  0E01               	movlw	1
  3209  00102C  1608               	andwf	??i2_setMask+1,f,c
  3210  00102E  3A08               	swapf	??i2_setMask+1,f,c
  3211  001030  5080               	movf	3968,w,c	;volatile
  3212  001032  1808               	xorwf	??i2_setMask+1,w,c
  3213  001034  0BEF               	andlw	-17
  3214  001036  1808               	xorwf	??i2_setMask+1,w,c
  3215  001038  6E80               	movwf	3968,c	;volatile
  3216                           
  3217                           ; BSR set to: 0
  3218  00103A  0012               	return	
  3219  00103C                     __end_ofi2_setMask:
  3220                           	opt stack 0
  3221                           pclatu	equ	0xFFB
  3222                           pclath	equ	0xFFA
  3223                           tblptru	equ	0xFF8
  3224                           tblptrh	equ	0xFF7
  3225                           tblptrl	equ	0xFF6
  3226                           tablat	equ	0xFF5
  3227                           prodh	equ	0xFF4
  3228                           prodl	equ	0xFF3
  3229                           intcon	equ	0xFF2
  3230                           postinc0	equ	0xFEE
  3231                           fsr0h	equ	0xFEA
  3232                           fsr0l	equ	0xFE9
  3233                           wreg	equ	0xFE8
  3234                           fsr1h	equ	0xFE2
  3235                           fsr1l	equ	0xFE1
  3236                           fsr2h	equ	0xFDA
  3237                           fsr2l	equ	0xFD9
  3238                           status	equ	0xFD8
  3239                           
  3240 ;; *************** function i2_Write_b_eep *****************
  3241 ;; Defined at:
  3242 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\write_B.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  badd            2    0[COMRAM] unsigned int 
  3245 ;;  bdat            1    2[COMRAM] unsigned char 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  Write_b_eep     1    3[COMRAM] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;		None               void
  3250 ;; Registers used:
  3251 ;;		wreg, status,2
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1
  3257 ;;      Params:         3       0       0
  3258 ;;      Locals:         1       0       0
  3259 ;;      Temps:          0       0       0
  3260 ;;      Totals:         4       0       0
  3261 ;;Total ram usage:        4 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_interruptHandler
  3267 ;;		i2_setMask
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text11
  3272  0019A4                     __ptext11:
  3273                           	opt stack 0
  3274  0019A4                     i2_Write_b_eep:
  3275                           	opt stack 25
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;incstack = 0
  3279  0019A4  0E00               	movlw	0
  3280  0019A6  6E04               	movwf	i2Write_b_eep@GIE_BIT_VAL,c
  3281  0019A8  C001  FFA9         	movff	i2Write_b_eep@badd,4009	;volatile
  3282  0019AC  C003  FFA8         	movff	i2Write_b_eep@bdat,4008	;volatile
  3283  0019B0  9EA6               	bcf	4006,7,c	;volatile
  3284  0019B2  9CA6               	bcf	4006,6,c	;volatile
  3285  0019B4  84A6               	bsf	4006,2,c	;volatile
  3286  0019B6  0E00               	movlw	0
  3287  0019B8  BEF2               	btfsc	intcon,7,c	;volatile
  3288  0019BA  0E01               	movlw	1
  3289  0019BC  6E04               	movwf	i2Write_b_eep@GIE_BIT_VAL,c
  3290  0019BE  9EF2               	bcf	intcon,7,c	;volatile
  3291  0019C0  0E55               	movlw	85
  3292  0019C2  6EA7               	movwf	4007,c	;volatile
  3293  0019C4  0EAA               	movlw	170
  3294  0019C6  6EA7               	movwf	4007,c	;volatile
  3295  0019C8  82A6               	bsf	4006,1,c	;volatile
  3296  0019CA                     i2l333:
  3297  0019CA  B2A6               	btfsc	4006,1,c	;volatile
  3298  0019CC  D7FE               	goto	i2l333
  3299  0019CE  B004               	btfsc	i2Write_b_eep@GIE_BIT_VAL,0,c
  3300  0019D0  D002               	bra	i2u260_45
  3301  0019D2  9EF2               	bcf	intcon,7,c	;volatile
  3302  0019D4  D001               	bra	i2u260_46
  3303  0019D6                     i2u260_45:
  3304  0019D6  8EF2               	bsf	intcon,7,c	;volatile
  3305  0019D8                     i2u260_46:
  3306  0019D8  94A6               	bcf	4006,2,c	;volatile
  3307  0019DA  0012               	return	
  3308  0019DC                     __end_ofi2_Write_b_eep:
  3309                           	opt stack 0
  3310                           pclatu	equ	0xFFB
  3311                           pclath	equ	0xFFA
  3312                           tblptru	equ	0xFF8
  3313                           tblptrh	equ	0xFF7
  3314                           tblptrl	equ	0xFF6
  3315                           tablat	equ	0xFF5
  3316                           prodh	equ	0xFF4
  3317                           prodl	equ	0xFF3
  3318                           intcon	equ	0xFF2
  3319                           postinc0	equ	0xFEE
  3320                           fsr0h	equ	0xFEA
  3321                           fsr0l	equ	0xFE9
  3322                           wreg	equ	0xFE8
  3323                           fsr1h	equ	0xFE2
  3324                           fsr1l	equ	0xFE1
  3325                           fsr2h	equ	0xFDA
  3326                           fsr2l	equ	0xFD9
  3327                           status	equ	0xFD8
  3328                           
  3329 ;; *************** function i2_Busy_eep *****************
  3330 ;; Defined at:
  3331 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\busy_eep.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;		None               void
  3338 ;; Registers used:
  3339 ;;		None
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1
  3345 ;;      Params:         0       0       0
  3346 ;;      Locals:         0       0       0
  3347 ;;      Temps:          0       0       0
  3348 ;;      Totals:         0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_interruptHandler
  3355 ;;		i2_setMask
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text12
  3360  001B6E                     __ptext12:
  3361                           	opt stack 0
  3362  001B6E                     i2_Busy_eep:
  3363                           	opt stack 25
  3364  001B6E                     i2l306:
  3365  001B6E  A2A6               	btfss	4006,1,c	;volatile
  3366  001B70  0012               	return	
  3367  001B72  D7FD               	goto	i2l306
  3368  001B74                     __end_ofi2_Busy_eep:
  3369                           	opt stack 0
  3370                           pclatu	equ	0xFFB
  3371                           pclath	equ	0xFFA
  3372                           tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           prodh	equ	0xFF4
  3377                           prodl	equ	0xFF3
  3378                           intcon	equ	0xFF2
  3379                           postinc0	equ	0xFEE
  3380                           fsr0h	equ	0xFEA
  3381                           fsr0l	equ	0xFE9
  3382                           wreg	equ	0xFE8
  3383                           fsr1h	equ	0xFE2
  3384                           fsr1l	equ	0xFE1
  3385                           fsr2h	equ	0xFDA
  3386                           fsr2l	equ	0xFD9
  3387                           status	equ	0xFD8
  3388                           
  3389 ;; *************** function i2_Read_b_eep *****************
  3390 ;; Defined at:
  3391 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\read_B.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  badd            2    0[COMRAM] unsigned int 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      unsigned char 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1
  3405 ;;      Params:         2       0       0
  3406 ;;      Locals:         0       0       0
  3407 ;;      Temps:          0       0       0
  3408 ;;      Totals:         2       0       0
  3409 ;;Total ram usage:        2 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_interruptHandler
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text13
  3419  001B2E                     __ptext13:
  3420                           	opt stack 0
  3421  001B2E                     i2_Read_b_eep:
  3422                           	opt stack 26
  3423                           
  3424                           ;incstack = 0
  3425  001B2E  C001  FFA9         	movff	i2Read_b_eep@badd,4009	;volatile
  3426  001B32  9CA6               	bcf	4006,6,c	;volatile
  3427  001B34  9EA6               	bcf	4006,7,c	;volatile
  3428  001B36  80A6               	bsf	4006,0,c	;volatile
  3429  001B38  F000               	nop	
  3430  001B3A  F000               	nop	
  3431  001B3C  50A8               	movf	4008,w,c	;volatile
  3432  001B3E  0012               	return	
  3433  001B40                     __end_ofi2_Read_b_eep:
  3434                           	opt stack 0
  3435                           pclatu	equ	0xFFB
  3436                           pclath	equ	0xFFA
  3437                           tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           intcon	equ	0xFF2
  3444                           postinc0	equ	0xFEE
  3445                           fsr0h	equ	0xFEA
  3446                           fsr0l	equ	0xFE9
  3447                           wreg	equ	0xFE8
  3448                           fsr1h	equ	0xFE2
  3449                           fsr1l	equ	0xFE1
  3450                           fsr2h	equ	0xFDA
  3451                           fsr2l	equ	0xFD9
  3452                           status	equ	0xFD8
  3453                           
  3454 ;; *************** function _utoa *****************
  3455 ;; Defined at:
  3456 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\itoa.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  buf             2    7[COMRAM] PTR unsigned char 
  3459 ;;		 -> interruptHandler@sg(65), 
  3460 ;;  val             2    9[COMRAM] unsigned int 
  3461 ;;  base            2   11[COMRAM] int 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  v               2   13[COMRAM] unsigned int 
  3464 ;;  c               1   15[COMRAM] unsigned char 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  2    7[COMRAM] PTR unsigned char 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1
  3474 ;;      Params:         6       0       0
  3475 ;;      Locals:         3       0       0
  3476 ;;      Temps:          0       0       0
  3477 ;;      Totals:         9       0       0
  3478 ;;Total ram usage:        9 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    1
  3481 ;; This function calls:
  3482 ;;		___lwdiv
  3483 ;;		___lwmod
  3484 ;; This function is called by:
  3485 ;;		_interruptHandler
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text14
  3490  001540                     __ptext14:
  3491                           	opt stack 0
  3492  001540                     _utoa:
  3493                           	opt stack 25
  3494                           
  3495                           ;incstack = 0
  3496  001540  C00A  F00E         	movff	utoa@val,utoa@v
  3497  001544  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  3498  001548                     i2l2719:
  3499  001548  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  3500  00154C  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  3501  001550  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3502  001554  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3503  001558  EC45  F00C         	call	___lwdiv	;wreg free
  3504  00155C  C001  F00E         	movff	?___lwdiv,utoa@v
  3505  001560  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  3506  001564  4A08               	infsnz	utoa@buf,f,c
  3507  001566  2A09               	incf	utoa@buf+1,f,c
  3508  001568  500F               	movf	utoa@v+1,w,c
  3509  00156A  100E               	iorwf	utoa@v,w,c
  3510  00156C  A4D8               	btfss	status,2,c
  3511  00156E  D7EC               	goto	i2l2719
  3512  001570  C008  FFD9         	movff	utoa@buf,fsr2l
  3513  001574  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3514  001578  0E00               	movlw	0
  3515  00157A  6EDF               	movwf	indf2,c
  3516  00157C  0608               	decf	utoa@buf,f,c
  3517  00157E  A0D8               	btfss	status,0,c
  3518  001580  0609               	decf	utoa@buf+1,f,c
  3519  001582                     i2l2729:
  3520  001582  C00A  F001         	movff	utoa@val,___lwmod@dividend
  3521  001586  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  3522  00158A  C00C  F003         	movff	utoa@base,___lwmod@divisor
  3523  00158E  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  3524  001592  EC92  F00C         	call	___lwmod	;wreg free
  3525  001596  5001               	movf	?___lwmod,w,c
  3526  001598  6E10               	movwf	utoa@c,c
  3527  00159A  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  3528  00159E  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  3529  0015A2  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3530  0015A6  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3531  0015AA  EC45  F00C         	call	___lwdiv	;wreg free
  3532  0015AE  C001  F00A         	movff	?___lwdiv,utoa@val
  3533  0015B2  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  3534  0015B6  0E09               	movlw	9
  3535  0015B8  6410               	cpfsgt	utoa@c,c
  3536  0015BA  D002               	goto	i2l860
  3537  0015BC  0E07               	movlw	7
  3538  0015BE  2610               	addwf	utoa@c,f,c
  3539  0015C0                     i2l860:
  3540  0015C0  0E30               	movlw	48
  3541  0015C2  2610               	addwf	utoa@c,f,c
  3542  0015C4  C008  FFD9         	movff	utoa@buf,fsr2l
  3543  0015C8  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3544  0015CC  C010  FFDF         	movff	utoa@c,indf2
  3545  0015D0  0608               	decf	utoa@buf,f,c
  3546  0015D2  A0D8               	btfss	status,0,c
  3547  0015D4  0609               	decf	utoa@buf+1,f,c
  3548  0015D6  500B               	movf	utoa@val+1,w,c
  3549  0015D8  100A               	iorwf	utoa@val,w,c
  3550  0015DA  A4D8               	btfss	status,2,c
  3551  0015DC  D7D2               	goto	i2l2729
  3552                           
  3553                           ;	Return value of _utoa is never used
  3554  0015DE  4A08               	infsnz	utoa@buf,f,c
  3555  0015E0  2A09               	incf	utoa@buf+1,f,c
  3556  0015E2  0012               	return	
  3557  0015E4                     __end_of_utoa:
  3558                           	opt stack 0
  3559                           pclatu	equ	0xFFB
  3560                           pclath	equ	0xFFA
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           prodh	equ	0xFF4
  3566                           prodl	equ	0xFF3
  3567                           intcon	equ	0xFF2
  3568                           postinc0	equ	0xFEE
  3569                           fsr0h	equ	0xFEA
  3570                           fsr0l	equ	0xFE9
  3571                           wreg	equ	0xFE8
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           indf2	equ	0xFDF
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           status	equ	0xFD8
  3578                           
  3579 ;; *************** function ___lwmod *****************
  3580 ;; Defined at:
  3581 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  dividend        2    0[COMRAM] unsigned int 
  3584 ;;  divisor         2    2[COMRAM] unsigned int 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  counter         1    4[COMRAM] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  2    0[COMRAM] unsigned int 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1
  3596 ;;      Params:         4       0       0
  3597 ;;      Locals:         1       0       0
  3598 ;;      Temps:          0       0       0
  3599 ;;      Totals:         5       0       0
  3600 ;;Total ram usage:        5 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_utoa
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text15
  3610  001924                     __ptext15:
  3611                           	opt stack 0
  3612  001924                     ___lwmod:
  3613                           	opt stack 25
  3614                           
  3615                           ;incstack = 0
  3616  001924  5004               	movf	___lwmod@divisor+1,w,c
  3617  001926  1003               	iorwf	___lwmod@divisor,w,c
  3618  001928  B4D8               	btfsc	status,2,c
  3619  00192A  D018               	goto	i2l964
  3620  00192C  0E01               	movlw	1
  3621  00192E  6E05               	movwf	___lwmod@counter,c
  3622  001930  D004               	goto	i2l2575
  3623  001932                     i2l2573:
  3624  001932  90D8               	bcf	status,0,c
  3625  001934  3603               	rlcf	___lwmod@divisor,f,c
  3626  001936  3604               	rlcf	___lwmod@divisor+1,f,c
  3627  001938  2A05               	incf	___lwmod@counter,f,c
  3628  00193A                     i2l2575:
  3629  00193A  AE04               	btfss	___lwmod@divisor+1,7,c
  3630  00193C  D7FA               	goto	i2l2573
  3631  00193E                     i2l2577:
  3632  00193E  5003               	movf	___lwmod@divisor,w,c
  3633  001940  5C01               	subwf	___lwmod@dividend,w,c
  3634  001942  5004               	movf	___lwmod@divisor+1,w,c
  3635  001944  5802               	subwfb	___lwmod@dividend+1,w,c
  3636  001946  A0D8               	btfss	status,0,c
  3637  001948  D004               	goto	i2l2581
  3638  00194A  5003               	movf	___lwmod@divisor,w,c
  3639  00194C  5E01               	subwf	___lwmod@dividend,f,c
  3640  00194E  5004               	movf	___lwmod@divisor+1,w,c
  3641  001950  5A02               	subwfb	___lwmod@dividend+1,f,c
  3642  001952                     i2l2581:
  3643  001952  90D8               	bcf	status,0,c
  3644  001954  3204               	rrcf	___lwmod@divisor+1,f,c
  3645  001956  3203               	rrcf	___lwmod@divisor,f,c
  3646  001958  2E05               	decfsz	___lwmod@counter,f,c
  3647  00195A  D7F1               	goto	i2l2577
  3648  00195C                     i2l964:
  3649  00195C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3650  001960  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3651  001964  0012               	return	
  3652  001966                     __end_of___lwmod:
  3653                           	opt stack 0
  3654                           pclatu	equ	0xFFB
  3655                           pclath	equ	0xFFA
  3656                           tblptru	equ	0xFF8
  3657                           tblptrh	equ	0xFF7
  3658                           tblptrl	equ	0xFF6
  3659                           tablat	equ	0xFF5
  3660                           prodh	equ	0xFF4
  3661                           prodl	equ	0xFF3
  3662                           intcon	equ	0xFF2
  3663                           postinc0	equ	0xFEE
  3664                           fsr0h	equ	0xFEA
  3665                           fsr0l	equ	0xFE9
  3666                           wreg	equ	0xFE8
  3667                           fsr1h	equ	0xFE2
  3668                           fsr1l	equ	0xFE1
  3669                           indf2	equ	0xFDF
  3670                           fsr2h	equ	0xFDA
  3671                           fsr2l	equ	0xFD9
  3672                           status	equ	0xFD8
  3673                           
  3674 ;; *************** function ___lwdiv *****************
  3675 ;; Defined at:
  3676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  dividend        2    0[COMRAM] unsigned int 
  3679 ;;  divisor         2    2[COMRAM] unsigned int 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  quotient        2    4[COMRAM] unsigned int 
  3682 ;;  counter         1    6[COMRAM] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  2    0[COMRAM] unsigned int 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1
  3692 ;;      Params:         4       0       0
  3693 ;;      Locals:         3       0       0
  3694 ;;      Temps:          0       0       0
  3695 ;;      Totals:         7       0       0
  3696 ;;Total ram usage:        7 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_utoa
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text16
  3706  00188A                     __ptext16:
  3707                           	opt stack 0
  3708  00188A                     ___lwdiv:
  3709                           	opt stack 25
  3710                           
  3711                           ;incstack = 0
  3712  00188A  0E00               	movlw	0
  3713  00188C  6E06               	movwf	___lwdiv@quotient+1,c
  3714  00188E  0E00               	movlw	0
  3715  001890  6E05               	movwf	___lwdiv@quotient,c
  3716  001892  5004               	movf	___lwdiv@divisor+1,w,c
  3717  001894  1003               	iorwf	___lwdiv@divisor,w,c
  3718  001896  B4D8               	btfsc	status,2,c
  3719  001898  D01C               	goto	i2l954
  3720  00189A  0E01               	movlw	1
  3721  00189C  6E07               	movwf	___lwdiv@counter,c
  3722  00189E  D004               	goto	i2l2555
  3723  0018A0                     i2l2553:
  3724  0018A0  90D8               	bcf	status,0,c
  3725  0018A2  3603               	rlcf	___lwdiv@divisor,f,c
  3726  0018A4  3604               	rlcf	___lwdiv@divisor+1,f,c
  3727  0018A6  2A07               	incf	___lwdiv@counter,f,c
  3728  0018A8                     i2l2555:
  3729  0018A8  AE04               	btfss	___lwdiv@divisor+1,7,c
  3730  0018AA  D7FA               	goto	i2l2553
  3731  0018AC                     i2l2557:
  3732  0018AC  90D8               	bcf	status,0,c
  3733  0018AE  3605               	rlcf	___lwdiv@quotient,f,c
  3734  0018B0  3606               	rlcf	___lwdiv@quotient+1,f,c
  3735  0018B2  5003               	movf	___lwdiv@divisor,w,c
  3736  0018B4  5C01               	subwf	___lwdiv@dividend,w,c
  3737  0018B6  5004               	movf	___lwdiv@divisor+1,w,c
  3738  0018B8  5802               	subwfb	___lwdiv@dividend+1,w,c
  3739  0018BA  A0D8               	btfss	status,0,c
  3740  0018BC  D005               	goto	i2l2565
  3741  0018BE  5003               	movf	___lwdiv@divisor,w,c
  3742  0018C0  5E01               	subwf	___lwdiv@dividend,f,c
  3743  0018C2  5004               	movf	___lwdiv@divisor+1,w,c
  3744  0018C4  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3745  0018C6  8005               	bsf	___lwdiv@quotient,0,c
  3746  0018C8                     i2l2565:
  3747  0018C8  90D8               	bcf	status,0,c
  3748  0018CA  3204               	rrcf	___lwdiv@divisor+1,f,c
  3749  0018CC  3203               	rrcf	___lwdiv@divisor,f,c
  3750  0018CE  2E07               	decfsz	___lwdiv@counter,f,c
  3751  0018D0  D7ED               	goto	i2l2557
  3752  0018D2                     i2l954:
  3753  0018D2  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3754  0018D6  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3755  0018DA  0012               	return	
  3756  0018DC                     __end_of___lwdiv:
  3757                           	opt stack 0
  3758                           pclatu	equ	0xFFB
  3759                           pclath	equ	0xFFA
  3760                           tblptru	equ	0xFF8
  3761                           tblptrh	equ	0xFF7
  3762                           tblptrl	equ	0xFF6
  3763                           tablat	equ	0xFF5
  3764                           prodh	equ	0xFF4
  3765                           prodl	equ	0xFF3
  3766                           intcon	equ	0xFF2
  3767                           postinc0	equ	0xFEE
  3768                           fsr0h	equ	0xFEA
  3769                           fsr0l	equ	0xFE9
  3770                           wreg	equ	0xFE8
  3771                           fsr1h	equ	0xFE2
  3772                           fsr1l	equ	0xFE1
  3773                           indf2	equ	0xFDF
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _readtemp *****************
  3779 ;; Defined at:
  3780 ;;		line 183 in file "main.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  channel         2   42[COMRAM] int 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  v               3   45[COMRAM] float 
  3785 ;;  vadc            2   50[COMRAM] int 
  3786 ;;  vfor12          2   48[COMRAM] int 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  3   42[COMRAM] float 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0, prodl, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1
  3796 ;;      Params:         3       0       0
  3797 ;;      Locals:         7       0       0
  3798 ;;      Temps:          0       0       0
  3799 ;;      Totals:        10       0       0
  3800 ;;Total ram usage:       10 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    2
  3803 ;; This function calls:
  3804 ;;		_BusyADC
  3805 ;;		_ConvertADC
  3806 ;;		_ReadADC
  3807 ;;		_SetChanADC
  3808 ;;		___awtoft
  3809 ;;		___ftdiv
  3810 ;;		___ftmul
  3811 ;; This function is called by:
  3812 ;;		_interruptHandler
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text17
  3817  0013EE                     __ptext17:
  3818                           	opt stack 0
  3819  0013EE                     _readtemp:
  3820                           	opt stack 24
  3821                           
  3822                           ;main.c: 184: SetChanADC(0b11111111);
  3823                           
  3824                           ;incstack = 0
  3825  0013EE  0EFF               	movlw	255
  3826  0013F0  EC83  F00D         	call	_SetChanADC
  3827                           
  3828                           ;main.c: 185: ConvertADC();
  3829  0013F4  ECBA  F00D         	call	_ConvertADC	;wreg free
  3830  0013F8                     i2l2699:
  3831  0013F8  ECA9  F00D         	call	_BusyADC	;wreg free
  3832  0013FC  0900               	iorlw	0
  3833  0013FE  A4D8               	btfss	status,2,c
  3834  001400  D7FB               	goto	i2l2699
  3835                           
  3836                           ;main.c: 187: int vfor12 = ReadADC();
  3837  001402  ECAF  F00D         	call	_ReadADC	;wreg free
  3838  001406  C001  F031         	movff	?_ReadADC,readtemp@vfor12
  3839  00140A  C002  F032         	movff	?_ReadADC+1,readtemp@vfor12+1
  3840                           
  3841                           ;main.c: 189: SetChanADC(channel);
  3842  00140E  502B               	movf	readtemp@channel,w,c
  3843  001410  EC83  F00D         	call	_SetChanADC
  3844                           
  3845                           ;main.c: 190: ConvertADC();
  3846  001414  ECBA  F00D         	call	_ConvertADC	;wreg free
  3847  001418                     i2l2707:
  3848  001418  ECA9  F00D         	call	_BusyADC	;wreg free
  3849  00141C  0900               	iorlw	0
  3850  00141E  A4D8               	btfss	status,2,c
  3851  001420  D7FB               	goto	i2l2707
  3852                           
  3853                           ;main.c: 192: int vadc = ReadADC();
  3854  001422  ECAF  F00D         	call	_ReadADC	;wreg free
  3855  001426  C001  F033         	movff	?_ReadADC,readtemp@vadc
  3856  00142A  C002  F034         	movff	?_ReadADC+1,readtemp@vadc+1
  3857                           
  3858                           ;main.c: 194: float v = (((120/(float)vfor12) * (float)vadc));
  3859  00142E  C031  F009         	movff	readtemp@vfor12,___awtoft@c
  3860  001432  C032  F00A         	movff	readtemp@vfor12+1,___awtoft@c+1
  3861  001436  EC6E  F00C         	call	___awtoft	;wreg free
  3862  00143A  C009  F010         	movff	?___awtoft,___ftdiv@f2
  3863  00143E  C00A  F011         	movff	?___awtoft+1,___ftdiv@f2+1
  3864  001442  C00B  F012         	movff	?___awtoft+2,___ftdiv@f2+2
  3865  001446  0E00               	movlw	0
  3866  001448  6E0D               	movwf	___ftdiv@f1,c
  3867  00144A  0EF0               	movlw	240
  3868  00144C  6E0E               	movwf	___ftdiv@f1+1,c
  3869  00144E  0E42               	movlw	66
  3870  001450  6E0F               	movwf	___ftdiv@f1+2,c
  3871  001452  EC86  F009         	call	___ftdiv	;wreg free
  3872  001456  C00D  F01C         	movff	?___ftdiv,___ftmul@f1
  3873  00145A  C00E  F01D         	movff	?___ftdiv+1,___ftmul@f1+1
  3874  00145E  C00F  F01E         	movff	?___ftdiv+2,___ftmul@f1+2
  3875  001462  C033  F009         	movff	readtemp@vadc,___awtoft@c
  3876  001466  C034  F00A         	movff	readtemp@vadc+1,___awtoft@c+1
  3877  00146A  EC6E  F00C         	call	___awtoft	;wreg free
  3878  00146E  C009  F01F         	movff	?___awtoft,___ftmul@f2
  3879  001472  C00A  F020         	movff	?___awtoft+1,___ftmul@f2+1
  3880  001476  C00B  F021         	movff	?___awtoft+2,___ftmul@f2+2
  3881  00147A  EC99  F008         	call	___ftmul	;wreg free
  3882  00147E  C01C  F02E         	movff	?___ftmul,readtemp@v
  3883  001482  C01D  F02F         	movff	?___ftmul+1,readtemp@v+1
  3884  001486  C01E  F030         	movff	?___ftmul+2,readtemp@v+2
  3885                           
  3886                           ;main.c: 195: return v;
  3887  00148A  C02E  F02B         	movff	readtemp@v,?_readtemp
  3888  00148E  C02F  F02C         	movff	readtemp@v+1,?_readtemp+1
  3889  001492  C030  F02D         	movff	readtemp@v+2,?_readtemp+2
  3890  001496  0012               	return	
  3891  001498                     __end_of_readtemp:
  3892                           	opt stack 0
  3893                           pclatu	equ	0xFFB
  3894                           pclath	equ	0xFFA
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           prodh	equ	0xFF4
  3900                           prodl	equ	0xFF3
  3901                           intcon	equ	0xFF2
  3902                           postinc0	equ	0xFEE
  3903                           fsr0h	equ	0xFEA
  3904                           fsr0l	equ	0xFE9
  3905                           wreg	equ	0xFE8
  3906                           fsr1h	equ	0xFE2
  3907                           fsr1l	equ	0xFE1
  3908                           indf2	equ	0xFDF
  3909                           fsr2h	equ	0xFDA
  3910                           fsr2l	equ	0xFD9
  3911                           status	equ	0xFD8
  3912                           
  3913 ;; *************** function ___ftdiv *****************
  3914 ;; Defined at:
  3915 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  f1              3   12[COMRAM] float 
  3918 ;;  f2              3   15[COMRAM] float 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  f3              3   22[COMRAM] float 
  3921 ;;  sign            1   26[COMRAM] unsigned char 
  3922 ;;  exp             1   25[COMRAM] unsigned char 
  3923 ;;  cntr            1   21[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  3   12[COMRAM] float 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1
  3933 ;;      Params:         6       0       0
  3934 ;;      Locals:         6       0       0
  3935 ;;      Temps:          3       0       0
  3936 ;;      Totals:        15       0       0
  3937 ;;Total ram usage:       15 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    1
  3940 ;; This function calls:
  3941 ;;		___ftpack
  3942 ;; This function is called by:
  3943 ;;		_readtemp
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text18
  3948  00130C                     __ptext18:
  3949                           	opt stack 0
  3950  00130C                     ___ftdiv:
  3951                           	opt stack 24
  3952                           
  3953                           ;incstack = 0
  3954  00130C  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  3955  001310  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  3956  001312  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  3957  001314  340E               	rlcf	___ftdiv@f1+1,w,c
  3958  001316  3613               	rlcf	??___ftdiv& (0+255),f,c
  3959  001318  E301               	bnc	u230_41
  3960  00131A  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  3961  00131C                     u230_41:
  3962  00131C  5013               	movf	??___ftdiv,w,c
  3963  00131E  6E1A               	movwf	___ftdiv@exp,c
  3964  001320  661A               	tstfsz	___ftdiv@exp& (0+255),c
  3965  001322  D007               	goto	i2l2381
  3966  001324  0E00               	movlw	0
  3967  001326  6E0D               	movwf	?___ftdiv,c
  3968  001328  0E00               	movlw	0
  3969  00132A  6E0E               	movwf	?___ftdiv+1,c
  3970  00132C  0E00               	movlw	0
  3971  00132E  6E0F               	movwf	?___ftdiv+2,c
  3972  001330  0012               	return	
  3973  001332                     i2l2381:
  3974  001332  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  3975  001336  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  3976  001338  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  3977  00133A  3411               	rlcf	___ftdiv@f2+1,w,c
  3978  00133C  3613               	rlcf	??___ftdiv& (0+255),f,c
  3979  00133E  E301               	bnc	u232_41
  3980  001340  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  3981  001342                     u232_41:
  3982  001342  5013               	movf	??___ftdiv,w,c
  3983  001344  6E1B               	movwf	___ftdiv@sign,c
  3984  001346  661B               	tstfsz	___ftdiv@sign& (0+255),c
  3985  001348  D007               	goto	i2l2387
  3986  00134A  0E00               	movlw	0
  3987  00134C  6E0D               	movwf	?___ftdiv,c
  3988  00134E  0E00               	movlw	0
  3989  001350  6E0E               	movwf	?___ftdiv+1,c
  3990  001352  0E00               	movlw	0
  3991  001354  6E0F               	movwf	?___ftdiv+2,c
  3992  001356  0012               	return	
  3993  001358                     i2l2387:
  3994  001358  0E00               	movlw	0
  3995  00135A  6E17               	movwf	___ftdiv@f3,c
  3996  00135C  0E00               	movlw	0
  3997  00135E  6E18               	movwf	___ftdiv@f3+1,c
  3998  001360  0E00               	movlw	0
  3999  001362  6E19               	movwf	___ftdiv@f3+2,c
  4000  001364  501B               	movf	___ftdiv@sign,w,c
  4001  001366  0F89               	addlw	137
  4002  001368  5E1A               	subwf	___ftdiv@exp,f,c
  4003  00136A  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  4004  00136E  5012               	movf	___ftdiv@f2+2,w,c
  4005  001370  1A1B               	xorwf	___ftdiv@sign,f,c
  4006  001372  0E80               	movlw	128
  4007  001374  161B               	andwf	___ftdiv@sign,f,c
  4008  001376  8E0E               	bsf	___ftdiv@f1+1,7,c
  4009  001378  0EFF               	movlw	255
  4010  00137A  160D               	andwf	___ftdiv@f1,f,c
  4011  00137C  0EFF               	movlw	255
  4012  00137E  160E               	andwf	___ftdiv@f1+1,f,c
  4013  001380  0E00               	movlw	0
  4014  001382  160F               	andwf	___ftdiv@f1+2,f,c
  4015  001384  8E11               	bsf	___ftdiv@f2+1,7,c
  4016  001386  0EFF               	movlw	255
  4017  001388  1610               	andwf	___ftdiv@f2,f,c
  4018  00138A  0EFF               	movlw	255
  4019  00138C  1611               	andwf	___ftdiv@f2+1,f,c
  4020  00138E  0E00               	movlw	0
  4021  001390  1612               	andwf	___ftdiv@f2+2,f,c
  4022  001392  0E18               	movlw	24
  4023  001394  6E16               	movwf	___ftdiv@cntr,c
  4024  001396                     i2l2407:
  4025  001396  90D8               	bcf	status,0,c
  4026  001398  3617               	rlcf	___ftdiv@f3,f,c
  4027  00139A  3618               	rlcf	___ftdiv@f3+1,f,c
  4028  00139C  3619               	rlcf	___ftdiv@f3+2,f,c
  4029  00139E  5010               	movf	___ftdiv@f2,w,c
  4030  0013A0  5C0D               	subwf	___ftdiv@f1,w,c
  4031  0013A2  5011               	movf	___ftdiv@f2+1,w,c
  4032  0013A4  580E               	subwfb	___ftdiv@f1+1,w,c
  4033  0013A6  5012               	movf	___ftdiv@f2+2,w,c
  4034  0013A8  580F               	subwfb	___ftdiv@f1+2,w,c
  4035  0013AA  A0D8               	btfss	status,0,c
  4036  0013AC  D007               	goto	i2l793
  4037  0013AE  5010               	movf	___ftdiv@f2,w,c
  4038  0013B0  5E0D               	subwf	___ftdiv@f1,f,c
  4039  0013B2  5011               	movf	___ftdiv@f2+1,w,c
  4040  0013B4  5A0E               	subwfb	___ftdiv@f1+1,f,c
  4041  0013B6  5012               	movf	___ftdiv@f2+2,w,c
  4042  0013B8  5A0F               	subwfb	___ftdiv@f1+2,f,c
  4043  0013BA  8017               	bsf	___ftdiv@f3,0,c
  4044  0013BC                     i2l793:
  4045  0013BC  90D8               	bcf	status,0,c
  4046  0013BE  360D               	rlcf	___ftdiv@f1,f,c
  4047  0013C0  360E               	rlcf	___ftdiv@f1+1,f,c
  4048  0013C2  360F               	rlcf	___ftdiv@f1+2,f,c
  4049  0013C4  2E16               	decfsz	___ftdiv@cntr,f,c
  4050  0013C6  D7E7               	goto	i2l2407
  4051  0013C8  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  4052  0013CC  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4053  0013D0  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4054  0013D4  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  4055  0013D8  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  4056  0013DC  EC4C  F00A         	call	___ftpack	;wreg free
  4057  0013E0  C001  F00D         	movff	?___ftpack,?___ftdiv
  4058  0013E4  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  4059  0013E8  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  4060  0013EC  0012               	return	
  4061  0013EE                     __end_of___ftdiv:
  4062                           	opt stack 0
  4063                           pclatu	equ	0xFFB
  4064                           pclath	equ	0xFFA
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           prodh	equ	0xFF4
  4070                           prodl	equ	0xFF3
  4071                           intcon	equ	0xFF2
  4072                           postinc0	equ	0xFEE
  4073                           fsr0h	equ	0xFEA
  4074                           fsr0l	equ	0xFE9
  4075                           wreg	equ	0xFE8
  4076                           fsr1h	equ	0xFE2
  4077                           fsr1l	equ	0xFE1
  4078                           indf2	equ	0xFDF
  4079                           fsr2h	equ	0xFDA
  4080                           fsr2l	equ	0xFD9
  4081                           status	equ	0xFD8
  4082                           
  4083 ;; *************** function ___awtoft *****************
  4084 ;; Defined at:
  4085 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;  c               2    8[COMRAM] int 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  sign            1   11[COMRAM] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  3    8[COMRAM] float 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, prodl, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1
  4099 ;;      Params:         3       0       0
  4100 ;;      Locals:         1       0       0
  4101 ;;      Temps:          0       0       0
  4102 ;;      Totals:         4       0       0
  4103 ;;Total ram usage:        4 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    1
  4106 ;; This function calls:
  4107 ;;		___ftpack
  4108 ;; This function is called by:
  4109 ;;		_readtemp
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           	psect	text19
  4114  0018DC                     __ptext19:
  4115                           	opt stack 0
  4116  0018DC                     ___awtoft:
  4117                           	opt stack 24
  4118                           
  4119                           ;incstack = 0
  4120  0018DC  0E00               	movlw	0
  4121  0018DE  6E0C               	movwf	___awtoft@sign,c
  4122  0018E0  500A               	movf	___awtoft@c+1,w,c
  4123  0018E2  0A80               	xorlw	128
  4124  0018E4  6EF3               	movwf	prodl,c
  4125  0018E6  0E80               	movlw	128
  4126  0018E8  5CF3               	subwf	prodl,w,c
  4127  0018EA  0E00               	movlw	0
  4128  0018EC  B4D8               	btfsc	status,2,c
  4129  0018EE  5C09               	subwf	___awtoft@c,w,c
  4130  0018F0  B0D8               	btfsc	status,0,c
  4131  0018F2  D006               	goto	i2l2483
  4132  0018F4  6C09               	negf	___awtoft@c,c
  4133  0018F6  1E0A               	comf	___awtoft@c+1,f,c
  4134  0018F8  B0D8               	btfsc	status,0,c
  4135  0018FA  2A0A               	incf	___awtoft@c+1,f,c
  4136  0018FC  0E01               	movlw	1
  4137  0018FE  6E0C               	movwf	___awtoft@sign,c
  4138  001900                     i2l2483:
  4139  001900  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4140  001904  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4141  001908  6A03               	clrf	___ftpack@arg+2,c
  4142  00190A  0E8E               	movlw	142
  4143  00190C  6E04               	movwf	___ftpack@exp,c
  4144  00190E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4145  001912  EC4C  F00A         	call	___ftpack	;wreg free
  4146  001916  C001  F009         	movff	?___ftpack,?___awtoft
  4147  00191A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4148  00191E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4149  001922  0012               	return	
  4150  001924                     __end_of___awtoft:
  4151                           	opt stack 0
  4152                           pclatu	equ	0xFFB
  4153                           pclath	equ	0xFFA
  4154                           tblptru	equ	0xFF8
  4155                           tblptrh	equ	0xFF7
  4156                           tblptrl	equ	0xFF6
  4157                           tablat	equ	0xFF5
  4158                           prodh	equ	0xFF4
  4159                           prodl	equ	0xFF3
  4160                           intcon	equ	0xFF2
  4161                           postinc0	equ	0xFEE
  4162                           fsr0h	equ	0xFEA
  4163                           fsr0l	equ	0xFE9
  4164                           wreg	equ	0xFE8
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           indf2	equ	0xFDF
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           status	equ	0xFD8
  4171                           
  4172 ;; *************** function _SetChanADC *****************
  4173 ;; Defined at:
  4174 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcsetch.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  channel         1    wreg     unsigned char 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  channel         1    1[COMRAM] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;		None               void
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1
  4188 ;;      Params:         0       0       0
  4189 ;;      Locals:         1       0       0
  4190 ;;      Temps:          1       0       0
  4191 ;;      Totals:         2       0       0
  4192 ;;Total ram usage:        2 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_readtemp
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text20
  4202  001B06                     __ptext20:
  4203                           	opt stack 0
  4204  001B06                     _SetChanADC:
  4205                           	opt stack 25
  4206                           
  4207                           ;incstack = 0
  4208                           ;SetChanADC@channel stored from wreg
  4209  001B06  6E02               	movwf	SetChanADC@channel,c
  4210  001B08  CFC2 F001          	movff	4034,??_SetChanADC	;volatile
  4211  001B0C  0EC3               	movlw	195
  4212  001B0E  1601               	andwf	??_SetChanADC,f,c
  4213  001B10  90D8               	bcf	status,0,c
  4214  001B12  3002               	rrcf	SetChanADC@channel,w,c
  4215  001B14  0B3C               	andlw	60
  4216  001B16  1001               	iorwf	??_SetChanADC,w,c
  4217  001B18  6EC2               	movwf	4034,c	;volatile
  4218  001B1A  0012               	return	
  4219  001B1C                     __end_of_SetChanADC:
  4220                           	opt stack 0
  4221                           pclatu	equ	0xFFB
  4222                           pclath	equ	0xFFA
  4223                           tblptru	equ	0xFF8
  4224                           tblptrh	equ	0xFF7
  4225                           tblptrl	equ	0xFF6
  4226                           tablat	equ	0xFF5
  4227                           prodh	equ	0xFF4
  4228                           prodl	equ	0xFF3
  4229                           intcon	equ	0xFF2
  4230                           postinc0	equ	0xFEE
  4231                           fsr0h	equ	0xFEA
  4232                           fsr0l	equ	0xFE9
  4233                           wreg	equ	0xFE8
  4234                           fsr1h	equ	0xFE2
  4235                           fsr1l	equ	0xFE1
  4236                           indf2	equ	0xFDF
  4237                           fsr2h	equ	0xFDA
  4238                           fsr2l	equ	0xFD9
  4239                           status	equ	0xFD8
  4240                           
  4241 ;; *************** function _ReadADC *****************
  4242 ;; Defined at:
  4243 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcread.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  2    0[COMRAM] int 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1
  4257 ;;      Params:         2       0       0
  4258 ;;      Locals:         0       0       0
  4259 ;;      Temps:          0       0       0
  4260 ;;      Totals:         2       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_readtemp
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text21
  4271  001B5E                     __ptext21:
  4272                           	opt stack 0
  4273  001B5E                     _ReadADC:
  4274                           	opt stack 25
  4275                           
  4276                           ;incstack = 0
  4277  001B5E  50C4               	movf	4036,w,c	;volatile
  4278  001B60  6E02               	movwf	?_ReadADC+1,c
  4279  001B62  50C3               	movf	4035,w,c	;volatile
  4280  001B64  6E01               	movwf	?_ReadADC,c
  4281  001B66  0012               	return	
  4282  001B68                     __end_of_ReadADC:
  4283                           	opt stack 0
  4284                           pclatu	equ	0xFFB
  4285                           pclath	equ	0xFFA
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           intcon	equ	0xFF2
  4293                           postinc0	equ	0xFEE
  4294                           fsr0h	equ	0xFEA
  4295                           fsr0l	equ	0xFE9
  4296                           wreg	equ	0xFE8
  4297                           fsr1h	equ	0xFE2
  4298                           fsr1l	equ	0xFE1
  4299                           indf2	equ	0xFDF
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _ConvertADC *****************
  4305 ;; Defined at:
  4306 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcconv.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;		None               void
  4313 ;; Registers used:
  4314 ;;		None
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1
  4320 ;;      Params:         0       0       0
  4321 ;;      Locals:         0       0       0
  4322 ;;      Temps:          0       0       0
  4323 ;;      Totals:         0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_readtemp
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text22
  4334  001B74                     __ptext22:
  4335                           	opt stack 0
  4336  001B74                     _ConvertADC:
  4337                           	opt stack 25
  4338                           
  4339                           ;incstack = 0
  4340  001B74  82C2               	bsf	4034,1,c	;volatile
  4341  001B76  0012               	return	
  4342  001B78                     __end_of_ConvertADC:
  4343                           	opt stack 0
  4344                           pclatu	equ	0xFFB
  4345                           pclath	equ	0xFFA
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           postinc0	equ	0xFEE
  4354                           fsr0h	equ	0xFEA
  4355                           fsr0l	equ	0xFE9
  4356                           wreg	equ	0xFE8
  4357                           fsr1h	equ	0xFE2
  4358                           fsr1l	equ	0xFE1
  4359                           indf2	equ	0xFDF
  4360                           fsr2h	equ	0xFDA
  4361                           fsr2l	equ	0xFD9
  4362                           status	equ	0xFD8
  4363                           
  4364 ;; *************** function _BusyADC *****************
  4365 ;; Defined at:
  4366 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\ADC\adcbusy.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      unsigned char 
  4373 ;; Registers used:
  4374 ;;		wreg
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1
  4380 ;;      Params:         0       0       0
  4381 ;;      Locals:         0       0       0
  4382 ;;      Temps:          0       0       0
  4383 ;;      Totals:         0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_readtemp
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text23
  4394  001B52                     __ptext23:
  4395                           	opt stack 0
  4396  001B52                     _BusyADC:
  4397                           	opt stack 25
  4398                           
  4399                           ;incstack = 0
  4400  001B52  A2C2               	btfss	4034,1,c	;volatile
  4401  001B54  D002               	goto	i2u209_40
  4402  001B56  0E01               	movlw	1
  4403  001B58  0012               	return	
  4404  001B5A                     i2u209_40:
  4405  001B5A  0E00               	movlw	0
  4406  001B5C  0012               	return	
  4407  001B5E                     __end_of_BusyADC:
  4408                           	opt stack 0
  4409                           pclatu	equ	0xFFB
  4410                           pclath	equ	0xFFA
  4411                           tblptru	equ	0xFF8
  4412                           tblptrh	equ	0xFF7
  4413                           tblptrl	equ	0xFF6
  4414                           tablat	equ	0xFF5
  4415                           prodh	equ	0xFF4
  4416                           prodl	equ	0xFF3
  4417                           intcon	equ	0xFF2
  4418                           postinc0	equ	0xFEE
  4419                           fsr0h	equ	0xFEA
  4420                           fsr0l	equ	0xFE9
  4421                           wreg	equ	0xFE8
  4422                           fsr1h	equ	0xFE2
  4423                           fsr1l	equ	0xFE1
  4424                           indf2	equ	0xFDF
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8
  4428                           
  4429 ;; *************** function _putsUSART *****************
  4430 ;; Defined at:
  4431 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uputs.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  data            2   85[COMRAM] PTR unsigned char 
  4434 ;;		 -> ftoa@buf(17), STR_1(15), interruptHandler@sg(65), 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;		None               void
  4439 ;; Registers used:
  4440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1
  4446 ;;      Params:         2       0       0
  4447 ;;      Locals:         0       0       0
  4448 ;;      Temps:          2       0       0
  4449 ;;      Totals:         4       0       0
  4450 ;;Total ram usage:        4 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    1
  4453 ;; This function calls:
  4454 ;;		_WriteUSART
  4455 ;; This function is called by:
  4456 ;;		_interruptHandler
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text24
  4461  0017D2                     __ptext24:
  4462                           	opt stack 0
  4463  0017D2                     _putsUSART:
  4464                           	opt stack 25
  4465  0017D2                     i2l377:
  4466  0017D2  A2AC               	btfss	4012,1,c	;volatile
  4467  0017D4  D7FE               	goto	i2l377
  4468  0017D6  C056  FFF6         	movff	putsUSART@data,tblptrl
  4469  0017DA  C057  FFF7         	movff	putsUSART@data+1,tblptrh
  4470  0017DE  6AF8               	clrf	tblptru,c
  4471  0017E0  0E01               	movlw	(high __ramtop+-1)
  4472  0017E2  64F7               	cpfsgt	tblptrh,c
  4473  0017E4  D003               	bra	i2u280_47
  4474  0017E6  0008               	tblrd		*
  4475  0017E8  50F5               	movf	tablat,w,c
  4476  0017EA  D005               	bra	i2u280_40
  4477  0017EC                     i2u280_47:
  4478  0017EC  CFF6 FFD9          	movff	tblptrl,fsr2l
  4479  0017F0  CFF7 FFDA          	movff	tblptrh,fsr2h
  4480  0017F4  50DF               	movf	indf2,w,c
  4481  0017F6                     i2u280_40:
  4482  0017F6  ECA0  F00D         	call	_WriteUSART
  4483  0017FA  5056               	movf	putsUSART@data,w,c
  4484  0017FC  6E58               	movwf	??_putsUSART& (0+255),c
  4485  0017FE  5057               	movf	putsUSART@data+1,w,c
  4486  001800  6E59               	movwf	(??_putsUSART+1)& (0+255),c
  4487  001802  4A56               	infsnz	putsUSART@data,f,c
  4488  001804  2A57               	incf	putsUSART@data+1,f,c
  4489  001806  C058  FFF6         	movff	??_putsUSART,tblptrl
  4490  00180A  C059  FFF7         	movff	??_putsUSART+1,tblptrh
  4491  00180E  6AF8               	clrf	tblptru,c
  4492  001810  0E01               	movlw	(high __ramtop+-1)
  4493  001812  64F7               	cpfsgt	tblptrh,c
  4494  001814  D003               	bra	i2u281_47
  4495  001816  0008               	tblrd		*
  4496  001818  50F5               	movf	tablat,w,c
  4497  00181A  D005               	bra	i2u281_40
  4498  00181C                     i2u281_47:
  4499  00181C  CFF6 FFD9          	movff	tblptrl,fsr2l
  4500  001820  CFF7 FFDA          	movff	tblptrh,fsr2h
  4501  001824  50DF               	movf	indf2,w,c
  4502  001826                     i2u281_40:
  4503  001826  0900               	iorlw	0
  4504  001828  B4D8               	btfsc	status,2,c
  4505  00182A  0012               	return	
  4506  00182C  D7D2               	goto	i2l377
  4507  00182E                     __end_of_putsUSART:
  4508                           	opt stack 0
  4509                           pclatu	equ	0xFFB
  4510                           pclath	equ	0xFFA
  4511                           tblptru	equ	0xFF8
  4512                           tblptrh	equ	0xFF7
  4513                           tblptrl	equ	0xFF6
  4514                           tablat	equ	0xFF5
  4515                           prodh	equ	0xFF4
  4516                           prodl	equ	0xFF3
  4517                           intcon	equ	0xFF2
  4518                           postinc0	equ	0xFEE
  4519                           fsr0h	equ	0xFEA
  4520                           fsr0l	equ	0xFE9
  4521                           wreg	equ	0xFE8
  4522                           fsr1h	equ	0xFE2
  4523                           fsr1l	equ	0xFE1
  4524                           indf2	equ	0xFDF
  4525                           fsr2h	equ	0xFDA
  4526                           fsr2l	equ	0xFD9
  4527                           status	equ	0xFD8
  4528                           
  4529 ;; *************** function _WriteUSART *****************
  4530 ;; Defined at:
  4531 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  data            1    wreg     unsigned char 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  data            1    0[COMRAM] unsigned char 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;		None               void
  4538 ;; Registers used:
  4539 ;;		wreg
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1
  4545 ;;      Params:         0       0       0
  4546 ;;      Locals:         1       0       0
  4547 ;;      Temps:          0       0       0
  4548 ;;      Totals:         1       0       0
  4549 ;;Total ram usage:        1 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_putsUSART
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text25
  4559  001B40                     __ptext25:
  4560                           	opt stack 0
  4561  001B40                     _WriteUSART:
  4562                           	opt stack 25
  4563                           
  4564                           ;incstack = 0
  4565                           ;WriteUSART@data stored from wreg
  4566  001B40  6E01               	movwf	WriteUSART@data,c
  4567  001B42  ACAC               	btfss	4012,6,c	;volatile
  4568  001B44  D003               	goto	i2l2373
  4569  001B46  90AC               	bcf	4012,0,c	;volatile
  4570  001B48  B25C               	btfsc	_USART_Status,1,c
  4571  001B4A  80AC               	bsf	4012,0,c	;volatile
  4572  001B4C                     i2l2373:
  4573  001B4C  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  4574  001B50  0012               	return	
  4575  001B52                     __end_of_WriteUSART:
  4576                           	opt stack 0
  4577                           pclatu	equ	0xFFB
  4578                           pclath	equ	0xFFA
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           intcon	equ	0xFF2
  4586                           postinc0	equ	0xFEE
  4587                           fsr0h	equ	0xFEA
  4588                           fsr0l	equ	0xFE9
  4589                           wreg	equ	0xFE8
  4590                           fsr1h	equ	0xFE2
  4591                           fsr1l	equ	0xFE1
  4592                           indf2	equ	0xFDF
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _ftoa *****************
  4598 ;; Defined at:
  4599 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftoa.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  f               3   70[COMRAM] float 
  4602 ;;  status          2   73[COMRAM] PTR int 
  4603 ;;		 -> interruptHandler@s(2), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  l               4   79[COMRAM] unsigned long 
  4606 ;;  rem             4   75[COMRAM] unsigned long 
  4607 ;;  cp              2   83[COMRAM] PTR unsigned char 
  4608 ;;		 -> ftoa@buf(17), 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2   70[COMRAM] PTR unsigned char 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1
  4618 ;;      Params:         5       0       0
  4619 ;;      Locals:        10       0       0
  4620 ;;      Temps:          0       0       0
  4621 ;;      Totals:        15       0       0
  4622 ;;Total ram usage:       15 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    3
  4625 ;; This function calls:
  4626 ;;		___ftmul
  4627 ;;		___ftneg
  4628 ;;		___ftsub
  4629 ;;		___fttol
  4630 ;;		___lltoft
  4631 ;;		_sprintf
  4632 ;; This function is called by:
  4633 ;;		_interruptHandler
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text26
  4638  000E06                     __ptext26:
  4639                           	opt stack 0
  4640  000E06                     _ftoa:
  4641                           	opt stack 23
  4642                           
  4643                           ;incstack = 0
  4644  000E06  0100               	movlb	0	; () banked
  4645  000E08  0E00               	movlw	high ftoa@buf
  4646  000E0A  6E55               	movwf	ftoa@cp+1,c
  4647  000E0C  0100               	movlb	0	; () banked
  4648  000E0E  0EC8               	movlw	low ftoa@buf
  4649  000E10  6E54               	movwf	ftoa@cp,c
  4650  000E12  5049               	movf	ftoa@f+2,w,c
  4651  000E14  0A80               	xorlw	128
  4652  000E16  0F80               	addlw	128
  4653  000E18  E105               	bnz	i2u283_45
  4654  000E1A  0E00               	movlw	0
  4655  000E1C  5C48               	subwf	ftoa@f+1,w,c
  4656  000E1E  E102               	bnz	i2u283_45
  4657  000E20  0E00               	movlw	0
  4658  000E22  5C47               	subwf	ftoa@f,w,c
  4659  000E24                     i2u283_45:
  4660  000E24  B0D8               	btfsc	status,0,c
  4661  000E26  D016               	goto	i2l2759
  4662                           
  4663                           ; BSR set to: 0
  4664  000E28  C054  FFD9         	movff	ftoa@cp,fsr2l
  4665  000E2C  C055  FFDA         	movff	ftoa@cp+1,fsr2h
  4666  000E30  0E2D               	movlw	45
  4667  000E32  6EDF               	movwf	indf2,c
  4668                           
  4669                           ; BSR set to: 0
  4670  000E34  4A54               	infsnz	ftoa@cp,f,c
  4671  000E36  2A55               	incf	ftoa@cp+1,f,c
  4672                           
  4673                           ; BSR set to: 0
  4674  000E38  C047  F001         	movff	ftoa@f,___ftneg@f1
  4675  000E3C  C048  F002         	movff	ftoa@f+1,___ftneg@f1+1
  4676  000E40  C049  F003         	movff	ftoa@f+2,___ftneg@f1+2
  4677  000E44  EC43  F00D         	call	___ftneg	;wreg free
  4678  000E48  C001  F047         	movff	?___ftneg,ftoa@f
  4679  000E4C  C002  F048         	movff	?___ftneg+1,ftoa@f+1
  4680  000E50  C003  F049         	movff	?___ftneg+2,ftoa@f+2
  4681  000E54                     i2l2759:
  4682  000E54  C047  F02B         	movff	ftoa@f,___fttol@f1
  4683  000E58  C048  F02C         	movff	ftoa@f+1,___fttol@f1+1
  4684  000E5C  C049  F02D         	movff	ftoa@f+2,___fttol@f1+2
  4685  000E60  EC1E  F008         	call	___fttol	;wreg free
  4686  000E64  C02B  F050         	movff	?___fttol,ftoa@l
  4687  000E68  C02C  F051         	movff	?___fttol+1,ftoa@l+1
  4688  000E6C  C02D  F052         	movff	?___fttol+2,ftoa@l+2
  4689  000E70  C02E  F053         	movff	?___fttol+3,ftoa@l+3
  4690  000E74  C047  F041         	movff	ftoa@f,___ftsub@f1
  4691  000E78  C048  F042         	movff	ftoa@f+1,___ftsub@f1+1
  4692  000E7C  C049  F043         	movff	ftoa@f+2,___ftsub@f1+2
  4693  000E80  C050  F009         	movff	ftoa@l,___lltoft@c
  4694  000E84  C051  F00A         	movff	ftoa@l+1,___lltoft@c+1
  4695  000E88  C052  F00B         	movff	ftoa@l+2,___lltoft@c+2
  4696  000E8C  C053  F00C         	movff	ftoa@l+3,___lltoft@c+3
  4697  000E90  EC17  F00C         	call	___lltoft	;wreg free
  4698  000E94  C009  F044         	movff	?___lltoft,___ftsub@f2
  4699  000E98  C00A  F045         	movff	?___lltoft+1,___ftsub@f2+1
  4700  000E9C  C00B  F046         	movff	?___lltoft+2,___ftsub@f2+2
  4701  000EA0  ECEE  F00C         	call	___ftsub	;wreg free
  4702  000EA4  C041  F047         	movff	?___ftsub,ftoa@f
  4703  000EA8  C042  F048         	movff	?___ftsub+1,ftoa@f+1
  4704  000EAC  C043  F049         	movff	?___ftsub+2,ftoa@f+2
  4705  000EB0  0E24               	movlw	36
  4706  000EB2  6E1F               	movwf	___ftmul@f2,c
  4707  000EB4  0E74               	movlw	116
  4708  000EB6  6E20               	movwf	___ftmul@f2+1,c
  4709  000EB8  0E49               	movlw	73
  4710  000EBA  6E21               	movwf	___ftmul@f2+2,c
  4711  000EBC  C047  F01C         	movff	ftoa@f,___ftmul@f1
  4712  000EC0  C048  F01D         	movff	ftoa@f+1,___ftmul@f1+1
  4713  000EC4  C049  F01E         	movff	ftoa@f+2,___ftmul@f1+2
  4714  000EC8  EC99  F008         	call	___ftmul	;wreg free
  4715  000ECC  C01C  F02B         	movff	?___ftmul,___fttol@f1
  4716  000ED0  C01D  F02C         	movff	?___ftmul+1,___fttol@f1+1
  4717  000ED4  C01E  F02D         	movff	?___ftmul+2,___fttol@f1+2
  4718  000ED8  EC1E  F008         	call	___fttol	;wreg free
  4719  000EDC  C02B  F04C         	movff	?___fttol,ftoa@rem
  4720  000EE0  C02C  F04D         	movff	?___fttol+1,ftoa@rem+1
  4721  000EE4  C02D  F04E         	movff	?___fttol+2,ftoa@rem+2
  4722  000EE8  C02E  F04F         	movff	?___fttol+3,ftoa@rem+3
  4723  000EEC  C055  F018         	movff	ftoa@cp+1,sprintf@sp+1
  4724  000EF0  C054  F017         	movff	ftoa@cp,sprintf@sp
  4725  000EF4  0E05               	movlw	high STR_2
  4726  000EF6  6E1A               	movwf	sprintf@f+1,c
  4727  000EF8  0E38               	movlw	low STR_2
  4728  000EFA  6E19               	movwf	sprintf@f,c
  4729  000EFC  C050  F01B         	movff	ftoa@l,?_sprintf+4
  4730  000F00  C051  F01C         	movff	ftoa@l+1,?_sprintf+5
  4731  000F04  C052  F01D         	movff	ftoa@l+2,?_sprintf+6
  4732  000F08  C053  F01E         	movff	ftoa@l+3,?_sprintf+7
  4733  000F0C  C04C  F01F         	movff	ftoa@rem,?_sprintf+8
  4734  000F10  C04D  F020         	movff	ftoa@rem+1,?_sprintf+9
  4735  000F14  C04E  F021         	movff	ftoa@rem+2,?_sprintf+10
  4736  000F18  C04F  F022         	movff	ftoa@rem+3,?_sprintf+11
  4737  000F1C  ECA2  F002         	call	_sprintf	;wreg free
  4738  000F20  0100               	movlb	0	; () banked
  4739  000F22  0E00               	movlw	high ftoa@buf
  4740  000F24  6E48               	movwf	?_ftoa+1,c
  4741  000F26  0100               	movlb	0	; () banked
  4742  000F28  0EC8               	movlw	low ftoa@buf
  4743  000F2A  6E47               	movwf	?_ftoa,c
  4744  000F2C  0012               	return	
  4745  000F2E                     __end_of_ftoa:
  4746                           	opt stack 0
  4747                           pclatu	equ	0xFFB
  4748                           pclath	equ	0xFFA
  4749                           tblptru	equ	0xFF8
  4750                           tblptrh	equ	0xFF7
  4751                           tblptrl	equ	0xFF6
  4752                           tablat	equ	0xFF5
  4753                           prodh	equ	0xFF4
  4754                           prodl	equ	0xFF3
  4755                           intcon	equ	0xFF2
  4756                           postinc0	equ	0xFEE
  4757                           fsr0h	equ	0xFEA
  4758                           fsr0l	equ	0xFE9
  4759                           wreg	equ	0xFE8
  4760                           fsr1h	equ	0xFE2
  4761                           fsr1l	equ	0xFE1
  4762                           indf2	equ	0xFDF
  4763                           fsr2h	equ	0xFDA
  4764                           fsr2l	equ	0xFD9
  4765                           status	equ	0xFD8
  4766                           
  4767 ;; *************** function _sprintf *****************
  4768 ;; Defined at:
  4769 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  sp              2   22[COMRAM] PTR unsigned char 
  4772 ;;		 -> ftoa@buf(17), 
  4773 ;;  f               2   24[COMRAM] PTR const unsigned char 
  4774 ;;		 -> STR_2(11), 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  _val            5   43[COMRAM] struct .
  4777 ;;  prec            2   50[COMRAM] int 
  4778 ;;  width           2   48[COMRAM] int 
  4779 ;;  ap              2   41[COMRAM] PTR void [1]
  4780 ;;		 -> ?_sprintf(2), 
  4781 ;;  c               1   52[COMRAM] char 
  4782 ;;  flag            1   40[COMRAM] unsigned char 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  2   22[COMRAM] int 
  4785 ;; Registers used:
  4786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1
  4792 ;;      Params:        12       0       0
  4793 ;;      Locals:        13       0       0
  4794 ;;      Temps:          6       0       0
  4795 ;;      Totals:        31       0       0
  4796 ;;Total ram usage:       31 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    1
  4799 ;; This function calls:
  4800 ;;		___lldiv
  4801 ;;		___llmod
  4802 ;;		___wmul
  4803 ;;		_isdigit
  4804 ;; This function is called by:
  4805 ;;		_ftoa
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text27
  4810  000544                     __ptext27:
  4811                           	opt stack 0
  4812  000544                     _sprintf:
  4813                           	opt stack 24
  4814                           
  4815                           ;doprnt.c: 494: va_list ap;
  4816                           ;doprnt.c: 499: signed char c;
  4817                           ;doprnt.c: 501: int width;
  4818                           ;doprnt.c: 504: int prec;
  4819                           ;doprnt.c: 508: unsigned char flag;
  4820                           ;doprnt.c: 527: union {
  4821                           ;doprnt.c: 528: unsigned long _val;
  4822                           ;doprnt.c: 529: struct {
  4823                           ;doprnt.c: 530: const char * _cp;
  4824                           ;doprnt.c: 531: unsigned _len;
  4825                           ;doprnt.c: 532: } _str;
  4826                           ;doprnt.c: 533: } _val;
  4827                           ;doprnt.c: 542: *ap = __va_start();
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;incstack = 0
  4831  000544  0E00               	movlw	high (?_sprintf+4)
  4832  000546  6E2B               	movwf	sprintf@ap+1,c
  4833  000548  0E1B               	movlw	low (?_sprintf+4)
  4834  00054A  6E2A               	movwf	sprintf@ap,c
  4835                           
  4836                           ;doprnt.c: 545: while(c = *f++) {
  4837  00054C  D186               	goto	i2l2361
  4838  00054E                     i2l2261:
  4839                           
  4840                           ;doprnt.c: 547: if(c != '%')
  4841  00054E  5035               	movf	sprintf@c,w,c
  4842  000550  0A25               	xorlw	37
  4843  000552  B4D8               	btfsc	status,2,c
  4844  000554  D009               	goto	i2l2267
  4845                           
  4846                           ;doprnt.c: 549: {
  4847                           ;doprnt.c: 550: ((*sp++ = (c)));
  4848  000556  C017  FFD9         	movff	sprintf@sp,fsr2l
  4849  00055A  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  4850  00055E  C035  FFDF         	movff	sprintf@c,indf2
  4851  000562  4A17               	infsnz	sprintf@sp,f,c
  4852  000564  2A18               	incf	sprintf@sp+1,f,c
  4853                           
  4854                           ;doprnt.c: 551: continue;
  4855  000566  D179               	goto	i2l2361
  4856  000568                     i2l2267:
  4857                           
  4858                           ;doprnt.c: 552: }
  4859                           ;doprnt.c: 555: width = 0;
  4860  000568  0E00               	movlw	0
  4861  00056A  6E32               	movwf	sprintf@width+1,c
  4862  00056C  0E00               	movlw	0
  4863  00056E  6E31               	movwf	sprintf@width,c
  4864                           
  4865                           ;doprnt.c: 557: flag = 0;
  4866  000570  0E00               	movlw	0
  4867  000572  6E29               	movwf	sprintf@flag,c
  4868                           
  4869                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  4870  000574  C019  FFF6         	movff	sprintf@f,tblptrl
  4871  000578  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  4872  00057C                     	if	0	;tblptru may be non-zero
  4873  00057C                     	endif
  4874  00057C                     	if	0	;tblptru may be non-zero
  4875  00057C                     	endif
  4876  00057C  0008               	tblrd		*
  4877  00057E  50F5               	movf	tablat,w,c
  4878  000580  EC56  F00D         	call	_isdigit
  4879  000584  A0D8               	btfss	status,0,c
  4880  000586  D032               	goto	i2l2281
  4881                           
  4882                           ;doprnt.c: 607: width = 0;
  4883  000588  0E00               	movlw	0
  4884  00058A  6E32               	movwf	sprintf@width+1,c
  4885  00058C  0E00               	movlw	0
  4886  00058E  6E31               	movwf	sprintf@width,c
  4887  000590                     i2l2273:
  4888                           
  4889                           ;doprnt.c: 609: width *= 10;
  4890  000590  C031  F001         	movff	sprintf@width,___wmul@multiplier
  4891  000594  C032  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  4892  000598  0E00               	movlw	0
  4893  00059A  6E04               	movwf	___wmul@multiplicand+1,c
  4894  00059C  0E0A               	movlw	10
  4895  00059E  6E03               	movwf	___wmul@multiplicand,c
  4896  0005A0  EC30  F00D         	call	___wmul	;wreg free
  4897  0005A4  C001  F031         	movff	?___wmul,sprintf@width
  4898  0005A8  C002  F032         	movff	?___wmul+1,sprintf@width+1
  4899                           
  4900                           ;doprnt.c: 610: width += *f++ - '0';
  4901  0005AC  0ED0               	movlw	208
  4902  0005AE  6E23               	movwf	??_sprintf& (0+255),c
  4903  0005B0  0EFF               	movlw	255
  4904  0005B2  6E24               	movwf	(??_sprintf+1)& (0+255),c
  4905  0005B4  C019  FFF6         	movff	sprintf@f,tblptrl
  4906  0005B8  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  4907  0005BC                     	if	0	;tblptru may be non-zero
  4908  0005BC                     	endif
  4909  0005BC                     	if	0	;tblptru may be non-zero
  4910  0005BC                     	endif
  4911  0005BC  0008               	tblrd		*
  4912  0005BE  50F5               	movf	tablat,w,c
  4913  0005C0  6E25               	movwf	(??_sprintf+2)& (0+255),c
  4914  0005C2  6A26               	clrf	(??_sprintf+3)& (0+255),c
  4915  0005C4  5023               	movf	??_sprintf,w,c
  4916  0005C6  2625               	addwf	??_sprintf+2,f,c
  4917  0005C8  5024               	movf	??_sprintf+1,w,c
  4918  0005CA  2226               	addwfc	??_sprintf+3,f,c
  4919  0005CC  5025               	movf	??_sprintf+2,w,c
  4920  0005CE  2631               	addwf	sprintf@width,f,c
  4921  0005D0  5026               	movf	??_sprintf+3,w,c
  4922  0005D2  2232               	addwfc	sprintf@width+1,f,c
  4923  0005D4  4A19               	infsnz	sprintf@f,f,c
  4924  0005D6  2A1A               	incf	sprintf@f+1,f,c
  4925                           
  4926                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  4927  0005D8  C019  FFF6         	movff	sprintf@f,tblptrl
  4928  0005DC  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  4929  0005E0                     	if	0	;tblptru may be non-zero
  4930  0005E0                     	endif
  4931  0005E0                     	if	0	;tblptru may be non-zero
  4932  0005E0                     	endif
  4933  0005E0  0008               	tblrd		*
  4934  0005E2  50F5               	movf	tablat,w,c
  4935  0005E4  EC56  F00D         	call	_isdigit
  4936  0005E8  B0D8               	btfsc	status,0,c
  4937  0005EA  D7D2               	goto	i2l2273
  4938  0005EC                     i2l2281:
  4939                           
  4940                           ;doprnt.c: 617: }
  4941                           ;doprnt.c: 620: if(*f == '.') {
  4942  0005EC  C019  FFF6         	movff	sprintf@f,tblptrl
  4943  0005F0  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  4944  0005F4                     	if	0	;tblptru may be non-zero
  4945  0005F4                     	endif
  4946  0005F4                     	if	0	;tblptru may be non-zero
  4947  0005F4                     	endif
  4948  0005F4  0008               	tblrd		*
  4949  0005F6  50F5               	movf	tablat,w,c
  4950  0005F8  0A2E               	xorlw	46
  4951  0005FA  A4D8               	btfss	status,2,c
  4952  0005FC  D02D               	goto	i2l2293
  4953                           
  4954                           ;doprnt.c: 622: f++;
  4955  0005FE  4A19               	infsnz	sprintf@f,f,c
  4956  000600  2A1A               	incf	sprintf@f+1,f,c
  4957                           
  4958                           ;doprnt.c: 629: {
  4959                           ;doprnt.c: 630: prec = 0;
  4960  000602  0E00               	movlw	0
  4961  000604  6E34               	movwf	sprintf@prec+1,c
  4962  000606  0E00               	movlw	0
  4963  000608  6E33               	movwf	sprintf@prec,c
  4964                           
  4965                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  4966  00060A  D01B               	goto	i2l2291
  4967  00060C                     i2l2287:
  4968                           
  4969                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  4970  00060C  C033  F001         	movff	sprintf@prec,___wmul@multiplier
  4971  000610  C034  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  4972  000614  0E00               	movlw	0
  4973  000616  6E04               	movwf	___wmul@multiplicand+1,c
  4974  000618  0E0A               	movlw	10
  4975  00061A  6E03               	movwf	___wmul@multiplicand,c
  4976  00061C  EC30  F00D         	call	___wmul	;wreg free
  4977  000620  C019  FFF6         	movff	sprintf@f,tblptrl
  4978  000624  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  4979  000628                     	if	0	;tblptru may be non-zero
  4980  000628                     	endif
  4981  000628                     	if	0	;tblptru may be non-zero
  4982  000628                     	endif
  4983  000628  0008               	tblrd		*
  4984  00062A  50F5               	movf	tablat,w,c
  4985  00062C  2601               	addwf	?___wmul,f,c
  4986  00062E  0E00               	movlw	0
  4987  000630  2202               	addwfc	?___wmul+1,f,c
  4988  000632  0ED0               	movlw	208
  4989  000634  2401               	addwf	?___wmul,w,c
  4990  000636  6E33               	movwf	sprintf@prec,c
  4991  000638  0EFF               	movlw	255
  4992  00063A  2002               	addwfc	?___wmul+1,w,c
  4993  00063C  6E34               	movwf	sprintf@prec+1,c
  4994  00063E  4A19               	infsnz	sprintf@f,f,c
  4995  000640  2A1A               	incf	sprintf@f+1,f,c
  4996  000642                     i2l2291:
  4997  000642  C019  FFF6         	movff	sprintf@f,tblptrl
  4998  000646  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  4999  00064A                     	if	0	;tblptru may be non-zero
  5000  00064A                     	endif
  5001  00064A                     	if	0	;tblptru may be non-zero
  5002  00064A                     	endif
  5003  00064A  0008               	tblrd		*
  5004  00064C  50F5               	movf	tablat,w,c
  5005  00064E  EC56  F00D         	call	_isdigit
  5006  000652  A0D8               	btfss	status,0,c
  5007  000654  D00B               	goto	i2l2301
  5008  000656  D7DA               	goto	i2l2287
  5009  000658                     i2l2293:
  5010                           
  5011                           ;doprnt.c: 635: prec = 0;
  5012  000658  0E00               	movlw	0
  5013  00065A  6E34               	movwf	sprintf@prec+1,c
  5014  00065C  0E00               	movlw	0
  5015  00065E  6E33               	movwf	sprintf@prec,c
  5016  000660  D005               	goto	i2l2301
  5017  000662                     i2l2295:
  5018                           
  5019                           ;doprnt.c: 652: flag |= 0x10;
  5020  000662  8829               	bsf	sprintf@flag,4,c
  5021                           
  5022                           ;doprnt.c: 653: goto loop;
  5023  000664  D003               	goto	i2l2301
  5024  000666                     i2l2297:
  5025                           
  5026                           ;doprnt.c: 827: flag |= 0xC0;
  5027  000666  0EC0               	movlw	192
  5028  000668  1229               	iorwf	sprintf@flag,f,c
  5029                           
  5030                           ;doprnt.c: 828: break;
  5031  00066A  D014               	goto	i2l238
  5032  00066C                     i2l2301:
  5033  00066C  C019  FFF6         	movff	sprintf@f,tblptrl
  5034  000670  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  5035  000674  4A19               	infsnz	sprintf@f,f,c
  5036  000676  2A1A               	incf	sprintf@f+1,f,c
  5037  000678                     	if	0	;tblptru may be non-zero
  5038  000678                     	endif
  5039  000678                     	if	0	;tblptru may be non-zero
  5040  000678                     	endif
  5041  000678  0008               	tblrd		*
  5042  00067A  CFF5 F035          	movff	tablat,sprintf@c
  5043  00067E  5035               	movf	sprintf@c& (0+255),w,c
  5044                           
  5045                           ; Switch size 1, requested type "space"
  5046                           ; Number of cases is 3, Range of values is 0 to 117
  5047                           ; switch strategies available:
  5048                           ; Name         Instructions Cycles
  5049                           ; simple_byte           10     6 (average)
  5050                           ;	Chosen strategy is simple_byte
  5051  000680  0A00               	xorlw	0	; case 0
  5052  000682  B4D8               	btfsc	status,2,c
  5053  000684  D0F5               	goto	i2l2363
  5054  000686  0A6C               	xorlw	108	; case 108
  5055  000688  B4D8               	btfsc	status,2,c
  5056  00068A  D7EB               	goto	i2l2295
  5057  00068C  0A19               	xorlw	25	; case 117
  5058  00068E  B4D8               	btfsc	status,2,c
  5059  000690  D7EA               	goto	i2l2297
  5060  000692  D0E3               	goto	i2l2361
  5061  000694                     i2l238:
  5062                           
  5063                           ;doprnt.c: 1282: {
  5064                           ;doprnt.c: 1290: if(flag & 0x10)
  5065  000694  A829               	btfss	sprintf@flag,4,c
  5066  000696  D00E               	goto	i2l2307
  5067                           
  5068                           ;doprnt.c: 1291: _val._val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsig
      +                          ned long)0));
  5069  000698  C02A  FFD9         	movff	sprintf@ap,fsr2l
  5070  00069C  C02B  FFDA         	movff	sprintf@ap+1,fsr2h
  5071  0006A0  CFDE F02C          	movff	postinc2,sprintf@_val
  5072  0006A4  CFDE F02D          	movff	postinc2,sprintf@_val+1
  5073  0006A8  CFDE F02E          	movff	postinc2,sprintf@_val+2
  5074  0006AC  CFDE F02F          	movff	postinc2,sprintf@_val+3
  5075  0006B0  0E04               	movlw	4
  5076  0006B2  D00F               	goto	L5
  5077  0006B4                     i2l2307:
  5078                           
  5079                           ;doprnt.c: 1292: else
  5080                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5081  0006B4  C02A  FFD9         	movff	sprintf@ap,fsr2l
  5082  0006B8  C02B  FFDA         	movff	sprintf@ap+1,fsr2h
  5083  0006BC  CFDE F023          	movff	postinc2,??_sprintf
  5084  0006C0  CFDD F024          	movff	postdec2,??_sprintf+1
  5085  0006C4  C023  F02C         	movff	??_sprintf,sprintf@_val
  5086  0006C8  C024  F02D         	movff	??_sprintf+1,sprintf@_val+1
  5087  0006CC  6A2E               	clrf	sprintf@_val+2,c
  5088  0006CE  6A2F               	clrf	sprintf@_val+3,c
  5089  0006D0  0E02               	movlw	2
  5090  0006D2                     L5:
  5091  0006D2  262A               	addwf	sprintf@ap,f,c
  5092  0006D4  0E00               	movlw	0
  5093  0006D6  222B               	addwfc	sprintf@ap+1,f,c
  5094                           
  5095                           ;doprnt.c: 1296: }
  5096                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  5097  0006D8  5034               	movf	sprintf@prec+1,w,c
  5098  0006DA  1033               	iorwf	sprintf@prec,w,c
  5099  0006DC  A4D8               	btfss	status,2,c
  5100  0006DE  D008               	goto	i2l2317
  5101  0006E0  502F               	movf	sprintf@_val+3,w,c
  5102  0006E2  102C               	iorwf	sprintf@_val,w,c
  5103  0006E4  102D               	iorwf	sprintf@_val+1,w,c
  5104  0006E6  102E               	iorwf	sprintf@_val+2,w,c
  5105  0006E8  A4D8               	btfss	status,2,c
  5106  0006EA  D002               	goto	i2l2317
  5107                           
  5108                           ;doprnt.c: 1300: prec++;
  5109  0006EC  4A33               	infsnz	sprintf@prec,f,c
  5110  0006EE  2A34               	incf	sprintf@prec+1,f,c
  5111  0006F0                     i2l2317:
  5112                           
  5113                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5114  0006F0  0E01               	movlw	1
  5115  0006F2  6E35               	movwf	sprintf@c,c
  5116  0006F4  5035               	movf	sprintf@c,w,c
  5117  0006F6  0A0A               	xorlw	10
  5118  0006F8  B4D8               	btfsc	status,2,c
  5119  0006FA  D018               	goto	i2l2331
  5120                           
  5121                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  5122  0006FC  5035               	movf	sprintf@c,w,c
  5123  0006FE  0D04               	mullw	4
  5124  000700  0E01               	movlw	low _dpowers
  5125  000702  24F3               	addwf	prodl,w,c
  5126  000704  6EF6               	movwf	tblptrl,c
  5127  000706  0E05               	movlw	high _dpowers
  5128  000708  20F4               	addwfc	prodh,w,c
  5129  00070A  6EF7               	movwf	tblptrh,c
  5130  00070C                     	if	0	;There are less than 3 active tblptr bytes
  5131  00070C                     	endif
  5132  00070C  0009               	tblrd		*+
  5133  00070E  50F5               	movf	tablat,w,c
  5134  000710  5C2C               	subwf	sprintf@_val,w,c
  5135  000712  0009               	tblrd		*+
  5136  000714  50F5               	movf	tablat,w,c
  5137  000716  582D               	subwfb	sprintf@_val+1,w,c
  5138  000718  0009               	tblrd		*+
  5139  00071A  50F5               	movf	tablat,w,c
  5140  00071C  582E               	subwfb	sprintf@_val+2,w,c
  5141  00071E  0009               	tblrd		*+
  5142  000720  50F5               	movf	tablat,w,c
  5143  000722  582F               	subwfb	sprintf@_val+3,w,c
  5144  000724  A0D8               	btfss	status,0,c
  5145  000726  D002               	goto	i2l2331
  5146                           
  5147                           ;doprnt.c: 1316: break;
  5148  000728  2A35               	incf	sprintf@c,f,c
  5149  00072A  D7E4               	goto	L6
  5150  00072C                     i2l2331:
  5151                           
  5152                           ;doprnt.c: 1348: if(c < prec)
  5153  00072C  0E80               	movlw	128
  5154  00072E  BE35               	btfsc	sprintf@c,7,c
  5155  000730  0E7F               	movlw	127
  5156  000732  6E23               	movwf	??_sprintf& (0+255),c
  5157  000734  5033               	movf	sprintf@prec,w,c
  5158  000736  5C35               	subwf	sprintf@c,w,c
  5159  000738  5034               	movf	sprintf@prec+1,w,c
  5160  00073A  0A80               	xorlw	128
  5161  00073C  5823               	subwfb	??_sprintf& (0+255),w,c
  5162  00073E  B0D8               	btfsc	status,0,c
  5163  000740  D003               	goto	i2l2335
  5164                           
  5165                           ;doprnt.c: 1349: c = prec;
  5166  000742  C033  F035         	movff	sprintf@prec,sprintf@c
  5167  000746  D010               	goto	i2l2339
  5168  000748                     i2l2335:
  5169                           
  5170                           ;doprnt.c: 1350: else if(prec < c)
  5171  000748  5034               	movf	sprintf@prec+1,w,c
  5172  00074A  0A80               	xorlw	128
  5173  00074C  6E23               	movwf	??_sprintf& (0+255),c
  5174  00074E  5035               	movf	sprintf@c,w,c
  5175  000750  5C33               	subwf	sprintf@prec,w,c
  5176  000752  0E80               	movlw	128
  5177  000754  BE35               	btfsc	sprintf@c,7,c
  5178  000756  0E7F               	movlw	127
  5179  000758  5823               	subwfb	??_sprintf& (0+255),w,c
  5180  00075A  B0D8               	btfsc	status,0,c
  5181  00075C  D005               	goto	i2l2339
  5182                           
  5183                           ;doprnt.c: 1351: prec = c;
  5184  00075E  5035               	movf	sprintf@c,w,c
  5185  000760  6E33               	movwf	sprintf@prec,c
  5186  000762  6A34               	clrf	sprintf@prec+1,c
  5187  000764  BE33               	btfsc	sprintf@prec,7,c
  5188  000766  0634               	decf	sprintf@prec+1,f,c
  5189  000768                     i2l2339:
  5190                           
  5191                           ;doprnt.c: 1390: if(width > c)
  5192  000768  0E80               	movlw	128
  5193  00076A  BE35               	btfsc	sprintf@c,7,c
  5194  00076C  0E7F               	movlw	127
  5195  00076E  6E23               	movwf	??_sprintf& (0+255),c
  5196  000770  5031               	movf	sprintf@width,w,c
  5197  000772  5C35               	subwf	sprintf@c,w,c
  5198  000774  5032               	movf	sprintf@width+1,w,c
  5199  000776  0A80               	xorlw	128
  5200  000778  5823               	subwfb	??_sprintf& (0+255),w,c
  5201  00077A  B0D8               	btfsc	status,0,c
  5202  00077C  D007               	goto	i2l2343
  5203                           
  5204                           ;doprnt.c: 1391: width -= c;
  5205  00077E  5035               	movf	sprintf@c,w,c
  5206  000780  5E31               	subwf	sprintf@width,f,c
  5207  000782  0E00               	movlw	0
  5208  000784  BE35               	btfsc	sprintf@c,7,c
  5209  000786  0EFF               	movlw	255
  5210  000788  5A32               	subwfb	sprintf@width+1,f,c
  5211  00078A  D004               	goto	i2l2345
  5212  00078C                     i2l2343:
  5213                           
  5214                           ;doprnt.c: 1392: else
  5215                           ;doprnt.c: 1393: width = 0;
  5216  00078C  0E00               	movlw	0
  5217  00078E  6E32               	movwf	sprintf@width+1,c
  5218  000790  0E00               	movlw	0
  5219  000792  6E31               	movwf	sprintf@width,c
  5220  000794                     i2l2345:
  5221                           
  5222                           ;doprnt.c: 1431: {
  5223                           ;doprnt.c: 1433: if(width
  5224                           ;doprnt.c: 1437: )
  5225  000794  5032               	movf	sprintf@width+1,w,c
  5226  000796  1031               	iorwf	sprintf@width,w,c
  5227  000798  B4D8               	btfsc	status,2,c
  5228  00079A  D057               	goto	i2l2359
  5229                           
  5230                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  5231                           
  5232                           ;doprnt.c: 1438: do
  5233  00079C  C017  FFD9         	movff	sprintf@sp,fsr2l
  5234  0007A0  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  5235  0007A4  0E20               	movlw	32
  5236  0007A6  6EDF               	movwf	indf2,c
  5237  0007A8  4A17               	infsnz	sprintf@sp,f,c
  5238  0007AA  2A18               	incf	sprintf@sp+1,f,c
  5239                           
  5240                           ;doprnt.c: 1440: while(--width);
  5241  0007AC  0631               	decf	sprintf@width,f,c
  5242  0007AE  A0D8               	btfss	status,0,c
  5243  0007B0  0632               	decf	sprintf@width+1,f,c
  5244  0007B2  D7F0               	goto	i2l2345
  5245  0007B4                     i2l2353:
  5246                           
  5247                           ;doprnt.c: 1487: {
  5248                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  5249  0007B4  C033  F023         	movff	sprintf@prec,??_sprintf
  5250  0007B8  C034  F024         	movff	sprintf@prec+1,??_sprintf+1
  5251  0007BC  90D8               	bcf	status,0,c
  5252  0007BE  3623               	rlcf	??_sprintf,f,c
  5253  0007C0  3624               	rlcf	??_sprintf+1,f,c
  5254  0007C2  90D8               	bcf	status,0,c
  5255  0007C4  3623               	rlcf	??_sprintf,f,c
  5256  0007C6  3624               	rlcf	??_sprintf+1,f,c
  5257  0007C8  0E01               	movlw	low _dpowers
  5258  0007CA  2423               	addwf	??_sprintf,w,c
  5259  0007CC  6EF6               	movwf	tblptrl,c
  5260  0007CE  0E05               	movlw	high _dpowers
  5261  0007D0  2024               	addwfc	??_sprintf+1,w,c
  5262  0007D2  6EF7               	movwf	tblptrh,c
  5263  0007D4                     	if	0	;There are less than 3 active tblptr bytes
  5264  0007D4                     	endif
  5265  0007D4  0009               	tblrd		*+
  5266  0007D6  CFF5 F005          	movff	tablat,___lldiv@divisor
  5267  0007DA  0009               	tblrd		*+
  5268  0007DC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  5269  0007E0  0009               	tblrd		*+
  5270  0007E2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  5271  0007E6  000A               	tblrd		*-
  5272  0007E8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  5273  0007EC  C02C  F001         	movff	sprintf@_val,___lldiv@dividend
  5274  0007F0  C02D  F002         	movff	sprintf@_val+1,___lldiv@dividend+1
  5275  0007F4  C02E  F003         	movff	sprintf@_val+2,___lldiv@dividend+2
  5276  0007F8  C02F  F004         	movff	sprintf@_val+3,___lldiv@dividend+3
  5277  0007FC  EC75  F00B         	call	___lldiv	;wreg free
  5278  000800  C001  F00E         	movff	?___lldiv,___llmod@dividend
  5279  000804  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  5280  000808  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  5281  00080C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  5282  000810  0E0A               	movlw	10
  5283  000812  6E12               	movwf	___llmod@divisor,c
  5284  000814  0E00               	movlw	0
  5285  000816  6E13               	movwf	___llmod@divisor+1,c
  5286  000818  0E00               	movlw	0
  5287  00081A  6E14               	movwf	___llmod@divisor+2,c
  5288  00081C  0E00               	movlw	0
  5289  00081E  6E15               	movwf	___llmod@divisor+3,c
  5290  000820  ECB6  F00B         	call	___llmod	;wreg free
  5291  000824  C00E  F025         	movff	?___llmod,??_sprintf+2
  5292  000828  C00F  F026         	movff	?___llmod+1,??_sprintf+3
  5293  00082C  C010  F027         	movff	?___llmod+2,??_sprintf+4
  5294  000830  C011  F028         	movff	?___llmod+3,??_sprintf+5
  5295  000834  5025               	movf	??_sprintf+2,w,c
  5296  000836  0F30               	addlw	48
  5297  000838  6E35               	movwf	sprintf@c,c
  5298                           
  5299                           ;doprnt.c: 1532: }
  5300                           ;doprnt.c: 1533: ((*sp++ = (c)));
  5301  00083A  C017  FFD9         	movff	sprintf@sp,fsr2l
  5302  00083E  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  5303  000842  C035  FFDF         	movff	sprintf@c,indf2
  5304  000846  4A17               	infsnz	sprintf@sp,f,c
  5305  000848  2A18               	incf	sprintf@sp+1,f,c
  5306  00084A                     i2l2359:
  5307  00084A  0633               	decf	sprintf@prec,f,c
  5308  00084C  A0D8               	btfss	status,0,c
  5309  00084E  0634               	decf	sprintf@prec+1,f,c
  5310  000850  2833               	incf	sprintf@prec& (0+255),w,c
  5311  000852  B4D8               	btfsc	status,2,c
  5312  000854  2834               	incf	(sprintf@prec+1)& (0+255),w,c
  5313  000856  A4D8               	btfss	status,2,c
  5314  000858  D7AD               	goto	i2l2353
  5315  00085A                     i2l2361:
  5316  00085A  C019  FFF6         	movff	sprintf@f,tblptrl
  5317  00085E  C01A  FFF7         	movff	sprintf@f+1,tblptrh
  5318  000862  4A19               	infsnz	sprintf@f,f,c
  5319  000864  2A1A               	incf	sprintf@f+1,f,c
  5320  000866                     	if	0	;tblptru may be non-zero
  5321  000866                     	endif
  5322  000866                     	if	0	;tblptru may be non-zero
  5323  000866                     	endif
  5324  000866  0008               	tblrd		*
  5325  000868  CFF5 F035          	movff	tablat,sprintf@c
  5326  00086C  6635               	tstfsz	sprintf@c& (0+255),c
  5327  00086E  D66F               	goto	i2l2261
  5328  000870                     i2l2363:
  5329                           
  5330                           ;doprnt.c: 1547: *sp = 0;
  5331  000870  C017  FFD9         	movff	sprintf@sp,fsr2l
  5332  000874  C018  FFDA         	movff	sprintf@sp+1,fsr2h
  5333  000878  0E00               	movlw	0
  5334  00087A  6EDF               	movwf	indf2,c
  5335  00087C  0012               	return	
  5336  00087E                     __end_of_sprintf:
  5337                           	opt stack 0
  5338                           pclatu	equ	0xFFB
  5339                           pclath	equ	0xFFA
  5340                           tblptru	equ	0xFF8
  5341                           tblptrh	equ	0xFF7
  5342                           tblptrl	equ	0xFF6
  5343                           tablat	equ	0xFF5
  5344                           prodh	equ	0xFF4
  5345                           prodl	equ	0xFF3
  5346                           intcon	equ	0xFF2
  5347                           postinc0	equ	0xFEE
  5348                           fsr0h	equ	0xFEA
  5349                           fsr0l	equ	0xFE9
  5350                           wreg	equ	0xFE8
  5351                           fsr1h	equ	0xFE2
  5352                           fsr1l	equ	0xFE1
  5353                           indf2	equ	0xFDF
  5354                           postinc2	equ	0xFDE
  5355                           postdec2	equ	0xFDD
  5356                           fsr2h	equ	0xFDA
  5357                           fsr2l	equ	0xFD9
  5358                           status	equ	0xFD8
  5359                           
  5360 ;; *************** function _isdigit *****************
  5361 ;; Defined at:
  5362 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  c               1    wreg     unsigned char 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  c               1    2[COMRAM] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;		None               void
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1
  5376 ;;      Params:         0       0       0
  5377 ;;      Locals:         2       0       0
  5378 ;;      Temps:          1       0       0
  5379 ;;      Totals:         3       0       0
  5380 ;;Total ram usage:        3 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_sprintf
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text28
  5390  001AAC                     __ptext28:
  5391                           	opt stack 0
  5392  001AAC                     _isdigit:
  5393                           	opt stack 24
  5394                           
  5395                           ;incstack = 0
  5396                           ;isdigit@c stored from wreg
  5397  001AAC  6E03               	movwf	isdigit@c,c
  5398  001AAE  0E00               	movlw	0
  5399  001AB0  6E02               	movwf	_isdigit$1828,c
  5400  001AB2  0E3A               	movlw	58
  5401  001AB4  5C03               	subwf	isdigit@c,w,c
  5402  001AB6  B0D8               	btfsc	status,0,c
  5403  001AB8  D005               	goto	i2l2083
  5404  001ABA  0E2F               	movlw	47
  5405  001ABC  6403               	cpfsgt	isdigit@c,c
  5406  001ABE  D002               	goto	i2l2083
  5407  001AC0  0E01               	movlw	1
  5408  001AC2  6E02               	movwf	_isdigit$1828,c
  5409  001AC4                     i2l2083:
  5410  001AC4  C002  F001         	movff	_isdigit$1828,??_isdigit
  5411  001AC8  3001               	rrcf	??_isdigit,w,c
  5412  001ACA  0012               	return	
  5413  001ACC                     __end_of_isdigit:
  5414                           	opt stack 0
  5415                           pclatu	equ	0xFFB
  5416                           pclath	equ	0xFFA
  5417                           tblptru	equ	0xFF8
  5418                           tblptrh	equ	0xFF7
  5419                           tblptrl	equ	0xFF6
  5420                           tablat	equ	0xFF5
  5421                           prodh	equ	0xFF4
  5422                           prodl	equ	0xFF3
  5423                           intcon	equ	0xFF2
  5424                           postinc0	equ	0xFEE
  5425                           fsr0h	equ	0xFEA
  5426                           fsr0l	equ	0xFE9
  5427                           wreg	equ	0xFE8
  5428                           fsr1h	equ	0xFE2
  5429                           fsr1l	equ	0xFE1
  5430                           indf2	equ	0xFDF
  5431                           postinc2	equ	0xFDE
  5432                           postdec2	equ	0xFDD
  5433                           fsr2h	equ	0xFDA
  5434                           fsr2l	equ	0xFD9
  5435                           status	equ	0xFD8
  5436                           
  5437 ;; *************** function ___wmul *****************
  5438 ;; Defined at:
  5439 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  multiplier      2    0[COMRAM] unsigned int 
  5442 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  product         2    4[COMRAM] unsigned int 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  2    0[COMRAM] unsigned int 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, prodl, prodh
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1
  5454 ;;      Params:         4       0       0
  5455 ;;      Locals:         2       0       0
  5456 ;;      Temps:          0       0       0
  5457 ;;      Totals:         6       0       0
  5458 ;;Total ram usage:        6 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_sprintf
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text29
  5468  001A60                     __ptext29:
  5469                           	opt stack 0
  5470  001A60                     ___wmul:
  5471                           	opt stack 24
  5472                           
  5473                           ;incstack = 0
  5474  001A60  5001               	movf	___wmul@multiplier,w,c
  5475  001A62  0203               	mulwf	___wmul@multiplicand,c
  5476  001A64  CFF3 F005          	movff	prodl,___wmul@product
  5477  001A68  CFF4 F006          	movff	prodh,___wmul@product+1
  5478  001A6C  5001               	movf	___wmul@multiplier,w,c
  5479  001A6E  0204               	mulwf	___wmul@multiplicand+1,c
  5480  001A70  50F3               	movf	prodl,w,c
  5481  001A72  2606               	addwf	___wmul@product+1,f,c
  5482  001A74  5002               	movf	___wmul@multiplier+1,w,c
  5483  001A76  0203               	mulwf	___wmul@multiplicand,c
  5484  001A78  50F3               	movf	prodl,w,c
  5485  001A7A  2606               	addwf	___wmul@product+1,f,c
  5486  001A7C  C005  F001         	movff	___wmul@product,?___wmul
  5487  001A80  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5488  001A84  0012               	return	
  5489  001A86                     __end_of___wmul:
  5490                           	opt stack 0
  5491                           pclatu	equ	0xFFB
  5492                           pclath	equ	0xFFA
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           intcon	equ	0xFF2
  5500                           postinc0	equ	0xFEE
  5501                           fsr0h	equ	0xFEA
  5502                           fsr0l	equ	0xFE9
  5503                           wreg	equ	0xFE8
  5504                           fsr1h	equ	0xFE2
  5505                           fsr1l	equ	0xFE1
  5506                           indf2	equ	0xFDF
  5507                           postinc2	equ	0xFDE
  5508                           postdec2	equ	0xFDD
  5509                           fsr2h	equ	0xFDA
  5510                           fsr2l	equ	0xFD9
  5511                           status	equ	0xFD8
  5512                           
  5513 ;; *************** function ___llmod *****************
  5514 ;; Defined at:
  5515 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  dividend        4   13[COMRAM] unsigned long 
  5518 ;;  divisor         4   17[COMRAM] unsigned long 
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  counter         1   21[COMRAM] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  4   13[COMRAM] unsigned long 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1
  5530 ;;      Params:         8       0       0
  5531 ;;      Locals:         1       0       0
  5532 ;;      Temps:          0       0       0
  5533 ;;      Totals:         9       0       0
  5534 ;;Total ram usage:        9 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_sprintf
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text30
  5544  00176C                     __ptext30:
  5545                           	opt stack 0
  5546  00176C                     ___llmod:
  5547                           	opt stack 24
  5548                           
  5549                           ;incstack = 0
  5550  00176C  5015               	movf	___llmod@divisor+3,w,c
  5551  00176E  1012               	iorwf	___llmod@divisor,w,c
  5552  001770  1013               	iorwf	___llmod@divisor+1,w,c
  5553  001772  1014               	iorwf	___llmod@divisor+2,w,c
  5554  001774  B4D8               	btfsc	status,2,c
  5555  001776  D024               	goto	i2l901
  5556  001778  0E01               	movlw	1
  5557  00177A  6E16               	movwf	___llmod@counter,c
  5558  00177C  D006               	goto	i2l2191
  5559  00177E                     i2l2189:
  5560  00177E  90D8               	bcf	status,0,c
  5561  001780  3612               	rlcf	___llmod@divisor,f,c
  5562  001782  3613               	rlcf	___llmod@divisor+1,f,c
  5563  001784  3614               	rlcf	___llmod@divisor+2,f,c
  5564  001786  3615               	rlcf	___llmod@divisor+3,f,c
  5565  001788  2A16               	incf	___llmod@counter,f,c
  5566  00178A                     i2l2191:
  5567  00178A  AE15               	btfss	___llmod@divisor+3,7,c
  5568  00178C  D7F8               	goto	i2l2189
  5569  00178E                     i2l2193:
  5570  00178E  5012               	movf	___llmod@divisor,w,c
  5571  001790  5C0E               	subwf	___llmod@dividend,w,c
  5572  001792  5013               	movf	___llmod@divisor+1,w,c
  5573  001794  580F               	subwfb	___llmod@dividend+1,w,c
  5574  001796  5014               	movf	___llmod@divisor+2,w,c
  5575  001798  5810               	subwfb	___llmod@dividend+2,w,c
  5576  00179A  5015               	movf	___llmod@divisor+3,w,c
  5577  00179C  5811               	subwfb	___llmod@dividend+3,w,c
  5578  00179E  A0D8               	btfss	status,0,c
  5579  0017A0  D008               	goto	i2l2197
  5580  0017A2  5012               	movf	___llmod@divisor,w,c
  5581  0017A4  5E0E               	subwf	___llmod@dividend,f,c
  5582  0017A6  5013               	movf	___llmod@divisor+1,w,c
  5583  0017A8  5A0F               	subwfb	___llmod@dividend+1,f,c
  5584  0017AA  5014               	movf	___llmod@divisor+2,w,c
  5585  0017AC  5A10               	subwfb	___llmod@dividend+2,f,c
  5586  0017AE  5015               	movf	___llmod@divisor+3,w,c
  5587  0017B0  5A11               	subwfb	___llmod@dividend+3,f,c
  5588  0017B2                     i2l2197:
  5589  0017B2  90D8               	bcf	status,0,c
  5590  0017B4  3215               	rrcf	___llmod@divisor+3,f,c
  5591  0017B6  3214               	rrcf	___llmod@divisor+2,f,c
  5592  0017B8  3213               	rrcf	___llmod@divisor+1,f,c
  5593  0017BA  3212               	rrcf	___llmod@divisor,f,c
  5594  0017BC  2E16               	decfsz	___llmod@counter,f,c
  5595  0017BE  D7E7               	goto	i2l2193
  5596  0017C0                     i2l901:
  5597  0017C0  C00E  F00E         	movff	___llmod@dividend,?___llmod
  5598  0017C4  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  5599  0017C8  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  5600  0017CC  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  5601  0017D0  0012               	return	
  5602  0017D2                     __end_of___llmod:
  5603                           	opt stack 0
  5604                           pclatu	equ	0xFFB
  5605                           pclath	equ	0xFFA
  5606                           tblptru	equ	0xFF8
  5607                           tblptrh	equ	0xFF7
  5608                           tblptrl	equ	0xFF6
  5609                           tablat	equ	0xFF5
  5610                           prodh	equ	0xFF4
  5611                           prodl	equ	0xFF3
  5612                           intcon	equ	0xFF2
  5613                           postinc0	equ	0xFEE
  5614                           fsr0h	equ	0xFEA
  5615                           fsr0l	equ	0xFE9
  5616                           wreg	equ	0xFE8
  5617                           fsr1h	equ	0xFE2
  5618                           fsr1l	equ	0xFE1
  5619                           indf2	equ	0xFDF
  5620                           postinc2	equ	0xFDE
  5621                           postdec2	equ	0xFDD
  5622                           fsr2h	equ	0xFDA
  5623                           fsr2l	equ	0xFD9
  5624                           status	equ	0xFD8
  5625                           
  5626 ;; *************** function ___lldiv *****************
  5627 ;; Defined at:
  5628 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  dividend        4    0[COMRAM] unsigned long 
  5631 ;;  divisor         4    4[COMRAM] unsigned long 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  quotient        4    8[COMRAM] unsigned long 
  5634 ;;  counter         1   12[COMRAM] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  4    0[COMRAM] unsigned long 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1
  5644 ;;      Params:         8       0       0
  5645 ;;      Locals:         5       0       0
  5646 ;;      Temps:          0       0       0
  5647 ;;      Totals:        13       0       0
  5648 ;;Total ram usage:       13 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_sprintf
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text31
  5658  0016EA                     __ptext31:
  5659                           	opt stack 0
  5660  0016EA                     ___lldiv:
  5661                           	opt stack 24
  5662                           
  5663                           ;incstack = 0
  5664  0016EA  0E00               	movlw	0
  5665  0016EC  6E09               	movwf	___lldiv@quotient,c
  5666  0016EE  0E00               	movlw	0
  5667  0016F0  6E0A               	movwf	___lldiv@quotient+1,c
  5668  0016F2  0E00               	movlw	0
  5669  0016F4  6E0B               	movwf	___lldiv@quotient+2,c
  5670  0016F6  0E00               	movlw	0
  5671  0016F8  6E0C               	movwf	___lldiv@quotient+3,c
  5672  0016FA  5008               	movf	___lldiv@divisor+3,w,c
  5673  0016FC  1005               	iorwf	___lldiv@divisor,w,c
  5674  0016FE  1006               	iorwf	___lldiv@divisor+1,w,c
  5675  001700  1007               	iorwf	___lldiv@divisor+2,w,c
  5676  001702  B4D8               	btfsc	status,2,c
  5677  001704  D02A               	goto	i2l891
  5678  001706  0E01               	movlw	1
  5679  001708  6E0D               	movwf	___lldiv@counter,c
  5680  00170A  D006               	goto	i2l2171
  5681  00170C                     i2l2169:
  5682  00170C  90D8               	bcf	status,0,c
  5683  00170E  3605               	rlcf	___lldiv@divisor,f,c
  5684  001710  3606               	rlcf	___lldiv@divisor+1,f,c
  5685  001712  3607               	rlcf	___lldiv@divisor+2,f,c
  5686  001714  3608               	rlcf	___lldiv@divisor+3,f,c
  5687  001716  2A0D               	incf	___lldiv@counter,f,c
  5688  001718                     i2l2171:
  5689  001718  AE08               	btfss	___lldiv@divisor+3,7,c
  5690  00171A  D7F8               	goto	i2l2169
  5691  00171C                     i2l2173:
  5692  00171C  90D8               	bcf	status,0,c
  5693  00171E  3609               	rlcf	___lldiv@quotient,f,c
  5694  001720  360A               	rlcf	___lldiv@quotient+1,f,c
  5695  001722  360B               	rlcf	___lldiv@quotient+2,f,c
  5696  001724  360C               	rlcf	___lldiv@quotient+3,f,c
  5697  001726  5005               	movf	___lldiv@divisor,w,c
  5698  001728  5C01               	subwf	___lldiv@dividend,w,c
  5699  00172A  5006               	movf	___lldiv@divisor+1,w,c
  5700  00172C  5802               	subwfb	___lldiv@dividend+1,w,c
  5701  00172E  5007               	movf	___lldiv@divisor+2,w,c
  5702  001730  5803               	subwfb	___lldiv@dividend+2,w,c
  5703  001732  5008               	movf	___lldiv@divisor+3,w,c
  5704  001734  5804               	subwfb	___lldiv@dividend+3,w,c
  5705  001736  A0D8               	btfss	status,0,c
  5706  001738  D009               	goto	i2l2181
  5707  00173A  5005               	movf	___lldiv@divisor,w,c
  5708  00173C  5E01               	subwf	___lldiv@dividend,f,c
  5709  00173E  5006               	movf	___lldiv@divisor+1,w,c
  5710  001740  5A02               	subwfb	___lldiv@dividend+1,f,c
  5711  001742  5007               	movf	___lldiv@divisor+2,w,c
  5712  001744  5A03               	subwfb	___lldiv@dividend+2,f,c
  5713  001746  5008               	movf	___lldiv@divisor+3,w,c
  5714  001748  5A04               	subwfb	___lldiv@dividend+3,f,c
  5715  00174A  8009               	bsf	___lldiv@quotient,0,c
  5716  00174C                     i2l2181:
  5717  00174C  90D8               	bcf	status,0,c
  5718  00174E  3208               	rrcf	___lldiv@divisor+3,f,c
  5719  001750  3207               	rrcf	___lldiv@divisor+2,f,c
  5720  001752  3206               	rrcf	___lldiv@divisor+1,f,c
  5721  001754  3205               	rrcf	___lldiv@divisor,f,c
  5722  001756  2E0D               	decfsz	___lldiv@counter,f,c
  5723  001758  D7E1               	goto	i2l2173
  5724  00175A                     i2l891:
  5725  00175A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5726  00175E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5727  001762  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5728  001766  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5729  00176A  0012               	return	
  5730  00176C                     __end_of___lldiv:
  5731                           	opt stack 0
  5732                           pclatu	equ	0xFFB
  5733                           pclath	equ	0xFFA
  5734                           tblptru	equ	0xFF8
  5735                           tblptrh	equ	0xFF7
  5736                           tblptrl	equ	0xFF6
  5737                           tablat	equ	0xFF5
  5738                           prodh	equ	0xFF4
  5739                           prodl	equ	0xFF3
  5740                           intcon	equ	0xFF2
  5741                           postinc0	equ	0xFEE
  5742                           fsr0h	equ	0xFEA
  5743                           fsr0l	equ	0xFE9
  5744                           wreg	equ	0xFE8
  5745                           fsr1h	equ	0xFE2
  5746                           fsr1l	equ	0xFE1
  5747                           indf2	equ	0xFDF
  5748                           postinc2	equ	0xFDE
  5749                           postdec2	equ	0xFDD
  5750                           fsr2h	equ	0xFDA
  5751                           fsr2l	equ	0xFD9
  5752                           status	equ	0xFD8
  5753                           
  5754 ;; *************** function ___lltoft *****************
  5755 ;; Defined at:
  5756 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  c               4    8[COMRAM] unsigned long 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  exp             1   16[COMRAM] unsigned char 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  3    8[COMRAM] float 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1
  5770 ;;      Params:         4       0       0
  5771 ;;      Locals:         1       0       0
  5772 ;;      Temps:          4       0       0
  5773 ;;      Totals:         9       0       0
  5774 ;;Total ram usage:        9 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    1
  5777 ;; This function calls:
  5778 ;;		___ftpack
  5779 ;; This function is called by:
  5780 ;;		_ftoa
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text32
  5785  00182E                     __ptext32:
  5786                           	opt stack 0
  5787  00182E                     ___lltoft:
  5788                           	opt stack 24
  5789                           
  5790                           ;incstack = 0
  5791  00182E  0E8E               	movlw	142
  5792  001830  6E11               	movwf	___lltoft@exp,c
  5793  001832  D006               	goto	i2l2541
  5794  001834                     i2l2539:
  5795  001834  90D8               	bcf	status,0,c
  5796  001836  320C               	rrcf	___lltoft@c+3,f,c
  5797  001838  320B               	rrcf	___lltoft@c+2,f,c
  5798  00183A  320A               	rrcf	___lltoft@c+1,f,c
  5799  00183C  3209               	rrcf	___lltoft@c,f,c
  5800  00183E  2A11               	incf	___lltoft@exp,f,c
  5801  001840                     i2l2541:
  5802  001840  0E00               	movlw	0
  5803  001842  1409               	andwf	___lltoft@c,w,c
  5804  001844  6E0D               	movwf	??___lltoft& (0+255),c
  5805  001846  0E00               	movlw	0
  5806  001848  140A               	andwf	___lltoft@c+1,w,c
  5807  00184A  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  5808  00184C  0E00               	movlw	0
  5809  00184E  140B               	andwf	___lltoft@c+2,w,c
  5810  001850  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  5811  001852  0EFF               	movlw	255
  5812  001854  140C               	andwf	___lltoft@c+3,w,c
  5813  001856  6E10               	movwf	(??___lltoft+3)& (0+255),c
  5814  001858  5010               	movf	??___lltoft+3,w,c
  5815  00185A  100D               	iorwf	??___lltoft,w,c
  5816  00185C  100E               	iorwf	??___lltoft+1,w,c
  5817  00185E  100F               	iorwf	??___lltoft+2,w,c
  5818  001860  A4D8               	btfss	status,2,c
  5819  001862  D7E8               	goto	i2l2539
  5820  001864  C009  F001         	movff	___lltoft@c,___ftpack@arg
  5821  001868  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  5822  00186C  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  5823  001870  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  5824  001874  0E00               	movlw	0
  5825  001876  6E05               	movwf	___ftpack@sign,c
  5826  001878  EC4C  F00A         	call	___ftpack	;wreg free
  5827  00187C  C001  F009         	movff	?___ftpack,?___lltoft
  5828  001880  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  5829  001884  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  5830  001888  0012               	return	
  5831  00188A                     __end_of___lltoft:
  5832                           	opt stack 0
  5833                           pclatu	equ	0xFFB
  5834                           pclath	equ	0xFFA
  5835                           tblptru	equ	0xFF8
  5836                           tblptrh	equ	0xFF7
  5837                           tblptrl	equ	0xFF6
  5838                           tablat	equ	0xFF5
  5839                           prodh	equ	0xFF4
  5840                           prodl	equ	0xFF3
  5841                           intcon	equ	0xFF2
  5842                           postinc0	equ	0xFEE
  5843                           fsr0h	equ	0xFEA
  5844                           fsr0l	equ	0xFE9
  5845                           wreg	equ	0xFE8
  5846                           fsr1h	equ	0xFE2
  5847                           fsr1l	equ	0xFE1
  5848                           indf2	equ	0xFDF
  5849                           postinc2	equ	0xFDE
  5850                           postdec2	equ	0xFDD
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8
  5854                           
  5855 ;; *************** function ___fttol *****************
  5856 ;; Defined at:
  5857 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  f1              3   42[COMRAM] float 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  lval            4   52[COMRAM] unsigned long 
  5862 ;;  exp1            1   56[COMRAM] unsigned char 
  5863 ;;  sign1           1   51[COMRAM] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  4   42[COMRAM] long 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1
  5873 ;;      Params:         4       0       0
  5874 ;;      Locals:         6       0       0
  5875 ;;      Temps:          5       0       0
  5876 ;;      Totals:        15       0       0
  5877 ;;Total ram usage:       15 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_ftoa
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text33
  5887  00103C                     __ptext33:
  5888                           	opt stack 0
  5889  00103C                     ___fttol:
  5890                           	opt stack 25
  5891                           
  5892                           ;incstack = 0
  5893  00103C  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  5894  001040  6A30               	clrf	(??___fttol+1)& (0+255),c
  5895  001042  6A31               	clrf	(??___fttol+2)& (0+255),c
  5896  001044  342C               	rlcf	___fttol@f1+1,w,c
  5897  001046  362F               	rlcf	??___fttol& (0+255),f,c
  5898  001048  E301               	bnc	u243_41
  5899  00104A  8030               	bsf	(??___fttol+1)& (0+255),0,c
  5900  00104C                     u243_41:
  5901  00104C  502F               	movf	??___fttol,w,c
  5902  00104E  6E39               	movwf	___fttol@exp1,c
  5903  001050  6639               	tstfsz	___fttol@exp1& (0+255),c
  5904  001052  D009               	goto	i2l2497
  5905  001054  0E00               	movlw	0
  5906  001056  6E2B               	movwf	?___fttol,c
  5907  001058  0E00               	movlw	0
  5908  00105A  6E2C               	movwf	?___fttol+1,c
  5909  00105C  0E00               	movlw	0
  5910  00105E  6E2D               	movwf	?___fttol+2,c
  5911  001060  0E00               	movlw	0
  5912  001062  6E2E               	movwf	?___fttol+3,c
  5913  001064  0012               	return	
  5914  001066                     i2l2497:
  5915  001066  0E17               	movlw	23
  5916  001068  6E2F               	movwf	??___fttol& (0+255),c
  5917  00106A  C02B  F030         	movff	___fttol@f1,??___fttol+1
  5918  00106E  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  5919  001072  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  5920  001076  282F               	incf	??___fttol,w,c
  5921  001078  6E33               	movwf	(??___fttol+4)& (0+255),c
  5922  00107A  D004               	goto	i2u245_40
  5923  00107C                     i2u245_45:
  5924  00107C  90D8               	bcf	status,0,c
  5925  00107E  3232               	rrcf	??___fttol+3,f,c
  5926  001080  3231               	rrcf	??___fttol+2,f,c
  5927  001082  3230               	rrcf	??___fttol+1,f,c
  5928  001084                     i2u245_40:
  5929  001084  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  5930  001086  D7FA               	goto	i2u245_45
  5931  001088  5030               	movf	??___fttol+1,w,c
  5932  00108A  6E34               	movwf	___fttol@sign1,c
  5933  00108C  8E2C               	bsf	___fttol@f1+1,7,c
  5934  00108E  0EFF               	movlw	255
  5935  001090  162B               	andwf	___fttol@f1,f,c
  5936  001092  0EFF               	movlw	255
  5937  001094  162C               	andwf	___fttol@f1+1,f,c
  5938  001096  0E00               	movlw	0
  5939  001098  162D               	andwf	___fttol@f1+2,f,c
  5940  00109A  502B               	movf	___fttol@f1,w,c
  5941  00109C  6E35               	movwf	___fttol@lval,c
  5942  00109E  502C               	movf	___fttol@f1+1,w,c
  5943  0010A0  6E36               	movwf	___fttol@lval+1,c
  5944  0010A2  502D               	movf	___fttol@f1+2,w,c
  5945  0010A4  6E37               	movwf	___fttol@lval+2,c
  5946  0010A6  6A38               	clrf	___fttol@lval+3,c
  5947  0010A8  0E8E               	movlw	142
  5948  0010AA  5E39               	subwf	___fttol@exp1,f,c
  5949  0010AC  AE39               	btfss	___fttol@exp1,7,c
  5950  0010AE  D019               	goto	i2l2519
  5951  0010B0  5039               	movf	___fttol@exp1,w,c
  5952  0010B2  0A80               	xorlw	128
  5953  0010B4  6E2F               	movwf	??___fttol& (0+255),c
  5954  0010B6  0EF1               	movlw	241
  5955  0010B8  0A80               	xorlw	128
  5956  0010BA  5C2F               	subwf	??___fttol,w,c
  5957  0010BC  B0D8               	btfsc	status,0,c
  5958  0010BE  D009               	goto	i2l2515
  5959  0010C0  0E00               	movlw	0
  5960  0010C2  6E2B               	movwf	?___fttol,c
  5961  0010C4  0E00               	movlw	0
  5962  0010C6  6E2C               	movwf	?___fttol+1,c
  5963  0010C8  0E00               	movlw	0
  5964  0010CA  6E2D               	movwf	?___fttol+2,c
  5965  0010CC  0E00               	movlw	0
  5966  0010CE  6E2E               	movwf	?___fttol+3,c
  5967  0010D0  0012               	return	
  5968  0010D2                     i2l2515:
  5969  0010D2  90D8               	bcf	status,0,c
  5970  0010D4  3238               	rrcf	___fttol@lval+3,f,c
  5971  0010D6  3237               	rrcf	___fttol@lval+2,f,c
  5972  0010D8  3236               	rrcf	___fttol@lval+1,f,c
  5973  0010DA  3235               	rrcf	___fttol@lval,f,c
  5974  0010DC  3E39               	incfsz	___fttol@exp1,f,c
  5975  0010DE  D7F9               	goto	i2l2515
  5976  0010E0  D014               	goto	i2l2529
  5977  0010E2                     i2l2519:
  5978  0010E2  0E17               	movlw	23
  5979  0010E4  6439               	cpfsgt	___fttol@exp1,c
  5980  0010E6  D00F               	goto	i2l2527
  5981  0010E8  0E00               	movlw	0
  5982  0010EA  6E2B               	movwf	?___fttol,c
  5983  0010EC  0E00               	movlw	0
  5984  0010EE  6E2C               	movwf	?___fttol+1,c
  5985  0010F0  0E00               	movlw	0
  5986  0010F2  6E2D               	movwf	?___fttol+2,c
  5987  0010F4  0E00               	movlw	0
  5988  0010F6  6E2E               	movwf	?___fttol+3,c
  5989  0010F8  0012               	return	
  5990  0010FA                     i2l2525:
  5991  0010FA  90D8               	bcf	status,0,c
  5992  0010FC  3635               	rlcf	___fttol@lval,f,c
  5993  0010FE  3636               	rlcf	___fttol@lval+1,f,c
  5994  001100  3637               	rlcf	___fttol@lval+2,f,c
  5995  001102  3638               	rlcf	___fttol@lval+3,f,c
  5996  001104  0639               	decf	___fttol@exp1,f,c
  5997  001106                     i2l2527:
  5998  001106  6639               	tstfsz	___fttol@exp1,c
  5999  001108  D7F8               	goto	i2l2525
  6000  00110A                     i2l2529:
  6001  00110A  5034               	movf	___fttol@sign1,w,c
  6002  00110C  B4D8               	btfsc	status,2,c
  6003  00110E  D008               	goto	i2l2533
  6004  001110  1E38               	comf	___fttol@lval+3,f,c
  6005  001112  1E37               	comf	___fttol@lval+2,f,c
  6006  001114  1E36               	comf	___fttol@lval+1,f,c
  6007  001116  6C35               	negf	___fttol@lval,c
  6008  001118  0E00               	movlw	0
  6009  00111A  2236               	addwfc	___fttol@lval+1,f,c
  6010  00111C  2237               	addwfc	___fttol@lval+2,f,c
  6011  00111E  2238               	addwfc	___fttol@lval+3,f,c
  6012  001120                     i2l2533:
  6013  001120  C035  F02B         	movff	___fttol@lval,?___fttol
  6014  001124  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  6015  001128  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  6016  00112C  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  6017  001130  0012               	return	
  6018  001132                     __end_of___fttol:
  6019                           	opt stack 0
  6020                           pclatu	equ	0xFFB
  6021                           pclath	equ	0xFFA
  6022                           tblptru	equ	0xFF8
  6023                           tblptrh	equ	0xFF7
  6024                           tblptrl	equ	0xFF6
  6025                           tablat	equ	0xFF5
  6026                           prodh	equ	0xFF4
  6027                           prodl	equ	0xFF3
  6028                           intcon	equ	0xFF2
  6029                           postinc0	equ	0xFEE
  6030                           fsr0h	equ	0xFEA
  6031                           fsr0l	equ	0xFE9
  6032                           wreg	equ	0xFE8
  6033                           fsr1h	equ	0xFE2
  6034                           fsr1l	equ	0xFE1
  6035                           indf2	equ	0xFDF
  6036                           postinc2	equ	0xFDE
  6037                           postdec2	equ	0xFDD
  6038                           fsr2h	equ	0xFDA
  6039                           fsr2l	equ	0xFD9
  6040                           status	equ	0xFD8
  6041                           
  6042 ;; *************** function ___ftsub *****************
  6043 ;; Defined at:
  6044 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  f1              3   64[COMRAM] float 
  6047 ;;  f2              3   67[COMRAM] float 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  3   64[COMRAM] float 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1
  6059 ;;      Params:         6       0       0
  6060 ;;      Locals:         0       0       0
  6061 ;;      Temps:          0       0       0
  6062 ;;      Totals:         6       0       0
  6063 ;;Total ram usage:        6 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    2
  6066 ;; This function calls:
  6067 ;;		___ftadd
  6068 ;; This function is called by:
  6069 ;;		_ftoa
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text34
  6074  0019DC                     __ptext34:
  6075                           	opt stack 0
  6076  0019DC                     ___ftsub:
  6077                           	opt stack 23
  6078                           
  6079                           ;incstack = 0
  6080  0019DC  0E00               	movlw	0
  6081  0019DE  1A44               	xorwf	___ftsub@f2,f,c
  6082  0019E0  0E00               	movlw	0
  6083  0019E2  1A45               	xorwf	___ftsub@f2+1,f,c
  6084  0019E4  0E80               	movlw	128
  6085  0019E6  1A46               	xorwf	___ftsub@f2+2,f,c
  6086  0019E8  C041  F035         	movff	___ftsub@f1,___ftadd@f1
  6087  0019EC  C042  F036         	movff	___ftsub@f1+1,___ftadd@f1+1
  6088  0019F0  C043  F037         	movff	___ftsub@f1+2,___ftadd@f1+2
  6089  0019F4  C044  F038         	movff	___ftsub@f2,___ftadd@f2
  6090  0019F8  C045  F039         	movff	___ftsub@f2+1,___ftadd@f2+1
  6091  0019FC  C046  F03A         	movff	___ftsub@f2+2,___ftadd@f2+2
  6092  001A00  EC75  F005         	call	___ftadd	;wreg free
  6093  001A04  C035  F041         	movff	?___ftadd,?___ftsub
  6094  001A08  C036  F042         	movff	?___ftadd+1,?___ftsub+1
  6095  001A0C  C037  F043         	movff	?___ftadd+2,?___ftsub+2
  6096  001A10  0012               	return	
  6097  001A12                     __end_of___ftsub:
  6098                           	opt stack 0
  6099                           pclatu	equ	0xFFB
  6100                           pclath	equ	0xFFA
  6101                           tblptru	equ	0xFF8
  6102                           tblptrh	equ	0xFF7
  6103                           tblptrl	equ	0xFF6
  6104                           tablat	equ	0xFF5
  6105                           prodh	equ	0xFF4
  6106                           prodl	equ	0xFF3
  6107                           intcon	equ	0xFF2
  6108                           postinc0	equ	0xFEE
  6109                           fsr0h	equ	0xFEA
  6110                           fsr0l	equ	0xFE9
  6111                           wreg	equ	0xFE8
  6112                           fsr1h	equ	0xFE2
  6113                           fsr1l	equ	0xFE1
  6114                           indf2	equ	0xFDF
  6115                           postinc2	equ	0xFDE
  6116                           postdec2	equ	0xFDD
  6117                           fsr2h	equ	0xFDA
  6118                           fsr2l	equ	0xFD9
  6119                           status	equ	0xFD8
  6120                           
  6121 ;; *************** function ___ftadd *****************
  6122 ;; Defined at:
  6123 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  f1              3   52[COMRAM] float 
  6126 ;;  f2              3   55[COMRAM] float 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  exp1            1   63[COMRAM] unsigned char 
  6129 ;;  exp2            1   62[COMRAM] unsigned char 
  6130 ;;  sign            1   61[COMRAM] unsigned char 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  3   52[COMRAM] float 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1
  6140 ;;      Params:         6       0       0
  6141 ;;      Locals:         3       0       0
  6142 ;;      Temps:          3       0       0
  6143 ;;      Totals:        12       0       0
  6144 ;;Total ram usage:       12 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    1
  6147 ;; This function calls:
  6148 ;;		___ftpack
  6149 ;; This function is called by:
  6150 ;;		_interruptHandler
  6151 ;;		___ftsub
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text35
  6156  000AEA                     __ptext35:
  6157                           	opt stack 0
  6158  000AEA                     ___ftadd:
  6159                           	opt stack 23
  6160                           
  6161                           ;incstack = 0
  6162  000AEA  C037  F03B         	movff	___ftadd@f1+2,??___ftadd
  6163  000AEE  6A3C               	clrf	(??___ftadd+1)& (0+255),c
  6164  000AF0  6A3D               	clrf	(??___ftadd+2)& (0+255),c
  6165  000AF2  3436               	rlcf	___ftadd@f1+1,w,c
  6166  000AF4  363B               	rlcf	??___ftadd& (0+255),f,c
  6167  000AF6  E301               	bnc	u173_41
  6168  000AF8  803C               	bsf	(??___ftadd+1)& (0+255),0,c
  6169  000AFA                     u173_41:
  6170  000AFA  503B               	movf	??___ftadd,w,c
  6171  000AFC  6E40               	movwf	___ftadd@exp1,c
  6172  000AFE  C03A  F03B         	movff	___ftadd@f2+2,??___ftadd
  6173  000B02  6A3C               	clrf	(??___ftadd+1)& (0+255),c
  6174  000B04  6A3D               	clrf	(??___ftadd+2)& (0+255),c
  6175  000B06  3439               	rlcf	___ftadd@f2+1,w,c
  6176  000B08  363B               	rlcf	??___ftadd& (0+255),f,c
  6177  000B0A  E301               	bnc	u174_41
  6178  000B0C  803C               	bsf	(??___ftadd+1)& (0+255),0,c
  6179  000B0E                     u174_41:
  6180  000B0E  503B               	movf	??___ftadd,w,c
  6181  000B10  6E3F               	movwf	___ftadd@exp2,c
  6182  000B12  5040               	movf	___ftadd@exp1,w,c
  6183  000B14  B4D8               	btfsc	status,2,c
  6184  000B16  D00C               	goto	i2l758
  6185  000B18  503F               	movf	___ftadd@exp2,w,c
  6186  000B1A  5C40               	subwf	___ftadd@exp1,w,c
  6187  000B1C  B0D8               	btfsc	status,0,c
  6188  000B1E  D00F               	goto	i2l2101
  6189  000B20  5040               	movf	___ftadd@exp1,w,c
  6190  000B22  0800               	sublw	0
  6191  000B24  243F               	addwf	___ftadd@exp2,w,c
  6192  000B26  6E3B               	movwf	??___ftadd& (0+255),c
  6193  000B28  0E19               	movlw	25
  6194  000B2A  5C3B               	subwf	??___ftadd,w,c
  6195  000B2C  A0D8               	btfss	status,0,c
  6196  000B2E  D007               	goto	i2l2101
  6197  000B30                     i2l758:
  6198  000B30  C038  F035         	movff	___ftadd@f2,?___ftadd
  6199  000B34  C039  F036         	movff	___ftadd@f2+1,?___ftadd+1
  6200  000B38  C03A  F037         	movff	___ftadd@f2+2,?___ftadd+2
  6201  000B3C  0012               	return	
  6202  000B3E                     i2l2101:
  6203  000B3E  503F               	movf	___ftadd@exp2,w,c
  6204  000B40  B4D8               	btfsc	status,2,c
  6205  000B42  D00C               	goto	i2l762
  6206  000B44  5040               	movf	___ftadd@exp1,w,c
  6207  000B46  5C3F               	subwf	___ftadd@exp2,w,c
  6208  000B48  B0D8               	btfsc	status,0,c
  6209  000B4A  D00F               	goto	i2l2107
  6210  000B4C  503F               	movf	___ftadd@exp2,w,c
  6211  000B4E  0800               	sublw	0
  6212  000B50  2440               	addwf	___ftadd@exp1,w,c
  6213  000B52  6E3B               	movwf	??___ftadd& (0+255),c
  6214  000B54  0E19               	movlw	25
  6215  000B56  5C3B               	subwf	??___ftadd,w,c
  6216  000B58  A0D8               	btfss	status,0,c
  6217  000B5A  D007               	goto	i2l2107
  6218  000B5C                     i2l762:
  6219  000B5C  C035  F035         	movff	___ftadd@f1,?___ftadd
  6220  000B60  C036  F036         	movff	___ftadd@f1+1,?___ftadd+1
  6221  000B64  C037  F037         	movff	___ftadd@f1+2,?___ftadd+2
  6222  000B68  0012               	return	
  6223  000B6A                     i2l2107:
  6224  000B6A  0E06               	movlw	6
  6225  000B6C  6E3E               	movwf	___ftadd@sign,c
  6226  000B6E  BE37               	btfsc	___ftadd@f1+2,7,c
  6227  000B70  8E3E               	bsf	___ftadd@sign,7,c
  6228  000B72  BE3A               	btfsc	___ftadd@f2+2,7,c
  6229  000B74  8C3E               	bsf	___ftadd@sign,6,c
  6230  000B76  8E36               	bsf	___ftadd@f1+1,7,c
  6231  000B78  0EFF               	movlw	255
  6232  000B7A  1635               	andwf	___ftadd@f1,f,c
  6233  000B7C  0EFF               	movlw	255
  6234  000B7E  1636               	andwf	___ftadd@f1+1,f,c
  6235  000B80  0E00               	movlw	0
  6236  000B82  1637               	andwf	___ftadd@f1+2,f,c
  6237  000B84  8E39               	bsf	___ftadd@f2+1,7,c
  6238  000B86  0EFF               	movlw	255
  6239  000B88  1638               	andwf	___ftadd@f2,f,c
  6240  000B8A  0EFF               	movlw	255
  6241  000B8C  1639               	andwf	___ftadd@f2+1,f,c
  6242  000B8E  0E00               	movlw	0
  6243  000B90  163A               	andwf	___ftadd@f2+2,f,c
  6244  000B92  503F               	movf	___ftadd@exp2,w,c
  6245  000B94  5C40               	subwf	___ftadd@exp1,w,c
  6246  000B96  B0D8               	btfsc	status,0,c
  6247  000B98  D01A               	goto	i2l2133
  6248  000B9A                     i2l2123:
  6249  000B9A  90D8               	bcf	status,0,c
  6250  000B9C  3638               	rlcf	___ftadd@f2,f,c
  6251  000B9E  3639               	rlcf	___ftadd@f2+1,f,c
  6252  000BA0  363A               	rlcf	___ftadd@f2+2,f,c
  6253  000BA2  063F               	decf	___ftadd@exp2,f,c
  6254  000BA4  503F               	movf	___ftadd@exp2,w,c
  6255  000BA6  1840               	xorwf	___ftadd@exp1,w,c
  6256  000BA8  B4D8               	btfsc	status,2,c
  6257  000BAA  D00D               	goto	i2l2131
  6258  000BAC  063E               	decf	___ftadd@sign,f,c
  6259  000BAE  C03E  F03B         	movff	___ftadd@sign,??___ftadd
  6260  000BB2  0E07               	movlw	7
  6261  000BB4  163B               	andwf	??___ftadd,f,c
  6262  000BB6  B4D8               	btfsc	status,2,c
  6263  000BB8  D006               	goto	i2l2131
  6264  000BBA  D7EF               	goto	i2l2123
  6265  000BBC                     i2l2129:
  6266  000BBC  90D8               	bcf	status,0,c
  6267  000BBE  3237               	rrcf	___ftadd@f1+2,f,c
  6268  000BC0  3236               	rrcf	___ftadd@f1+1,f,c
  6269  000BC2  3235               	rrcf	___ftadd@f1,f,c
  6270  000BC4  2A40               	incf	___ftadd@exp1,f,c
  6271  000BC6                     i2l2131:
  6272  000BC6  503F               	movf	___ftadd@exp2,w,c
  6273  000BC8  6240               	cpfseq	___ftadd@exp1,c
  6274  000BCA  D7F8               	goto	i2l2129
  6275  000BCC  D01D               	goto	i2l773
  6276  000BCE                     i2l2133:
  6277  000BCE  5040               	movf	___ftadd@exp1,w,c
  6278  000BD0  5C3F               	subwf	___ftadd@exp2,w,c
  6279  000BD2  B0D8               	btfsc	status,0,c
  6280  000BD4  D019               	goto	i2l773
  6281  000BD6                     i2l2135:
  6282  000BD6  90D8               	bcf	status,0,c
  6283  000BD8  3635               	rlcf	___ftadd@f1,f,c
  6284  000BDA  3636               	rlcf	___ftadd@f1+1,f,c
  6285  000BDC  3637               	rlcf	___ftadd@f1+2,f,c
  6286  000BDE  0640               	decf	___ftadd@exp1,f,c
  6287  000BE0  503F               	movf	___ftadd@exp2,w,c
  6288  000BE2  1840               	xorwf	___ftadd@exp1,w,c
  6289  000BE4  B4D8               	btfsc	status,2,c
  6290  000BE6  D00D               	goto	i2l2143
  6291  000BE8  063E               	decf	___ftadd@sign,f,c
  6292  000BEA  C03E  F03B         	movff	___ftadd@sign,??___ftadd
  6293  000BEE  0E07               	movlw	7
  6294  000BF0  163B               	andwf	??___ftadd,f,c
  6295  000BF2  B4D8               	btfsc	status,2,c
  6296  000BF4  D006               	goto	i2l2143
  6297  000BF6  D7EF               	goto	i2l2135
  6298  000BF8                     i2l2141:
  6299  000BF8  90D8               	bcf	status,0,c
  6300  000BFA  323A               	rrcf	___ftadd@f2+2,f,c
  6301  000BFC  3239               	rrcf	___ftadd@f2+1,f,c
  6302  000BFE  3238               	rrcf	___ftadd@f2,f,c
  6303  000C00  2A3F               	incf	___ftadd@exp2,f,c
  6304  000C02                     i2l2143:
  6305  000C02  503F               	movf	___ftadd@exp2,w,c
  6306  000C04  6240               	cpfseq	___ftadd@exp1,c
  6307  000C06  D7F8               	goto	i2l2141
  6308  000C08                     i2l773:
  6309  000C08  AE3E               	btfss	___ftadd@sign,7,c
  6310  000C0A  D00C               	goto	i2l782
  6311  000C0C  0EFF               	movlw	255
  6312  000C0E  1A35               	xorwf	___ftadd@f1,f,c
  6313  000C10  0EFF               	movlw	255
  6314  000C12  1A36               	xorwf	___ftadd@f1+1,f,c
  6315  000C14  0EFF               	movlw	255
  6316  000C16  1A37               	xorwf	___ftadd@f1+2,f,c
  6317  000C18  0E01               	movlw	1
  6318  000C1A  2635               	addwf	___ftadd@f1,f,c
  6319  000C1C  0E00               	movlw	0
  6320  000C1E  2236               	addwfc	___ftadd@f1+1,f,c
  6321  000C20  0E00               	movlw	0
  6322  000C22  2237               	addwfc	___ftadd@f1+2,f,c
  6323  000C24                     i2l782:
  6324  000C24  AC3E               	btfss	___ftadd@sign,6,c
  6325  000C26  D00C               	goto	i2l2149
  6326  000C28  0EFF               	movlw	255
  6327  000C2A  1A38               	xorwf	___ftadd@f2,f,c
  6328  000C2C  0EFF               	movlw	255
  6329  000C2E  1A39               	xorwf	___ftadd@f2+1,f,c
  6330  000C30  0EFF               	movlw	255
  6331  000C32  1A3A               	xorwf	___ftadd@f2+2,f,c
  6332  000C34  0E01               	movlw	1
  6333  000C36  2638               	addwf	___ftadd@f2,f,c
  6334  000C38  0E00               	movlw	0
  6335  000C3A  2239               	addwfc	___ftadd@f2+1,f,c
  6336  000C3C  0E00               	movlw	0
  6337  000C3E  223A               	addwfc	___ftadd@f2+2,f,c
  6338  000C40                     i2l2149:
  6339  000C40  0E00               	movlw	0
  6340  000C42  6E3E               	movwf	___ftadd@sign,c
  6341  000C44  5035               	movf	___ftadd@f1,w,c
  6342  000C46  2638               	addwf	___ftadd@f2,f,c
  6343  000C48  5036               	movf	___ftadd@f1+1,w,c
  6344  000C4A  2239               	addwfc	___ftadd@f2+1,f,c
  6345  000C4C  5037               	movf	___ftadd@f1+2,w,c
  6346  000C4E  223A               	addwfc	___ftadd@f2+2,f,c
  6347  000C50  AE3A               	btfss	___ftadd@f2+2,7,c
  6348  000C52  D00E               	goto	i2l2159
  6349  000C54  0EFF               	movlw	255
  6350  000C56  1A38               	xorwf	___ftadd@f2,f,c
  6351  000C58  0EFF               	movlw	255
  6352  000C5A  1A39               	xorwf	___ftadd@f2+1,f,c
  6353  000C5C  0EFF               	movlw	255
  6354  000C5E  1A3A               	xorwf	___ftadd@f2+2,f,c
  6355  000C60  0E01               	movlw	1
  6356  000C62  2638               	addwf	___ftadd@f2,f,c
  6357  000C64  0E00               	movlw	0
  6358  000C66  2239               	addwfc	___ftadd@f2+1,f,c
  6359  000C68  0E00               	movlw	0
  6360  000C6A  223A               	addwfc	___ftadd@f2+2,f,c
  6361  000C6C  0E01               	movlw	1
  6362  000C6E  6E3E               	movwf	___ftadd@sign,c
  6363  000C70                     i2l2159:
  6364  000C70  C038  F001         	movff	___ftadd@f2,___ftpack@arg
  6365  000C74  C039  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  6366  000C78  C03A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  6367  000C7C  C040  F004         	movff	___ftadd@exp1,___ftpack@exp
  6368  000C80  C03E  F005         	movff	___ftadd@sign,___ftpack@sign
  6369  000C84  EC4C  F00A         	call	___ftpack	;wreg free
  6370  000C88  C001  F035         	movff	?___ftpack,?___ftadd
  6371  000C8C  C002  F036         	movff	?___ftpack+1,?___ftadd+1
  6372  000C90  C003  F037         	movff	?___ftpack+2,?___ftadd+2
  6373  000C94  0012               	return	
  6374  000C96                     __end_of___ftadd:
  6375                           	opt stack 0
  6376                           pclatu	equ	0xFFB
  6377                           pclath	equ	0xFFA
  6378                           tblptru	equ	0xFF8
  6379                           tblptrh	equ	0xFF7
  6380                           tblptrl	equ	0xFF6
  6381                           tablat	equ	0xFF5
  6382                           prodh	equ	0xFF4
  6383                           prodl	equ	0xFF3
  6384                           intcon	equ	0xFF2
  6385                           postinc0	equ	0xFEE
  6386                           fsr0h	equ	0xFEA
  6387                           fsr0l	equ	0xFE9
  6388                           wreg	equ	0xFE8
  6389                           fsr1h	equ	0xFE2
  6390                           fsr1l	equ	0xFE1
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function ___ftneg *****************
  6399 ;; Defined at:
  6400 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  f1              3    0[COMRAM] float 
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  3    0[COMRAM] float 
  6407 ;; Registers used:
  6408 ;;		wreg, status,2, status,0
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1
  6414 ;;      Params:         3       0       0
  6415 ;;      Locals:         0       0       0
  6416 ;;      Temps:          0       0       0
  6417 ;;      Totals:         3       0       0
  6418 ;;Total ram usage:        3 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_ftoa
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text36
  6428  001A86                     __ptext36:
  6429                           	opt stack 0
  6430  001A86                     ___ftneg:
  6431                           	opt stack 25
  6432                           
  6433                           ;incstack = 0
  6434  001A86  0E7F               	movlw	127
  6435  001A88  1403               	andwf	___ftneg@f1+2,w,c
  6436  001A8A  1002               	iorwf	___ftneg@f1+1,w,c
  6437  001A8C  1001               	iorwf	___ftneg@f1,w,c
  6438  001A8E  B4D8               	btfsc	status,2,c
  6439  001A90  D006               	goto	i2l815
  6440  001A92  0E00               	movlw	0
  6441  001A94  1A01               	xorwf	___ftneg@f1,f,c
  6442  001A96  0E00               	movlw	0
  6443  001A98  1A02               	xorwf	___ftneg@f1+1,f,c
  6444  001A9A  0E80               	movlw	128
  6445  001A9C  1A03               	xorwf	___ftneg@f1+2,f,c
  6446  001A9E                     i2l815:
  6447  001A9E  C001  F001         	movff	___ftneg@f1,?___ftneg
  6448  001AA2  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  6449  001AA6  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  6450  001AAA  0012               	return	
  6451  001AAC                     __end_of___ftneg:
  6452                           	opt stack 0
  6453                           pclatu	equ	0xFFB
  6454                           pclath	equ	0xFFA
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodh	equ	0xFF4
  6460                           prodl	equ	0xFF3
  6461                           intcon	equ	0xFF2
  6462                           postinc0	equ	0xFEE
  6463                           fsr0h	equ	0xFEA
  6464                           fsr0l	equ	0xFE9
  6465                           wreg	equ	0xFE8
  6466                           fsr1h	equ	0xFE2
  6467                           fsr1l	equ	0xFE1
  6468                           indf2	equ	0xFDF
  6469                           postinc2	equ	0xFDE
  6470                           postdec2	equ	0xFDD
  6471                           fsr2h	equ	0xFDA
  6472                           fsr2l	equ	0xFD9
  6473                           status	equ	0xFD8
  6474                           
  6475 ;; *************** function ___ftmul *****************
  6476 ;; Defined at:
  6477 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  f1              3   27[COMRAM] float 
  6480 ;;  f2              3   30[COMRAM] float 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  6483 ;;  sign            1   41[COMRAM] unsigned char 
  6484 ;;  cntr            1   40[COMRAM] unsigned char 
  6485 ;;  exp             1   36[COMRAM] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  3   27[COMRAM] float 
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0, cstack
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1
  6495 ;;      Params:         6       0       0
  6496 ;;      Locals:         6       0       0
  6497 ;;      Temps:          3       0       0
  6498 ;;      Totals:        15       0       0
  6499 ;;Total ram usage:       15 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; Hardware stack levels required when called:    1
  6502 ;; This function calls:
  6503 ;;		___ftpack
  6504 ;; This function is called by:
  6505 ;;		_readtemp
  6506 ;;		_ftoa
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text37
  6511  001132                     __ptext37:
  6512                           	opt stack 0
  6513  001132                     ___ftmul:
  6514                           	opt stack 24
  6515                           
  6516                           ;incstack = 0
  6517  001132  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  6518  001136  6A23               	clrf	(??___ftmul+1)& (0+255),c
  6519  001138  6A24               	clrf	(??___ftmul+2)& (0+255),c
  6520  00113A  341D               	rlcf	___ftmul@f1+1,w,c
  6521  00113C  3622               	rlcf	??___ftmul& (0+255),f,c
  6522  00113E  E301               	bnc	u235_41
  6523  001140  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  6524  001142                     u235_41:
  6525  001142  5022               	movf	??___ftmul,w,c
  6526  001144  6E25               	movwf	___ftmul@exp,c
  6527  001146  6625               	tstfsz	___ftmul@exp& (0+255),c
  6528  001148  D007               	goto	i2l2427
  6529  00114A  0E00               	movlw	0
  6530  00114C  6E1C               	movwf	?___ftmul,c
  6531  00114E  0E00               	movlw	0
  6532  001150  6E1D               	movwf	?___ftmul+1,c
  6533  001152  0E00               	movlw	0
  6534  001154  6E1E               	movwf	?___ftmul+2,c
  6535  001156  0012               	return	
  6536  001158                     i2l2427:
  6537  001158  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  6538  00115C  6A23               	clrf	(??___ftmul+1)& (0+255),c
  6539  00115E  6A24               	clrf	(??___ftmul+2)& (0+255),c
  6540  001160  3420               	rlcf	___ftmul@f2+1,w,c
  6541  001162  3622               	rlcf	??___ftmul& (0+255),f,c
  6542  001164  E301               	bnc	u237_41
  6543  001166  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  6544  001168                     u237_41:
  6545  001168  5022               	movf	??___ftmul,w,c
  6546  00116A  6E2A               	movwf	___ftmul@sign,c
  6547  00116C  662A               	tstfsz	___ftmul@sign& (0+255),c
  6548  00116E  D007               	goto	i2l2433
  6549  001170  0E00               	movlw	0
  6550  001172  6E1C               	movwf	?___ftmul,c
  6551  001174  0E00               	movlw	0
  6552  001176  6E1D               	movwf	?___ftmul+1,c
  6553  001178  0E00               	movlw	0
  6554  00117A  6E1E               	movwf	?___ftmul+2,c
  6555  00117C  0012               	return	
  6556  00117E                     i2l2433:
  6557  00117E  502A               	movf	___ftmul@sign,w,c
  6558  001180  0F7B               	addlw	123
  6559  001182  2625               	addwf	___ftmul@exp,f,c
  6560  001184  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  6561  001188  5021               	movf	___ftmul@f2+2,w,c
  6562  00118A  1A2A               	xorwf	___ftmul@sign,f,c
  6563  00118C  0E80               	movlw	128
  6564  00118E  162A               	andwf	___ftmul@sign,f,c
  6565  001190  8E1D               	bsf	___ftmul@f1+1,7,c
  6566  001192  8E20               	bsf	___ftmul@f2+1,7,c
  6567  001194  0EFF               	movlw	255
  6568  001196  161F               	andwf	___ftmul@f2,f,c
  6569  001198  0EFF               	movlw	255
  6570  00119A  1620               	andwf	___ftmul@f2+1,f,c
  6571  00119C  0E00               	movlw	0
  6572  00119E  1621               	andwf	___ftmul@f2+2,f,c
  6573  0011A0  0E00               	movlw	0
  6574  0011A2  6E26               	movwf	___ftmul@f3_as_product,c
  6575  0011A4  0E00               	movlw	0
  6576  0011A6  6E27               	movwf	___ftmul@f3_as_product+1,c
  6577  0011A8  0E00               	movlw	0
  6578  0011AA  6E28               	movwf	___ftmul@f3_as_product+2,c
  6579  0011AC  0E07               	movlw	7
  6580  0011AE  6E29               	movwf	___ftmul@cntr,c
  6581  0011B0                     i2l2447:
  6582  0011B0  A01C               	btfss	___ftmul@f1,0,c
  6583  0011B2  D006               	goto	i2l2451
  6584  0011B4  501F               	movf	___ftmul@f2,w,c
  6585  0011B6  2626               	addwf	___ftmul@f3_as_product,f,c
  6586  0011B8  5020               	movf	___ftmul@f2+1,w,c
  6587  0011BA  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  6588  0011BC  5021               	movf	___ftmul@f2+2,w,c
  6589  0011BE  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  6590  0011C0                     i2l2451:
  6591  0011C0  90D8               	bcf	status,0,c
  6592  0011C2  321E               	rrcf	___ftmul@f1+2,f,c
  6593  0011C4  321D               	rrcf	___ftmul@f1+1,f,c
  6594  0011C6  321C               	rrcf	___ftmul@f1,f,c
  6595  0011C8  90D8               	bcf	status,0,c
  6596  0011CA  361F               	rlcf	___ftmul@f2,f,c
  6597  0011CC  3620               	rlcf	___ftmul@f2+1,f,c
  6598  0011CE  3621               	rlcf	___ftmul@f2+2,f,c
  6599  0011D0  2E29               	decfsz	___ftmul@cntr,f,c
  6600  0011D2  D7EE               	goto	i2l2447
  6601  0011D4  0E09               	movlw	9
  6602  0011D6  6E29               	movwf	___ftmul@cntr,c
  6603  0011D8                     i2l2457:
  6604  0011D8  A01C               	btfss	___ftmul@f1,0,c
  6605  0011DA  D006               	goto	i2l2461
  6606  0011DC  501F               	movf	___ftmul@f2,w,c
  6607  0011DE  2626               	addwf	___ftmul@f3_as_product,f,c
  6608  0011E0  5020               	movf	___ftmul@f2+1,w,c
  6609  0011E2  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  6610  0011E4  5021               	movf	___ftmul@f2+2,w,c
  6611  0011E6  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  6612  0011E8                     i2l2461:
  6613  0011E8  90D8               	bcf	status,0,c
  6614  0011EA  321E               	rrcf	___ftmul@f1+2,f,c
  6615  0011EC  321D               	rrcf	___ftmul@f1+1,f,c
  6616  0011EE  321C               	rrcf	___ftmul@f1,f,c
  6617  0011F0  90D8               	bcf	status,0,c
  6618  0011F2  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  6619  0011F4  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  6620  0011F6  3226               	rrcf	___ftmul@f3_as_product,f,c
  6621  0011F8  2E29               	decfsz	___ftmul@cntr,f,c
  6622  0011FA  D7EE               	goto	i2l2457
  6623  0011FC  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  6624  001200  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6625  001204  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6626  001208  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  6627  00120C  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  6628  001210  EC4C  F00A         	call	___ftpack	;wreg free
  6629  001214  C001  F01C         	movff	?___ftpack,?___ftmul
  6630  001218  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  6631  00121C  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  6632  001220  0012               	return	
  6633  001222                     __end_of___ftmul:
  6634                           	opt stack 0
  6635                           pclatu	equ	0xFFB
  6636                           pclath	equ	0xFFA
  6637                           tblptru	equ	0xFF8
  6638                           tblptrh	equ	0xFF7
  6639                           tblptrl	equ	0xFF6
  6640                           tablat	equ	0xFF5
  6641                           prodh	equ	0xFF4
  6642                           prodl	equ	0xFF3
  6643                           intcon	equ	0xFF2
  6644                           postinc0	equ	0xFEE
  6645                           fsr0h	equ	0xFEA
  6646                           fsr0l	equ	0xFE9
  6647                           wreg	equ	0xFE8
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           indf2	equ	0xFDF
  6651                           postinc2	equ	0xFDE
  6652                           postdec2	equ	0xFDD
  6653                           fsr2h	equ	0xFDA
  6654                           fsr2l	equ	0xFD9
  6655                           status	equ	0xFD8
  6656                           
  6657 ;; *************** function ___ftpack *****************
  6658 ;; Defined at:
  6659 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  arg             3    0[COMRAM] unsigned um
  6662 ;;  exp             1    3[COMRAM] unsigned char 
  6663 ;;  sign            1    4[COMRAM] unsigned char 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  3    0[COMRAM] float 
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1
  6675 ;;      Params:         5       0       0
  6676 ;;      Locals:         0       0       0
  6677 ;;      Temps:          3       0       0
  6678 ;;      Totals:         8       0       0
  6679 ;;Total ram usage:        8 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		___awtoft
  6685 ;;		___ftadd
  6686 ;;		___ftdiv
  6687 ;;		___ftmul
  6688 ;;		___lltoft
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text38
  6693  001498                     __ptext38:
  6694                           	opt stack 0
  6695  001498                     ___ftpack:
  6696                           	opt stack 24
  6697                           
  6698                           ;incstack = 0
  6699  001498  5004               	movf	___ftpack@exp,w,c
  6700  00149A  B4D8               	btfsc	status,2,c
  6701  00149C  D005               	goto	i2l2021
  6702  00149E  5001               	movf	___ftpack@arg,w,c
  6703  0014A0  1002               	iorwf	___ftpack@arg+1,w,c
  6704  0014A2  1003               	iorwf	___ftpack@arg+2,w,c
  6705  0014A4  A4D8               	btfss	status,2,c
  6706  0014A6  D00C               	goto	i2l2027
  6707  0014A8                     i2l2021:
  6708  0014A8  0E00               	movlw	0
  6709  0014AA  6E01               	movwf	?___ftpack,c
  6710  0014AC  0E00               	movlw	0
  6711  0014AE  6E02               	movwf	?___ftpack+1,c
  6712  0014B0  0E00               	movlw	0
  6713  0014B2  6E03               	movwf	?___ftpack+2,c
  6714  0014B4  0012               	return	
  6715  0014B6                     i2l2025:
  6716  0014B6  2A04               	incf	___ftpack@exp,f,c
  6717  0014B8  90D8               	bcf	status,0,c
  6718  0014BA  3203               	rrcf	___ftpack@arg+2,f,c
  6719  0014BC  3202               	rrcf	___ftpack@arg+1,f,c
  6720  0014BE  3201               	rrcf	___ftpack@arg,f,c
  6721  0014C0                     i2l2027:
  6722  0014C0  0E00               	movlw	0
  6723  0014C2  1401               	andwf	___ftpack@arg,w,c
  6724  0014C4  6E06               	movwf	??___ftpack& (0+255),c
  6725  0014C6  0E00               	movlw	0
  6726  0014C8  1402               	andwf	___ftpack@arg+1,w,c
  6727  0014CA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6728  0014CC  0EFE               	movlw	254
  6729  0014CE  1403               	andwf	___ftpack@arg+2,w,c
  6730  0014D0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6731  0014D2  5006               	movf	??___ftpack,w,c
  6732  0014D4  1007               	iorwf	??___ftpack+1,w,c
  6733  0014D6  1008               	iorwf	??___ftpack+2,w,c
  6734  0014D8  B4D8               	btfsc	status,2,c
  6735  0014DA  D00C               	goto	i2l2033
  6736  0014DC  D7EC               	goto	i2l2025
  6737  0014DE                     i2l2029:
  6738  0014DE  2A04               	incf	___ftpack@exp,f,c
  6739  0014E0  0E01               	movlw	1
  6740  0014E2  2601               	addwf	___ftpack@arg,f,c
  6741  0014E4  0E00               	movlw	0
  6742  0014E6  2202               	addwfc	___ftpack@arg+1,f,c
  6743  0014E8  0E00               	movlw	0
  6744  0014EA  2203               	addwfc	___ftpack@arg+2,f,c
  6745  0014EC  90D8               	bcf	status,0,c
  6746  0014EE  3203               	rrcf	___ftpack@arg+2,f,c
  6747  0014F0  3202               	rrcf	___ftpack@arg+1,f,c
  6748  0014F2  3201               	rrcf	___ftpack@arg,f,c
  6749  0014F4                     i2l2033:
  6750  0014F4  0E00               	movlw	0
  6751  0014F6  1401               	andwf	___ftpack@arg,w,c
  6752  0014F8  6E06               	movwf	??___ftpack& (0+255),c
  6753  0014FA  0E00               	movlw	0
  6754  0014FC  1402               	andwf	___ftpack@arg+1,w,c
  6755  0014FE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6756  001500  0EFF               	movlw	255
  6757  001502  1403               	andwf	___ftpack@arg+2,w,c
  6758  001504  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6759  001506  5006               	movf	??___ftpack,w,c
  6760  001508  1007               	iorwf	??___ftpack+1,w,c
  6761  00150A  1008               	iorwf	??___ftpack+2,w,c
  6762  00150C  B4D8               	btfsc	status,2,c
  6763  00150E  D006               	goto	i2l2037
  6764  001510  D7E6               	goto	i2l2029
  6765  001512                     i2l2035:
  6766  001512  0604               	decf	___ftpack@exp,f,c
  6767  001514  90D8               	bcf	status,0,c
  6768  001516  3601               	rlcf	___ftpack@arg,f,c
  6769  001518  3602               	rlcf	___ftpack@arg+1,f,c
  6770  00151A  3603               	rlcf	___ftpack@arg+2,f,c
  6771  00151C                     i2l2037:
  6772  00151C  AE02               	btfss	___ftpack@arg+1,7,c
  6773  00151E  D7F9               	goto	i2l2035
  6774  001520  A004               	btfss	___ftpack@exp,0,c
  6775  001522  9E02               	bcf	___ftpack@arg+1,7,c
  6776  001524  90D8               	bcf	status,0,c
  6777  001526  3204               	rrcf	___ftpack@exp,f,c
  6778  001528  5004               	movf	___ftpack@exp,w,c
  6779  00152A  1203               	iorwf	___ftpack@arg+2,f,c
  6780  00152C  5005               	movf	___ftpack@sign,w,c
  6781  00152E  A4D8               	btfss	status,2,c
  6782  001530  8E03               	bsf	___ftpack@arg+2,7,c
  6783  001532  C001  F001         	movff	___ftpack@arg,?___ftpack
  6784  001536  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6785  00153A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6786  00153E  0012               	return	
  6787  001540                     __end_of___ftpack:
  6788                           	opt stack 0
  6789                           pclatu	equ	0xFFB
  6790                           pclath	equ	0xFFA
  6791                           tblptru	equ	0xFF8
  6792                           tblptrh	equ	0xFF7
  6793                           tblptrl	equ	0xFF6
  6794                           tablat	equ	0xFF5
  6795                           prodh	equ	0xFF4
  6796                           prodl	equ	0xFF3
  6797                           intcon	equ	0xFF2
  6798                           postinc0	equ	0xFEE
  6799                           fsr0h	equ	0xFEA
  6800                           fsr0l	equ	0xFE9
  6801                           wreg	equ	0xFE8
  6802                           fsr1h	equ	0xFE2
  6803                           fsr1l	equ	0xFE1
  6804                           indf2	equ	0xFDF
  6805                           postinc2	equ	0xFDE
  6806                           postdec2	equ	0xFDD
  6807                           fsr2h	equ	0xFDA
  6808                           fsr2l	equ	0xFD9
  6809                           status	equ	0xFD8
  6810                           
  6811 ;; *************** function _ReadSHORT *****************
  6812 ;; Defined at:
  6813 ;;		line 175 in file "main.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  d               2    4[COMRAM] unsigned short 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  2    1[COMRAM] unsigned short 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0, cstack
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1
  6827 ;;      Params:         2       0       0
  6828 ;;      Locals:         2       0       0
  6829 ;;      Temps:          1       0       0
  6830 ;;      Totals:         5       0       0
  6831 ;;Total ram usage:        5 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:    1
  6834 ;; This function calls:
  6835 ;;		_ReadUSART
  6836 ;; This function is called by:
  6837 ;;		_interruptHandler
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text39
  6842  001A12                     __ptext39:
  6843                           	opt stack 0
  6844  001A12                     _ReadSHORT:
  6845                           	opt stack 25
  6846                           
  6847                           ;main.c: 176: unsigned short d = 0;
  6848                           
  6849                           ;incstack = 0
  6850  001A12  0E00               	movlw	0
  6851  001A14  6E06               	movwf	ReadSHORT@d+1,c
  6852  001A16  0E00               	movlw	0
  6853  001A18  6E05               	movwf	ReadSHORT@d,c
  6854                           
  6855                           ;main.c: 177: d = ReadUSART() << 8;
  6856  001A1A  EC66  F00D         	call	_ReadUSART	;wreg free
  6857  001A1E  6E06               	movwf	ReadSHORT@d+1,c
  6858  001A20  6A05               	clrf	ReadSHORT@d,c
  6859  001A22                     i2l120:
  6860  001A22  AA9E               	btfss	3998,5,c	;volatile
  6861  001A24  D7FE               	goto	i2l120
  6862                           
  6863                           ;main.c: 179: d |= ReadUSART();
  6864  001A26  EC66  F00D         	call	_ReadUSART	;wreg free
  6865  001A2A  6E04               	movwf	??_ReadSHORT& (0+255),c
  6866  001A2C  5004               	movf	??_ReadSHORT,w,c
  6867  001A2E  1205               	iorwf	ReadSHORT@d,f,c
  6868                           
  6869                           ;main.c: 180: return d;
  6870  001A30  C005  F002         	movff	ReadSHORT@d,?_ReadSHORT
  6871  001A34  C006  F003         	movff	ReadSHORT@d+1,?_ReadSHORT+1
  6872  001A38  0012               	return	
  6873  001A3A                     __end_of_ReadSHORT:
  6874                           	opt stack 0
  6875                           pclatu	equ	0xFFB
  6876                           pclath	equ	0xFFA
  6877                           tblptru	equ	0xFF8
  6878                           tblptrh	equ	0xFF7
  6879                           tblptrl	equ	0xFF6
  6880                           tablat	equ	0xFF5
  6881                           prodh	equ	0xFF4
  6882                           prodl	equ	0xFF3
  6883                           intcon	equ	0xFF2
  6884                           postinc0	equ	0xFEE
  6885                           fsr0h	equ	0xFEA
  6886                           fsr0l	equ	0xFE9
  6887                           wreg	equ	0xFE8
  6888                           fsr1h	equ	0xFE2
  6889                           fsr1l	equ	0xFE1
  6890                           indf2	equ	0xFDF
  6891                           postinc2	equ	0xFDE
  6892                           postdec2	equ	0xFDD
  6893                           fsr2h	equ	0xFDA
  6894                           fsr2l	equ	0xFD9
  6895                           status	equ	0xFD8
  6896                           
  6897 ;; *************** function _ReadUSART *****************
  6898 ;; Defined at:
  6899 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;		None
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  data            1    0[COMRAM] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      unsigned char 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1
  6913 ;;      Params:         0       0       0
  6914 ;;      Locals:         1       0       0
  6915 ;;      Temps:          0       0       0
  6916 ;;      Totals:         1       0       0
  6917 ;;Total ram usage:        1 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_ReadSHORT
  6923 ;;		_interruptHandler
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text40
  6928  001ACC                     __ptext40:
  6929                           	opt stack 0
  6930  001ACC                     _ReadUSART:
  6931                           	opt stack 26
  6932                           
  6933                           ;incstack = 0
  6934  001ACC  0EF2               	movlw	242
  6935  001ACE  165C               	andwf	_USART_Status,f,c
  6936  001AD0  ACAB               	btfss	4011,6,c	;volatile
  6937  001AD2  D003               	goto	i2l390
  6938  001AD4  905C               	bcf	_USART_Status,0,c
  6939  001AD6  B0AB               	btfsc	4011,0,c	;volatile
  6940  001AD8  805C               	bsf	_USART_Status,0,c
  6941  001ADA                     i2l390:
  6942  001ADA  B4AB               	btfsc	4011,2,c	;volatile
  6943  001ADC  845C               	bsf	_USART_Status,2,c
  6944  001ADE  B2AB               	btfsc	4011,1,c	;volatile
  6945  001AE0  865C               	bsf	_USART_Status,3,c
  6946  001AE2  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6947  001AE6  5001               	movf	ReadUSART@data,w,c
  6948  001AE8  0012               	return	
  6949  001AEA                     __end_of_ReadUSART:
  6950                           	opt stack 0
  6951                           pclatu	equ	0xFFB
  6952                           pclath	equ	0xFFA
  6953                           tblptru	equ	0xFF8
  6954                           tblptrh	equ	0xFF7
  6955                           tblptrl	equ	0xFF6
  6956                           tablat	equ	0xFF5
  6957                           prodh	equ	0xFF4
  6958                           prodl	equ	0xFF3
  6959                           intcon	equ	0xFF2
  6960                           postinc0	equ	0xFEE
  6961                           fsr0h	equ	0xFEA
  6962                           fsr0l	equ	0xFE9
  6963                           wreg	equ	0xFE8
  6964                           fsr1h	equ	0xFE2
  6965                           fsr1l	equ	0xFE1
  6966                           indf2	equ	0xFDF
  6967                           postinc2	equ	0xFDE
  6968                           postdec2	equ	0xFDD
  6969                           fsr2h	equ	0xFDA
  6970                           fsr2l	equ	0xFD9
  6971                           status	equ	0xFD8
  6972                           pclatu	equ	0xFFB
  6973                           pclath	equ	0xFFA
  6974                           tblptru	equ	0xFF8
  6975                           tblptrh	equ	0xFF7
  6976                           tblptrl	equ	0xFF6
  6977                           tablat	equ	0xFF5
  6978                           prodh	equ	0xFF4
  6979                           prodl	equ	0xFF3
  6980                           intcon	equ	0xFF2
  6981                           postinc0	equ	0xFEE
  6982                           fsr0h	equ	0xFEA
  6983                           fsr0l	equ	0xFE9
  6984                           wreg	equ	0xFE8
  6985                           fsr1h	equ	0xFE2
  6986                           fsr1l	equ	0xFE1
  6987                           indf2	equ	0xFDF
  6988                           postinc2	equ	0xFDE
  6989                           postdec2	equ	0xFDD
  6990                           fsr2h	equ	0xFDA
  6991                           fsr2l	equ	0xFD9
  6992                           status	equ	0xFD8
  6993                           
  6994                           	psect	rparam
  6995  0000                     pclatu	equ	0xFFB
  6996                           pclath	equ	0xFFA
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           postinc0	equ	0xFEE
  7005                           fsr0h	equ	0xFEA
  7006                           fsr0l	equ	0xFE9
  7007                           wreg	equ	0xFE8
  7008                           fsr1h	equ	0xFE2
  7009                           fsr1l	equ	0xFE1
  7010                           indf2	equ	0xFDF
  7011                           postinc2	equ	0xFDE
  7012                           postdec2	equ	0xFDD
  7013                           fsr2h	equ	0xFDA
  7014                           fsr2l	equ	0xFD9
  7015                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    40
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK0           160     98     121
    BANK1           256     31      35

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 2
		 -> interruptHandler@s(BANK0[2]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 65
		 -> interruptHandler@sg(BANK0[65]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    ftoa@cp	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 65
		 -> ftoa@buf(BANK0[17]), STR_1(CODE[15]), interruptHandler@sg(BANK0[65]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S766$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 65
		 -> interruptHandler@sg(BANK0[65]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_putsUSART
    i2_setMask->i2_Write_b_eep
    _utoa->___lwdiv
    _readtemp->___ftmul
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _putsUSART->_ftoa
    _ftoa->___ftsub
    _sprintf->___llmod
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_readtemp
    ___ftmul->___ftdiv
    _ReadSHORT->_ReadUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_setDefault
    _setDefault->_setMask
    _setMask->_Write_b_eep

Critical Paths under _interruptHandler in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    5224
                                             17 BANK1     14    14      0
                       _Delay10KTCYx
                            _OpenADC
                          _OpenUSART
                         _Read_b_eep
                         _setDefault
                            _setMask
 ---------------------------------------------------------------------------------
 (1) _setDefault                                           6     4      2    2257
                                             11 BANK1      6     4      2
                         _Read_b_eep
                            _setMask
 ---------------------------------------------------------------------------------
 (1) _setMask                                              7     5      2    1345
                                              4 BANK1      7     5      2
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (2) _Write_b_eep                                          4     1      3     780
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (2) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Read_b_eep                                           2     0      2     762
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              7     4      3     304
                                              0 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruptHandler                                    98    98      0   27376
                                              0 BANK0     98    98      0
                          _ReadSHORT
                          _ReadUSART
                            ___ftadd
                               _ftoa
                          _putsUSART
                           _readtemp
                               _utoa
                         i2_Busy_eep
                       i2_Read_b_eep
                      i2_Write_b_eep
                          i2_setMask
 ---------------------------------------------------------------------------------
 (5) i2_setMask                                            7     5      2     809
                                              4 COMRAM     7     5      2
                         i2_Busy_eep
                      i2_Write_b_eep
 ---------------------------------------------------------------------------------
 (6) i2_Write_b_eep                                        4     1      3     484
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (6) i2_Busy_eep                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i2_Read_b_eep                                         2     0      2     178
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1928
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     418
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _readtemp                                            10     7      3    7915
                                             42 COMRAM    10     7      3
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                         _SetChanADC
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    2597
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             4     1      3    2306
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) _SetChanADC                                           2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _putsUSART                                            4     2      2     514
                                             85 COMRAM     4     2      2
                         _WriteUSART
                            ___ftadd (ARG)
                               _ftoa (ARG)
                           _readtemp (ARG)
 ---------------------------------------------------------------------------------
 (6) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ftoa                                                15    10      5   11621
                                             70 COMRAM    15    10      5
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                           _readtemp (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             31    19     12    2099
                                             22 COMRAM    31    19     12
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     287
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (6) ___lltoft                                             9     5      4    2220
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     380
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftsub                                              6     0      6    3560
                                             64 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    3285
                                             52 COMRAM    12     6      6
                           ___ftpack
                           _readtemp (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     109
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    2771
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2087
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (5) _ReadSHORT                                            5     3      2      48
                                              1 COMRAM     5     3      2
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (5) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _OpenADC
   _OpenUSART
   _Read_b_eep
   _setDefault
     _Read_b_eep
     _setMask
       _Busy_eep
       _Write_b_eep
   _setMask
     _Busy_eep
     _Write_b_eep

 _interruptHandler (ROOT)
   _ReadSHORT
     _ReadUSART
   _ReadUSART
   ___ftadd
     ___ftpack
     _readtemp (ARG)
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
   _ftoa
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _readtemp (ARG)
           _BusyADC
           _ConvertADC
           _ReadADC
           _SetChanADC
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
     ___lltoft
       ___ftpack
     _readtemp (ARG)
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
     _sprintf (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _putsUSART
     _WriteUSART
     ___ftadd (ARG)
       ___ftpack
       _readtemp (ARG)
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
     _ftoa (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _readtemp (ARG)
             _BusyADC
             _ConvertADC
             _ReadADC
             _SetChanADC
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
       ___lltoft
         ___ftpack
       _readtemp (ARG)
         _BusyADC
         _ConvertADC
         _ReadADC
         _SetChanADC
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
       _sprintf (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
     _readtemp (ARG)
       _BusyADC
       _ConvertADC
       _ReadADC
       _SetChanADC
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
   _readtemp
     _BusyADC
     _ConvertADC
     _ReadADC
     _SetChanADC
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
   _utoa
     ___lwdiv
     ___lwmod
   i2_Busy_eep
   i2_Read_b_eep
   i2_Write_b_eep
   i2_setMask
     i2_Busy_eep
     i2_Write_b_eep

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1F      23       6       13.7%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     62      79       4       75.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5C       1       96.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F8       7        0.0%
DATA                 0      0      F8       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Nov 25 01:20:57 2014

                         l97 09E4                           _WR 007D31          ___wmul@multiplicand 0003  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 ___ftadd@exp1 0040  
               ___ftadd@exp2 003F                 ___ftadd@sign 003E                          l112 0AE6  
                        l206 0CC0                          l306 1B68                          l333 1990  
                        l360 1694                          l364 16AE                          l365 16B0  
                        l366 16BC                          l631 1AEE                          l367 16BE  
                        l288 1664                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
               __CFG_BORV$22 000000         __size_of_Write_b_eep 003E                          wreg 000FE8  
                 ReadSHORT@d 0005                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0016  
               ___ftdiv@sign 001B                         l2633 1696                         l2625 1684  
                       l2901 0ACC                         l2831 08D0                         l2825 08A6  
                       l2861 09E8                         l2853 097C                         l2855 098A  
                       l2895 0AA4                         l2879 0A48                         STR_1 0529  
                       STR_2 0538                         u2015 0D16                         u2025 0D48  
                       u2035 0D80                         u2045 0DBA                         u1705 199E  
                       u3217 08AE                         u1706 19A0                         u3227 08C2  
                       u3237 0992                         u3247 0A36                         u3257 0A92  
                       u3267 0AAC                         u2900 09BA                         u3277 0AC0  
                       u3287 1AF6                         u2906 09BC                         _chan 005A  
                       _main 087E                         _ftoa 0E06     __end_of_interruptHandler 04C8  
               ___ftpack@arg 0001                 ___ftpack@exp 0004                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       _utoa 1540                         pclat 000FFA                __CFG_BOREN$ON 000000  
     __size_ofi2_Write_b_eep 0038                         prodh 000FF4                         prodl 000FF3  
                       start 04C8                __CFG_IESO$OFF 000000                 ___ftmul@cntr 0029  
               ___ftmul@sign 002A              __end_of_BusyADC 1B5E              __end_of_ReadADC 1B68  
            __end_of_OpenADC 1668                 ___fttol@exp1 0039                 ___fttol@lval 0035  
                      ?_main 0001                        ?_ftoa 0047                        _EEADR 000FA9  
            __end_of___ftadd 0C96              __end_of___ftdiv 13EE              __end_of___ftneg 1AAC  
                      _ANSEL 000F7E              __end_of___lldiv 176C                        ?_utoa 0008  
            __end_of___ftmul 1222              __end_of___llmod 17D2              __end_of___ftsub 1A12  
            __end_of___fttol 1132              __end_of___lwdiv 18DC                        i2l120 1A22  
                      i2l200 042A              __end_of___lwmod 1966                        i2l203 048E  
                      i2l206 0F4C                        i2l142 00A8                        i2l151 00FC  
                      i2l135 0098                        i2l145 048A                        i2l137 0094  
                      i2l306 1B6E                        i2l171 02B6                        i2l163 021A  
                      i2l155 0132                        i2l147 00C6                __CFG_WDTEN$ON 000000  
                      i2l333 19CA                        i2l181 0318                        i2l238 0694  
                      i2l174 02D6                        i2l167 0254                        i2l159 01A6  
                      i2l192 03C6                        i2l185 033A                        i2l178 02F8  
                      i2l196 03F0                        i2l188 035A                        i2l390 1ADA  
                      _FVREN 007DA7                        i2l377 17D2                        i2l901 17C0  
                      i2l815 1A9E                        i2l762 0B5C                        i2l860 15C0  
                      i2l773 0C08                        i2l782 0C24                        i2l758 0B30  
                      i2l793 13BC                        i2l954 18D2                        i2l891 175A  
                      i2l964 195C                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _PORTC 000F82                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TXREG 000FAD  
      __size_of_Delay10KTCYx 001C                        _TXSTA 000FAC                __CFG_PWRT$OFF 000000  
     interruptHandler@defaut 00BD                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
               ___lltoft@exp 0011               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               Read_b_eep@badd 0100               __CFG_EBTRB$OFF 000000  
              ___awtoft@sign 000C              __end_of_dpowers 0529       Write_b_eep@GIE_BIT_VAL 0103  
            __end_of_isdigit 1ACC                ___ftpack@sign 0005                        main@i 011D  
            __end_of_setMask 0E06                   _ConvertADC 1B74                        ftoa@f 0047  
                      ftoa@l 0050                        tablat 000FF5                  ?i2_Busy_eep 0001  
                      utoa@c 0010                        utoa@v 000E                        status 000FD8  
            __end_of_sprintf 087E               __CFG_HFOFST$ON 000000               WriteUSART@data 0001  
             __CFG_MCLRE$OFF 000000              __initialization 1A3A                 __end_of_main 0AEA  
               __end_of_ftoa 0F2E                 __end_of_utoa 15E4                   _Read_b_eep 1B1C  
               _Delay10KTCYx 1AEA             __end_of_Busy_eep 1B6E           __size_ofi2_setMask 010E  
                     ??_main 0111                       ??_ftoa 004C                ___fttol@sign1 0034  
                     ??_utoa 000E                __activetblptr 000002                i2_Write_b_eep 19A4  
                 _SetChanADC 1B06                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0             ___llmod@dividend 000E                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _EEDATA 000FA8                       _EECON2 000FA7  
           __end_of___awtoft 1924             __end_of___ftpack 1540                       _ANSELH 000F7F  
               _ADCStringVal 00C2             __end_of___lltoft 188A                       _HLVDL0 007E90  
                     _HLVDL1 007E91                       _HLVDL2 007E92                       _HLVDL3 007E93  
                     _HLVDIE 007D02                       _HLVDIF 007D0A                       _HLVDEN 007E94  
                     i2l2021 14A8                       i2l2101 0B3E                       i2l2033 14F4  
                     i2l2025 14B6                       i2l2035 1512                       i2l2027 14C0  
                     i2l2131 0BC6                       i2l2123 0B9A                       i2l2107 0B6A  
                     i2l2037 151C                       i2l2029 14DE                       i2l2141 0BF8  
                     i2l2133 0BCE                       i2l2301 066C                       i2l2143 0C02  
                     i2l2135 0BD6                       i2l2129 0BBC                       i2l2171 1718  
                     i2l2083 1AC4                       i2l2331 072C                       i2l2307 06B4  
                     i2l2149 0C40                       i2l2181 174C                       i2l2173 171C  
                     i2l2317 06F0                       i2l2261 054E                       i2l2159 0C70  
                     i2l2191 178A                       i2l2343 078C                       i2l2335 0748  
                     i2l2407 1396                       i2l2433 117E                       i2l2169 170C  
                     i2l2193 178E                       i2l2353 07B4                       i2l2345 0794  
                     i2l2273 0590                       i2l2281 05EC                       i2l2361 085A  
                     i2l2451 11C0                       i2l2427 1158                       i2l2515 10D2  
                     i2l2339 0768                       i2l2363 0870                       i2l2291 0642  
                     i2l2267 0568                       i2l2461 11E8                       i2l2533 1120  
                     i2l2525 10FA                       i2l2541 1840                       i2l2197 17B2  
                     i2l2189 177E                       i2l2293 0658                       i2l2373 1B4C  
                     i2l2381 1332                       i2l2447 11B0                       i2l2527 1106  
                     i2l2519 10E2                       i2l2359 084A                       i2l2295 0662  
                     i2l2287 060C                       i2l2457 11D8                       i2l2529 110A  
                     i2l2297 0666                       i2l2553 18A0                       i2l2539 1834  
                     i2l2483 1900                       i2l2387 1358                       i2l2707 1418  
                     i2l2555 18A8                       u230_41 131C                       i2l2565 18C8  
                     i2l2557 18AC                       i2l2581 1952                       i2l2573 1932  
                     i2l2575 193A                       i2l2719 1548                       i2l2497 1066  
                     i2l2577 193E                       i2l2729 1582                       i2l2759 0E54  
                     i2l2699 13F8                       u232_41 1342                       i2l2999 043C  
                     u235_41 1142                       u243_41 104C                       u237_41 1168  
                     u173_41 0AFA           __size_of_ReadSHORT 0028                       u174_41 0B0E  
         __size_of_ReadUSART 001E                       _SBOREN 007E86        _interruptHandler$2080 00B3  
                     _SPBRGH 000FB0                    ??_BusyADC 0001                    ??_ReadADC 0003  
         interruptHandler@sg 0072                    ??_OpenADC 0103               __CFG_XINST$OFF 000000  
    interruptHandler@command 00B8           __size_of_OpenUSART 0082                       ___wmul 1A60  
             readtemp@vfor12 0031                    ??___ftadd 003B               __CFG_STVREN$ON 000000  
                  ??___ftdiv 0013                    ??___ftneg 0004                    ??___lldiv 0009  
                  ??___ftmul 0022                    ??___llmod 0016                    ??___ftsub 0047  
                  ??___fttol 002F                    ??___lwdiv 0005                    ??___lwmod 0005  
                     clear_0 1A4A                setDefault@set 010B             __end_of_readtemp 1498  
             ?i2_Write_b_eep 0001                       ftoa@cp 0054          __size_ofi2_Busy_eep 0006  
      ___ftmul@f3_as_product 0026                    ??_isdigit 0001                    ??_setMask 0106  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                    ??_sprintf 0023                  ?_ConvertADC 0001  
                 __accesstop 0060      __end_of__initialization 1A56            __end_ofi2_setMask 103C  
            __CFG_PBADEN$OFF 000000                   ___ftadd@f1 0035                   ___ftadd@f2 0038  
                 ___ftdiv@f1 000D                   ___ftdiv@f2 0010                   ___ftdiv@f3 0017  
                 ___ftneg@f1 0001                   ___awtoft@c 0009                   ___ftmul@f1 001C  
                 ___ftmul@f2 001F                   ___ftsub@f1 0041                   ___ftsub@f2 0044  
                 ___fttol@f1 002B                   _WriteUSART 1B40               __pcstackCOMRAM 0001  
                 ___lltoft@c 0009                  ?_Read_b_eep 0100            __end_of_ReadSHORT 1A3A  
          __end_of_ReadUSART 1AEA                  ?_SetChanADC 0001                ReadUSART@data 0001  
          __end_of_OpenUSART 16EA                 sprintf@width 0031                   __pbssBANK0 00C2  
                 __pbssBANK1 011F                    ?_Busy_eep 0001            ?_interruptHandler 0001  
         ??_interruptHandler 0060                  setMask@data 0104                      ?___wmul 0001  
              putsUSART@data 0056              ??i2_Write_b_eep 0004          __size_of_ConvertADC 0004  
                  ?___awtoft 0009                    ?___ftpack 0001                ??_Write_b_eep 0103  
                  ?___lltoft 0009                      _VDIRMAG 007E97              __CFG_WDTPS$1024 000000  
         __size_of_putsUSART 005C          __size_of_Read_b_eep 0012                 ??i2_Busy_eep 0001  
                 ??_Busy_eep 0100          interruptHandler@dev 00BF                      _BusyADC 1B52  
                    _ReadADC 1B5E                    ?_readtemp 002B                      _OpenADC 15E4  
                    __Hparam 0000              readtemp@channel 002B          __size_of_SetChanADC 0016  
                    __Lparam 0000                  ?_WriteUSART 0001                      ___ftadd 0AEA  
                    ___ftdiv 130C                      ___ftneg 1A86                      ___lldiv 16EA  
            __size_of___wmul 0026                      ___ftmul 1132                      ___llmod 176C  
                    ___ftsub 19DC                      ___fttol 103C                      ___lwdiv 188A  
                    ___lwmod 1924                 __psmallconst 0500                      __pcinit 1A3A  
                 ??___awtoft 000C                   ??___ftpack 0006                      __ramtop 0200  
                 ??___lltoft 000D                      __ptext0 087E                      __ptext1 1222  
                    __ptext2 0C96                      __ptext3 1966                      __ptext4 1B68  
                    __ptext5 1B1C                      __ptext6 1668                      __ptext7 15E4  
                    __ptext8 1AEA                      _dpowers 0501           __end_ofi2_Busy_eep 1B74  
                    _isdigit 1AAC                      _setMask 0C96            i2Write_b_eep@badd 0001  
          i2Write_b_eep@bdat 0003                   _setDefault 1222          __end_of_Write_b_eep 19A4  
             OpenADC@config2 0100                      _sprintf 0544         end_of_initialization 1A56  
                    ftoa@buf 00C8                      ftoa@rem 004C                __Lmediumconst 0000  
                 ??_readtemp 002E              ___lldiv@divisor 0005              ___lldiv@counter 000D  
                  _RCSTAbits 000FAB                      postdec2 000FDD                 i2setMask@out 000A  
                    postinc0 000FEE                      postinc2 000FDE            __end_of_putsUSART 182E  
              ?i2_Read_b_eep 0001                      utoa@buf 0008                      utoa@val 000A  
                  _PORTAbits 000F80                    _PORTBbits 000F81     i2Write_b_eep@GIE_BIT_VAL 0004  
                  _TRISCbits 000F94          __size_of_WriteUSART 0012                 ??_ConvertADC 0001  
                ___ftdiv@exp 001A                    _TXSTAbits 000FAC                    i2_setMask 0F2E  
                ___ftmul@exp 0025               ??i2_Read_b_eep 0003                 ??_Read_b_eep 0102  
             __end_of___wmul 1A86                  _BAUDCONbits 000FB8                 readtemp@vadc 0033  
         __end_of_ConvertADC 1B78                  _Write_b_eep 1966                 ??_SetChanADC 0001  
                  _ReadSHORT 1A12          start_initialization 1A3A                    _ReadUSART 1ACC  
                ?_setDefault 010B                   ftoa@status 004A                    _OpenUSART 1668  
         __end_of_Read_b_eep 1B2E              ___llmod@divisor 0012              ___llmod@counter 0016  
          __size_of_Busy_eep 0006            interruptHandler@i 00BB            interruptHandler@s 00B9  
                 ?i2_setMask 0005           __end_of_SetChanADC 1B1C                     ??___wmul 0005  
           __CFG_LPT1OSC$OFF 000000    __size_of_interruptHandler 04C0            __size_of___awtoft 0048  
          __size_of___ftpack 00A8            __size_of___lltoft 005C                  __pbssCOMRAM 005A  
                 ?_ReadSHORT 0002                   ?_ReadUSART 0001                __pcstackBANK0 0060  
              __pcstackBANK1 0100          __end_of__stringdata 0543                 _isdigit$1828 0002  
                 ?_OpenUSART 0100                  sprintf@_val 002C                  sprintf@flag 0029  
                sprintf@prec 0033                     ?_BusyADC 0001                     ?_ReadADC 0001  
          OpenADC@portconfig 0101                     ?_OpenADC 0100             ___lwdiv@dividend 0001  
          __size_of_readtemp 00AA            __CFG_CCP2MX$PORTC 000000                 ??_WriteUSART 0001  
                  __pintcode 0008                   setMask@out 0109  interruptHandler@device_mask 00B6  
        __size_of_setDefault 00EA                     ?___ftadd 0035                     ?___ftdiv 000D  
                   ?___ftneg 0001                     ?___lldiv 0001                     ?___ftmul 001C  
                   ?___llmod 000E                     ?___ftsub 0041                     ?___fttol 002B  
              ?_Delay10KTCYx 0001                     ?___lwdiv 0001                     ?___lwmod 0001  
      __end_ofi2_Write_b_eep 19DC                    _globdata2 0121                  __smallconst 0500  
                   ?_isdigit 0001                    _globumask 00C6                     ?_setMask 0104  
           ___lwdiv@quotient 0005                     ?_sprintf 0017         __end_ofi2_Read_b_eep 1B40  
         __end_of_WriteUSART 1B52               ___wmul@product 0005                OpenADC@config 0106  
                   _PIE1bits 000F9D                  ??i2_setMask 0007                     i2u209_40 1B5A  
                   i2u330_47 007E                     i2u260_45 19D6                     i2u260_46 19D8  
                   i2u245_40 1084                     i2u245_45 107C                     i2u280_40 17F6  
                   i2u280_47 17EC                     i2u281_40 1826                     _PIR1bits 000F9E  
                   i2u281_47 181C                     i2u329_47 006A                     i2u283_45 0E24  
                   i2u285_45 0F8E                     i2u286_45 0FB2                     i2u287_45 0FDA  
                   i2u288_45 1004               ??_Delay10KTCYx 0100                   _ADCON0bits 000FC2  
                  _putsUSART 17D2                  __stringdata 0529                    main@i_710 011B  
                  main@i_709 0119            ___wmul@multiplier 0001              Write_b_eep@badd 0100  
            Write_b_eep@bdat 0102                    main@lastv 0115                  ??_ReadSHORT 0004  
                ??_ReadUSART 0001                    main@spbrg 0117             Delay10KTCYx@unit 0101  
       interruptHandler@data 00C1                  ??_OpenUSART 0102                     _Busy_eep 1B68  
            OpenUSART@config 0105                   _EECON1bits 000FA6             __size_of_BusyADC 000C  
           __size_of_ReadADC 000A                     __Hrparam 0000             __size_of_OpenADC 0084  
                   __Lrparam 0000             __size_of___ftadd 01AC             __size_of___ftdiv 00E2  
           __size_of___ftneg 0026             __size_of___lldiv 0082             __size_of___ftmul 00F0  
           __size_of___llmod 0066             __size_of___ftsub 0036             __size_of___fttol 00F6  
           __size_of___lwdiv 0052             __size_of___lwmod 0042                     ___awtoft 18DC  
                   ___ftpack 1498                 ?_Write_b_eep 0100                     ___lltoft 182E  
                  readtemp@v 002E                   ?_putsUSART 0056             _interruptHandler 0008  
           __size_of_isdigit 0020                 ??_setDefault 010D              ___lwdiv@divisor 0003  
           __size_of_setMask 0170              ___lwdiv@counter 0007                     __ptext10 0F2E  
                   __ptext11 19A4                     __ptext20 1B06                     __ptext12 1B6E  
                   __ptext21 1B5E                     __ptext13 1B2E                     __ptext30 176C  
                   __ptext22 1B74                     __ptext14 1540                     __ptext31 16EA  
                   __ptext23 1B52                     __ptext15 1924                     __ptext40 1ACC  
                   __ptext32 182E                     __ptext24 17D2                     __ptext16 188A  
                   __ptext33 103C                     __ptext25 1B40                     __ptext17 13EE  
                   __ptext34 19DC                     __ptext26 0E06                     __ptext18 130C  
                   __ptext35 0AEA                     __ptext27 0544                     __ptext19 18DC  
                   __ptext36 1A86                     __ptext28 1AAC                     __ptext37 1132  
                   __ptext29 1A60                     __ptext38 1498                     __ptext39 1A12  
           __size_of_sprintf 033A                     _globdata 011F                __size_of_main 026C  
              __size_of_ftoa 0128                __size_of_utoa 00A4                     _readtemp 13EE  
         __end_of_setDefault 130C                   _INTCONbits 000FF2        __size_ofi2_Read_b_eep 0012  
             OpenUSART@spbrg 0100                     isdigit@c 0003         __end_of_Delay10KTCYx 1B06  
                   intlevel2 0000                    sprintf@ap 002A                    sprintf@sp 0017  
           ___lwmod@dividend 0001             ___lldiv@dividend 0001            SetChanADC@channel 0002  
                 _OSCCONbits 000FD3             i2Read_b_eep@badd 0001                i2setMask@data 0005  
               i2_Read_b_eep 1B2E                  ??_putsUSART 0058                     utoa@base 000C  
                   sprintf@c 0035                     sprintf@f 0019             ___lldiv@quotient 0009  
            ___lwmod@divisor 0003              ___lwmod@counter 0005                   i2_Busy_eep 1B6E  
          __CFG_FOSC$INTIO67 000000                 _USART_Status 005C  
